{"tool": "ACTION_CREATE_DOCUMENT", "query": "Can you help me create a new project proposal document in PDF format titled 'Project_Alpha_Proposal.pdf'?", "answers": [{"id": 0, "name": "ACTION_CREATE_DOCUMENT", "arguments": {"mime_type": "application/pdf", "initial_name": "Project_Alpha_Proposal.pdf"}}], "tools": [{"name": "ACTION_CREATE_DOCUMENT", "description": "Creates a new document that app can write to. And user can select where they'd like to create it.\n\nInstead of selecting from existing PDF documents, \nthe ACTION_CREATE_DOCUMENT lets users select where they'd like to create a new document, such as within another app that manages the document's storage. \nAnd then return the URI location of document that you can read from and write to.", "arguments": {"mime_type": {"description": "The MIME type of the document to be created (e.g., \"text/plain\", \"application/pdf\").", "type": "str", "required": true}, "initial_name": {"description": "The suggested name for the new document.", "type": "str", "required": true}}, "returns": {"description": "A URI as a string pointing to the newly created document.\nReturns None if the operation is cancelled or fails.", "type": "Optional[str]"}, "examples": ["# Create a new text document\nnew_doc_uri = ACTION_CREATE_DOCUMENT(\"text/plain\", \"New Document.txt\")\n\n# Create a new PDF file\nnew_pdf_uri = ACTION_CREATE_DOCUMENT(\"application/pdf\", \"Report.pdf\")\n\n# Create a new image file\nnew_image_uri = ACTION_CREATE_DOCUMENT(\"image/jpeg\", \"Photo.jpg\")"]}]}
{"tool": "ACTION_CREATE_DOCUMENT", "query": "I need to make a new text file for my notes called 'MeetingNotes.txt'.", "answers": [{"id": 0, "name": "ACTION_CREATE_DOCUMENT", "arguments": {"mime_type": "text/plain", "initial_name": "MeetingNotes.txt"}}], "tools": [{"name": "ACTION_CREATE_DOCUMENT", "description": "Creates a new document that app can write to. And user can select where they'd like to create it.\n\nInstead of selecting from existing PDF documents, \nthe ACTION_CREATE_DOCUMENT lets users select where they'd like to create a new document, such as within another app that manages the document's storage. \nAnd then return the URI location of document that you can read from and write to.", "arguments": {"mime_type": {"description": "The MIME type of the document to be created (e.g., \"text/plain\", \"application/pdf\").", "type": "str", "required": true}, "initial_name": {"description": "The suggested name for the new document.", "type": "str", "required": true}}, "returns": {"description": "A URI as a string pointing to the newly created document.\nReturns None if the operation is cancelled or fails.", "type": "Optional[str]"}, "examples": ["# Create a new text document\nnew_doc_uri = ACTION_CREATE_DOCUMENT(\"text/plain\", \"New Document.txt\")\n\n# Create a new PDF file\nnew_pdf_uri = ACTION_CREATE_DOCUMENT(\"application/pdf\", \"Report.pdf\")\n\n# Create a new image file\nnew_image_uri = ACTION_CREATE_DOCUMENT(\"image/jpeg\", \"Photo.jpg\")"]}]}
{"tool": "ACTION_CREATE_DOCUMENT", "query": "Generate a new spreadsheet for our quarterly sales data, and name it 'Q4_Sales_Data.xlsx'.", "answers": [{"id": 0, "name": "ACTION_CREATE_DOCUMENT", "arguments": {"mime_type": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "initial_name": "Q4_Sales_Data.xlsx"}}], "tools": [{"name": "ACTION_CREATE_DOCUMENT", "description": "Creates a new document that app can write to. And user can select where they'd like to create it.\n\nInstead of selecting from existing PDF documents, \nthe ACTION_CREATE_DOCUMENT lets users select where they'd like to create a new document, such as within another app that manages the document's storage. \nAnd then return the URI location of document that you can read from and write to.", "arguments": {"mime_type": {"description": "The MIME type of the document to be created (e.g., \"text/plain\", \"application/pdf\").", "type": "str", "required": true}, "initial_name": {"description": "The suggested name for the new document.", "type": "str", "required": true}}, "returns": {"description": "A URI as a string pointing to the newly created document.\nReturns None if the operation is cancelled or fails.", "type": "Optional[str]"}, "examples": ["# Create a new text document\nnew_doc_uri = ACTION_CREATE_DOCUMENT(\"text/plain\", \"New Document.txt\")\n\n# Create a new PDF file\nnew_pdf_uri = ACTION_CREATE_DOCUMENT(\"application/pdf\", \"Report.pdf\")\n\n# Create a new image file\nnew_image_uri = ACTION_CREATE_DOCUMENT(\"image/jpeg\", \"Photo.jpg\")"]}]}
{"tool": "ACTION_CREATE_DOCUMENT", "query": "I want to create a document to save some images of my artwork; please create a file named 'Art_Collection.jpeg'.", "answers": [{"id": 0, "name": "ACTION_CREATE_DOCUMENT", "arguments": {"mime_type": "image/jpeg", "initial_name": "Art_Collection.jpeg"}}], "tools": [{"name": "ACTION_CREATE_DOCUMENT", "description": "Creates a new document that app can write to. And user can select where they'd like to create it.\n\nInstead of selecting from existing PDF documents, \nthe ACTION_CREATE_DOCUMENT lets users select where they'd like to create a new document, such as within another app that manages the document's storage. \nAnd then return the URI location of document that you can read from and write to.", "arguments": {"mime_type": {"description": "The MIME type of the document to be created (e.g., \"text/plain\", \"application/pdf\").", "type": "str", "required": true}, "initial_name": {"description": "The suggested name for the new document.", "type": "str", "required": true}}, "returns": {"description": "A URI as a string pointing to the newly created document.\nReturns None if the operation is cancelled or fails.", "type": "Optional[str]"}, "examples": ["# Create a new text document\nnew_doc_uri = ACTION_CREATE_DOCUMENT(\"text/plain\", \"New Document.txt\")\n\n# Create a new PDF file\nnew_pdf_uri = ACTION_CREATE_DOCUMENT(\"application/pdf\", \"Report.pdf\")\n\n# Create a new image file\nnew_image_uri = ACTION_CREATE_DOCUMENT(\"image/jpeg\", \"Photo.jpg\")"]}]}
{"tool": "ACTION_CREATE_DOCUMENT", "query": "Please initiate the creation of a PowerPoint presentation file titled 'Annual_Presentation_2023.pptx'.", "answers": [{"id": 0, "name": "ACTION_CREATE_DOCUMENT", "arguments": {"mime_type": "application/vnd.ms-powerpoint", "initial_name": "Annual_Presentation_2023.pptx"}}], "tools": [{"name": "ACTION_CREATE_DOCUMENT", "description": "Creates a new document that app can write to. And user can select where they'd like to create it.\n\nInstead of selecting from existing PDF documents, \nthe ACTION_CREATE_DOCUMENT lets users select where they'd like to create a new document, such as within another app that manages the document's storage. \nAnd then return the URI location of document that you can read from and write to.", "arguments": {"mime_type": {"description": "The MIME type of the document to be created (e.g., \"text/plain\", \"application/pdf\").", "type": "str", "required": true}, "initial_name": {"description": "The suggested name for the new document.", "type": "str", "required": true}}, "returns": {"description": "A URI as a string pointing to the newly created document.\nReturns None if the operation is cancelled or fails.", "type": "Optional[str]"}, "examples": ["# Create a new text document\nnew_doc_uri = ACTION_CREATE_DOCUMENT(\"text/plain\", \"New Document.txt\")\n\n# Create a new PDF file\nnew_pdf_uri = ACTION_CREATE_DOCUMENT(\"application/pdf\", \"Report.pdf\")\n\n# Create a new image file\nnew_image_uri = ACTION_CREATE_DOCUMENT(\"image/jpeg\", \"Photo.jpg\")"]}]}
{"tool": "ACTION_CREATE_DOCUMENT", "query": "I need a new document created in DOCX format, preferably with a name 'Research_Document_2023.docx'.", "answers": [{"id": 0, "name": "ACTION_CREATE_DOCUMENT", "arguments": {"mime_type": "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "initial_name": "Research_Document_2023.docx"}}], "tools": [{"name": "ACTION_CREATE_DOCUMENT", "description": "Creates a new document that app can write to. And user can select where they'd like to create it.\n\nInstead of selecting from existing PDF documents, \nthe ACTION_CREATE_DOCUMENT lets users select where they'd like to create a new document, such as within another app that manages the document's storage. \nAnd then return the URI location of document that you can read from and write to.", "arguments": {"mime_type": {"description": "The MIME type of the document to be created (e.g., \"text/plain\", \"application/pdf\").", "type": "str", "required": true}, "initial_name": {"description": "The suggested name for the new document.", "type": "str", "required": true}}, "returns": {"description": "A URI as a string pointing to the newly created document.\nReturns None if the operation is cancelled or fails.", "type": "Optional[str]"}, "examples": ["# Create a new text document\nnew_doc_uri = ACTION_CREATE_DOCUMENT(\"text/plain\", \"New Document.txt\")\n\n# Create a new PDF file\nnew_pdf_uri = ACTION_CREATE_DOCUMENT(\"application/pdf\", \"Report.pdf\")\n\n# Create a new image file\nnew_image_uri = ACTION_CREATE_DOCUMENT(\"image/jpeg\", \"Photo.jpg\")"]}]}
{"tool": "ACTION_CREATE_DOCUMENT", "query": "Assist me in generating a Markdown file named 'README.md' for my new project.", "answers": [{"id": 0, "name": "ACTION_CREATE_DOCUMENT", "arguments": {"mime_type": "text/markdown", "initial_name": "README.md"}}], "tools": [{"name": "ACTION_CREATE_DOCUMENT", "description": "Creates a new document that app can write to. And user can select where they'd like to create it.\n\nInstead of selecting from existing PDF documents, \nthe ACTION_CREATE_DOCUMENT lets users select where they'd like to create a new document, such as within another app that manages the document's storage. \nAnd then return the URI location of document that you can read from and write to.", "arguments": {"mime_type": {"description": "The MIME type of the document to be created (e.g., \"text/plain\", \"application/pdf\").", "type": "str", "required": true}, "initial_name": {"description": "The suggested name for the new document.", "type": "str", "required": true}}, "returns": {"description": "A URI as a string pointing to the newly created document.\nReturns None if the operation is cancelled or fails.", "type": "Optional[str]"}, "examples": ["# Create a new text document\nnew_doc_uri = ACTION_CREATE_DOCUMENT(\"text/plain\", \"New Document.txt\")\n\n# Create a new PDF file\nnew_pdf_uri = ACTION_CREATE_DOCUMENT(\"application/pdf\", \"Report.pdf\")\n\n# Create a new image file\nnew_image_uri = ACTION_CREATE_DOCUMENT(\"image/jpeg\", \"Photo.jpg\")"]}]}
{"tool": "ACTION_CREATE_DOCUMENT", "query": "Let's create a new Photoshop file for my digital painting. Name the file 'Landscape.ps'.", "answers": [{"id": 0, "name": "ACTION_CREATE_DOCUMENT", "arguments": {"mime_type": "image/vnd.adobe.photoshop", "initial_name": "Landscape.ps"}}], "tools": [{"name": "ACTION_CREATE_DOCUMENT", "description": "Creates a new document that app can write to. And user can select where they'd like to create it.\n\nInstead of selecting from existing PDF documents, \nthe ACTION_CREATE_DOCUMENT lets users select where they'd like to create a new document, such as within another app that manages the document's storage. \nAnd then return the URI location of document that you can read from and write to.", "arguments": {"mime_type": {"description": "The MIME type of the document to be created (e.g., \"text/plain\", \"application/pdf\").", "type": "str", "required": true}, "initial_name": {"description": "The suggested name for the new document.", "type": "str", "required": true}}, "returns": {"description": "A URI as a string pointing to the newly created document.\nReturns None if the operation is cancelled or fails.", "type": "Optional[str]"}, "examples": ["# Create a new text document\nnew_doc_uri = ACTION_CREATE_DOCUMENT(\"text/plain\", \"New Document.txt\")\n\n# Create a new PDF file\nnew_pdf_uri = ACTION_CREATE_DOCUMENT(\"application/pdf\", \"Report.pdf\")\n\n# Create a new image file\nnew_image_uri = ACTION_CREATE_DOCUMENT(\"image/jpeg\", \"Photo.jpg\")"]}]}
{"tool": "ACTION_CREATE_DOCUMENT", "query": "Set up a new recipe book as a PDF called 'Holiday_Recipes_2023.pdf'.", "answers": [{"id": 0, "name": "ACTION_CREATE_DOCUMENT", "arguments": {"mime_type": "application/pdf", "initial_name": "Holiday_Recipes_2023.pdf"}}], "tools": [{"name": "ACTION_CREATE_DOCUMENT", "description": "Creates a new document that app can write to. And user can select where they'd like to create it.\n\nInstead of selecting from existing PDF documents, \nthe ACTION_CREATE_DOCUMENT lets users select where they'd like to create a new document, such as within another app that manages the document's storage. \nAnd then return the URI location of document that you can read from and write to.", "arguments": {"mime_type": {"description": "The MIME type of the document to be created (e.g., \"text/plain\", \"application/pdf\").", "type": "str", "required": true}, "initial_name": {"description": "The suggested name for the new document.", "type": "str", "required": true}}, "returns": {"description": "A URI as a string pointing to the newly created document.\nReturns None if the operation is cancelled or fails.", "type": "Optional[str]"}, "examples": ["# Create a new text document\nnew_doc_uri = ACTION_CREATE_DOCUMENT(\"text/plain\", \"New Document.txt\")\n\n# Create a new PDF file\nnew_pdf_uri = ACTION_CREATE_DOCUMENT(\"application/pdf\", \"Report.pdf\")\n\n# Create a new image file\nnew_image_uri = ACTION_CREATE_DOCUMENT(\"image/jpeg\", \"Photo.jpg\")"]}]}
{"tool": "ACTION_CREATE_DOCUMENT", "query": "I require a programming script file named 'script.py'. Could you create it for me?", "answers": [{"id": 0, "name": "ACTION_CREATE_DOCUMENT", "arguments": {"mime_type": "text/plain", "initial_name": "script.py"}}], "tools": [{"name": "ACTION_CREATE_DOCUMENT", "description": "Creates a new document that app can write to. And user can select where they'd like to create it.\n\nInstead of selecting from existing PDF documents, \nthe ACTION_CREATE_DOCUMENT lets users select where they'd like to create a new document, such as within another app that manages the document's storage. \nAnd then return the URI location of document that you can read from and write to.", "arguments": {"mime_type": {"description": "The MIME type of the document to be created (e.g., \"text/plain\", \"application/pdf\").", "type": "str", "required": true}, "initial_name": {"description": "The suggested name for the new document.", "type": "str", "required": true}}, "returns": {"description": "A URI as a string pointing to the newly created document.\nReturns None if the operation is cancelled or fails.", "type": "Optional[str]"}, "examples": ["# Create a new text document\nnew_doc_uri = ACTION_CREATE_DOCUMENT(\"text/plain\", \"New Document.txt\")\n\n# Create a new PDF file\nnew_pdf_uri = ACTION_CREATE_DOCUMENT(\"application/pdf\", \"Report.pdf\")\n\n# Create a new image file\nnew_image_uri = ACTION_CREATE_DOCUMENT(\"image/jpeg\", \"Photo.jpg\")"]}]}
{"tool": "ACTION_CREATE_DOCUMENT", "query": "Commission a new musical composition in MIDI format, titled 'New_Composition.mid'.", "answers": [{"id": 0, "name": "ACTION_CREATE_DOCUMENT", "arguments": {"mime_type": "audio/midi", "initial_name": "New_Composition.mid"}}], "tools": [{"name": "ACTION_CREATE_DOCUMENT", "description": "Creates a new document that app can write to. And user can select where they'd like to create it.\n\nInstead of selecting from existing PDF documents, \nthe ACTION_CREATE_DOCUMENT lets users select where they'd like to create a new document, such as within another app that manages the document's storage. \nAnd then return the URI location of document that you can read from and write to.", "arguments": {"mime_type": {"description": "The MIME type of the document to be created (e.g., \"text/plain\", \"application/pdf\").", "type": "str", "required": true}, "initial_name": {"description": "The suggested name for the new document.", "type": "str", "required": true}}, "returns": {"description": "A URI as a string pointing to the newly created document.\nReturns None if the operation is cancelled or fails.", "type": "Optional[str]"}, "examples": ["# Create a new text document\nnew_doc_uri = ACTION_CREATE_DOCUMENT(\"text/plain\", \"New Document.txt\")\n\n# Create a new PDF file\nnew_pdf_uri = ACTION_CREATE_DOCUMENT(\"application/pdf\", \"Report.pdf\")\n\n# Create a new image file\nnew_image_uri = ACTION_CREATE_DOCUMENT(\"image/jpeg\", \"Photo.jpg\")"]}]}
{"tool": "ACTION_CREATE_DOCUMENT", "query": "Start a new report document for this month's performance review named 'Monthly_Performance_Report.pdf'.", "answers": [{"id": 0, "name": "ACTION_CREATE_DOCUMENT", "arguments": {"mime_type": "application/pdf", "initial_name": "Monthly_Performance_Report.pdf"}}], "tools": [{"name": "ACTION_CREATE_DOCUMENT", "description": "Creates a new document that app can write to. And user can select where they'd like to create it.\n\nInstead of selecting from existing PDF documents, \nthe ACTION_CREATE_DOCUMENT lets users select where they'd like to create a new document, such as within another app that manages the document's storage. \nAnd then return the URI location of document that you can read from and write to.", "arguments": {"mime_type": {"description": "The MIME type of the document to be created (e.g., \"text/plain\", \"application/pdf\").", "type": "str", "required": true}, "initial_name": {"description": "The suggested name for the new document.", "type": "str", "required": true}}, "returns": {"description": "A URI as a string pointing to the newly created document.\nReturns None if the operation is cancelled or fails.", "type": "Optional[str]"}, "examples": ["# Create a new text document\nnew_doc_uri = ACTION_CREATE_DOCUMENT(\"text/plain\", \"New Document.txt\")\n\n# Create a new PDF file\nnew_pdf_uri = ACTION_CREATE_DOCUMENT(\"application/pdf\", \"Report.pdf\")\n\n# Create a new image file\nnew_image_uri = ACTION_CREATE_DOCUMENT(\"image/jpeg\", \"Photo.jpg\")"]}]}
{"tool": "ACTION_CREATE_DOCUMENT", "query": "Create a new file for storing HTML code for the webpage, name it 'index.html'.", "answers": [{"id": 0, "name": "ACTION_CREATE_DOCUMENT", "arguments": {"mime_type": "text/html", "initial_name": "index.html"}}], "tools": [{"name": "ACTION_CREATE_DOCUMENT", "description": "Creates a new document that app can write to. And user can select where they'd like to create it.\n\nInstead of selecting from existing PDF documents, \nthe ACTION_CREATE_DOCUMENT lets users select where they'd like to create a new document, such as within another app that manages the document's storage. \nAnd then return the URI location of document that you can read from and write to.", "arguments": {"mime_type": {"description": "The MIME type of the document to be created (e.g., \"text/plain\", \"application/pdf\").", "type": "str", "required": true}, "initial_name": {"description": "The suggested name for the new document.", "type": "str", "required": true}}, "returns": {"description": "A URI as a string pointing to the newly created document.\nReturns None if the operation is cancelled or fails.", "type": "Optional[str]"}, "examples": ["# Create a new text document\nnew_doc_uri = ACTION_CREATE_DOCUMENT(\"text/plain\", \"New Document.txt\")\n\n# Create a new PDF file\nnew_pdf_uri = ACTION_CREATE_DOCUMENT(\"application/pdf\", \"Report.pdf\")\n\n# Create a new image file\nnew_image_uri = ACTION_CREATE_DOCUMENT(\"image/jpeg\", \"Photo.jpg\")"]}]}
{"tool": "ACTION_CREATE_DOCUMENT", "query": "I need to prepare a new eBook in the EPUB format. Name it 'My_Novel.epub'.", "answers": [{"id": 0, "name": "ACTION_CREATE_DOCUMENT", "arguments": {"mime_type": "application/epub+zip", "initial_name": "My_Novel.epub"}}], "tools": [{"name": "ACTION_CREATE_DOCUMENT", "description": "Creates a new document that app can write to. And user can select where they'd like to create it.\n\nInstead of selecting from existing PDF documents, \nthe ACTION_CREATE_DOCUMENT lets users select where they'd like to create a new document, such as within another app that manages the document's storage. \nAnd then return the URI location of document that you can read from and write to.", "arguments": {"mime_type": {"description": "The MIME type of the document to be created (e.g., \"text/plain\", \"application/pdf\").", "type": "str", "required": true}, "initial_name": {"description": "The suggested name for the new document.", "type": "str", "required": true}}, "returns": {"description": "A URI as a string pointing to the newly created document.\nReturns None if the operation is cancelled or fails.", "type": "Optional[str]"}, "examples": ["# Create a new text document\nnew_doc_uri = ACTION_CREATE_DOCUMENT(\"text/plain\", \"New Document.txt\")\n\n# Create a new PDF file\nnew_pdf_uri = ACTION_CREATE_DOCUMENT(\"application/pdf\", \"Report.pdf\")\n\n# Create a new image file\nnew_image_uri = ACTION_CREATE_DOCUMENT(\"image/jpeg\", \"Photo.jpg\")"]}]}
{"tool": "ACTION_CREATE_DOCUMENT", "query": "Craft a new video file format for my project documentation to be called 'Project_Documentation.mp4'.", "answers": [{"id": 0, "name": "ACTION_CREATE_DOCUMENT", "arguments": {"mime_type": "video/mp4", "initial_name": "Project_Documentation.mp4"}}], "tools": [{"name": "ACTION_CREATE_DOCUMENT", "description": "Creates a new document that app can write to. And user can select where they'd like to create it.\n\nInstead of selecting from existing PDF documents, \nthe ACTION_CREATE_DOCUMENT lets users select where they'd like to create a new document, such as within another app that manages the document's storage. \nAnd then return the URI location of document that you can read from and write to.", "arguments": {"mime_type": {"description": "The MIME type of the document to be created (e.g., \"text/plain\", \"application/pdf\").", "type": "str", "required": true}, "initial_name": {"description": "The suggested name for the new document.", "type": "str", "required": true}}, "returns": {"description": "A URI as a string pointing to the newly created document.\nReturns None if the operation is cancelled or fails.", "type": "Optional[str]"}, "examples": ["# Create a new text document\nnew_doc_uri = ACTION_CREATE_DOCUMENT(\"text/plain\", \"New Document.txt\")\n\n# Create a new PDF file\nnew_pdf_uri = ACTION_CREATE_DOCUMENT(\"application/pdf\", \"Report.pdf\")\n\n# Create a new image file\nnew_image_uri = ACTION_CREATE_DOCUMENT(\"image/jpeg\", \"Photo.jpg\")"]}]}
{"query": "I want to update John's contact email to john.doe@example.com, his contact URI is 'content://contacts/people/1'", "answers": [{"id": 0, "name": "ACTION_EDIT_CONTACT", "arguments": {"contact_uri": "content://contacts/people/1", "contact_info": {"email": "john.doe@example.com"}}}], "tools": [{"name": "ACTION_EDIT_CONTACT", "description": "Edit an existing contact.\n\nThis function allows the user to edit the details of a specific contact\nbased on the provided contact URI. Additional contact information can be\nprovided to pre-fill certain fields in the edit form.\nNote:\n    The contact_uri can be obtained in two primary ways:\n    1. Using the contact URI returned by the ACTION_PICK function.\n    2. Accessing the list of all contacts directly (requires appropriate permissions).", "arguments": {"contact_uri": {"description": "A content URI as a string, pointing to the contact\nto be edited. This URI can be obtained from the ACTION_PICK function\nor by querying the contacts database.", "type": "str", "required": true}, "contact_info": {"description": "A dictionary containing additional\ncontact information to pre-fill in the edit form. Keys should correspond\nto contact fields (available key: 'email', 'phone', 'name', 'company', 'address'), and values should be\nthe data to pre-fill. Default is None.", "type": "Optional[Dict[str, Any]]", "required": false, "default": null}}}]}
{"query": "Can you help update the phone number for the contact at this URI: 'content://contacts/people/2'? Change the phone number to '1234567890'.", "answers": [{"id": 0, "name": "ACTION_EDIT_CONTACT", "arguments": {"contact_uri": "content://contacts/people/2", "contact_info": {"phone": "1234567890"}}}], "tools": [{"name": "ACTION_EDIT_CONTACT", "description": "Edit an existing contact.\n\nThis function allows the user to edit the details of a specific contact\nbased on the provided contact URI. Additional contact information can be\nprovided to pre-fill certain fields in the edit form.\nNote:\n    The contact_uri can be obtained in two primary ways:\n    1. Using the contact URI returned by the ACTION_PICK function.\n    2. Accessing the list of all contacts directly (requires appropriate permissions).", "arguments": {"contact_uri": {"description": "A content URI as a string, pointing to the contact\nto be edited. This URI can be obtained from the ACTION_PICK function\nor by querying the contacts database.", "type": "str", "required": true}, "contact_info": {"description": "A dictionary containing additional\ncontact information to pre-fill in the edit form. Keys should correspond\nto contact fields (available key: 'email', 'phone', 'name', 'company', 'address'), and values should be\nthe data to pre-fill. Default is None.", "type": "Optional[Dict[str, Any]]", "required": false, "default": null}}}]}
{"query": "Please alter the contact information for the person with the URI 'content://contacts/people/3'. Set the name to 'Jane Doe' and the company affiliation to 'Acme Corp'.", "answers": [{"id": 0, "name": "ACTION_EDIT_CONTACT", "arguments": {"contact_uri": "content://contacts/people/3", "contact_info": {"name": "Jane Doe", "company": "Acme Corp"}}}], "tools": [{"name": "ACTION_EDIT_CONTACT", "description": "Edit an existing contact.\n\nThis function allows the user to edit the details of a specific contact\nbased on the provided contact URI. Additional contact information can be\nprovided to pre-fill certain fields in the edit form.\nNote:\n    The contact_uri can be obtained in two primary ways:\n    1. Using the contact URI returned by the ACTION_PICK function.\n    2. Accessing the list of all contacts directly (requires appropriate permissions).", "arguments": {"contact_uri": {"description": "A content URI as a string, pointing to the contact\nto be edited. This URI can be obtained from the ACTION_PICK function\nor by querying the contacts database.", "type": "str", "required": true}, "contact_info": {"description": "A dictionary containing additional\ncontact information to pre-fill in the edit form. Keys should correspond\nto contact fields (available key: 'email', 'phone', 'name', 'company', 'address'), and values should be\nthe data to pre-fill. Default is None.", "type": "Optional[Dict[str, Any]]", "required": false, "default": null}}}]}
{"query": "Modify the address for my contact whose URI is 'content://contacts/people/4' to '123 Baker Street, New York'.", "answers": [{"id": 0, "name": "ACTION_EDIT_CONTACT", "arguments": {"contact_uri": "content://contacts/people/4", "contact_info": {"address": "123 Baker Street, New York"}}}], "tools": [{"name": "ACTION_EDIT_CONTACT", "description": "Edit an existing contact.\n\nThis function allows the user to edit the details of a specific contact\nbased on the provided contact URI. Additional contact information can be\nprovided to pre-fill certain fields in the edit form.\nNote:\n    The contact_uri can be obtained in two primary ways:\n    1. Using the contact URI returned by the ACTION_PICK function.\n    2. Accessing the list of all contacts directly (requires appropriate permissions).", "arguments": {"contact_uri": {"description": "A content URI as a string, pointing to the contact\nto be edited. This URI can be obtained from the ACTION_PICK function\nor by querying the contacts database.", "type": "str", "required": true}, "contact_info": {"description": "A dictionary containing additional\ncontact information to pre-fill in the edit form. Keys should correspond\nto contact fields (available key: 'email', 'phone', 'name', 'company', 'address'), and values should be\nthe data to pre-fill. Default is None.", "type": "Optional[Dict[str, Any]]", "required": false, "default": null}}}]}
{"query": "Adjust the contact data for this specific URI 'content://contacts/people/5' by including their new email 'info@newdomain.com' and their new office address '789 Fifth Avenue, New York'.", "answers": [{"id": 0, "name": "ACTION_EDIT_CONTACT", "arguments": {"contact_uri": "content://contacts/people/5", "contact_info": {"email": "info@newdomain.com", "address": "789 Fifth Avenue, New York"}}}], "tools": [{"name": "ACTION_EDIT_CONTACT", "description": "Edit an existing contact.\n\nThis function allows the user to edit the details of a specific contact\nbased on the provided contact URI. Additional contact information can be\nprovided to pre-fill certain fields in the edit form.\nNote:\n    The contact_uri can be obtained in two primary ways:\n    1. Using the contact URI returned by the ACTION_PICK function.\n    2. Accessing the list of all contacts directly (requires appropriate permissions).", "arguments": {"contact_uri": {"description": "A content URI as a string, pointing to the contact\nto be edited. This URI can be obtained from the ACTION_PICK function\nor by querying the contacts database.", "type": "str", "required": true}, "contact_info": {"description": "A dictionary containing additional\ncontact information to pre-fill in the edit form. Keys should correspond\nto contact fields (available key: 'email', 'phone', 'name', 'company', 'address'), and values should be\nthe data to pre-fill. Default is None.", "type": "Optional[Dict[str, Any]]", "required": false, "default": null}}}]}
{"query": "Change contact info for 'content://contacts/people/6', updating replacement details include: phone '9876543210', company 'Beta LLC', and name to 'Alice Wonderland'.", "answers": [{"id": 0, "name": "ACTION_EDIT_CONTACT", "arguments": {"contact_uri": "content://contacts/people/6", "contact_info": {"phone": "9876543210", "company": "Beta LLC", "name": "Alice Wonderland"}}}], "tools": [{"name": "ACTION_EDIT_CONTACT", "description": "Edit an existing contact.\n\nThis function allows the user to edit the details of a specific contact\nbased on the provided contact URI. Additional contact information can be\nprovided to pre-fill certain fields in the edit form.\nNote:\n    The contact_uri can be obtained in two primary ways:\n    1. Using the contact URI returned by the ACTION_PICK function.\n    2. Accessing the list of all contacts directly (requires appropriate permissions).", "arguments": {"contact_uri": {"description": "A content URI as a string, pointing to the contact\nto be edited. This URI can be obtained from the ACTION_PICK function\nor by querying the contacts database.", "type": "str", "required": true}, "contact_info": {"description": "A dictionary containing additional\ncontact information to pre-fill in the edit form. Keys should correspond\nto contact fields (available key: 'email', 'phone', 'name', 'company', 'address'), and values should be\nthe data to pre-fill. Default is None.", "type": "Optional[Dict[str, Any]]", "required": false, "default": null}}}]}
{"query": "For the contact with the URI 'content://contacts/people/7', I wish to revise his or her name to 'Bob Marley' and update the email to 'bob.marley@music.com'.", "answers": [{"id": 0, "name": "ACTION_EDIT_CONTACT", "arguments": {"contact_uri": "content://contacts/people/7", "contact_info": {"name": "Bob Marley", "email": "bob.marley@music.com"}}}], "tools": [{"name": "ACTION_EDIT_CONTACT", "description": "Edit an existing contact.\n\nThis function allows the user to edit the details of a specific contact\nbased on the provided contact URI. Additional contact information can be\nprovided to pre-fill certain fields in the edit form.\nNote:\n    The contact_uri can be obtained in two primary ways:\n    1. Using the contact URI returned by the ACTION_PICK function.\n    2. Accessing the list of all contacts directly (requires appropriate permissions).", "arguments": {"contact_uri": {"description": "A content URI as a string, pointing to the contact\nto be edited. This URI can be obtained from the ACTION_PICK function\nor by querying the contacts database.", "type": "str", "required": true}, "contact_info": {"description": "A dictionary containing additional\ncontact information to pre-fill in the edit form. Keys should correspond\nto contact fields (available key: 'email', 'phone', 'name', 'company', 'address'), and values should be\nthe data to pre-fill. Default is None.", "type": "Optional[Dict[str, Any]]", "required": false, "default": null}}}]}
{"query": "Edit the phone information for the contact at 'content://contacts/people/8' to reflect a new number - '2015550195'.", "answers": [{"id": 0, "name": "ACTION_EDIT_CONTACT", "arguments": {"contact_uri": "content://contacts/people/8", "contact_info": {"phone": "2015550195"}}}], "tools": [{"name": "ACTION_EDIT_CONTACT", "description": "Edit an existing contact.\n\nThis function allows the user to edit the details of a specific contact\nbased on the provided contact URI. Additional contact information can be\nprovided to pre-fill certain fields in the edit form.\nNote:\n    The contact_uri can be obtained in two primary ways:\n    1. Using the contact URI returned by the ACTION_PICK function.\n    2. Accessing the list of all contacts directly (requires appropriate permissions).", "arguments": {"contact_uri": {"description": "A content URI as a string, pointing to the contact\nto be edited. This URI can be obtained from the ACTION_PICK function\nor by querying the contacts database.", "type": "str", "required": true}, "contact_info": {"description": "A dictionary containing additional\ncontact information to pre-fill in the edit form. Keys should correspond\nto contact fields (available key: 'email', 'phone', 'name', 'company', 'address'), and values should be\nthe data to pre-fill. Default is None.", "type": "Optional[Dict[str, Any]]", "required": false, "default": null}}}]}
{"query": "Please update the address for the URI 'content://contacts/people/9' to the following: '9020 Innovation Way, Silicon Valley, California'.", "answers": [{"id": 0, "name": "ACTION_EDIT_CONTACT", "arguments": {"contact_uri": "content://contacts/people/9", "contact_info": {"address": "9020 Innovation Way, Silicon Valley, California"}}}], "tools": [{"name": "ACTION_EDIT_CONTACT", "description": "Edit an existing contact.\n\nThis function allows the user to edit the details of a specific contact\nbased on the provided contact URI. Additional contact information can be\nprovided to pre-fill certain fields in the edit form.\nNote:\n    The contact_uri can be obtained in two primary ways:\n    1. Using the contact URI returned by the ACTION_PICK function.\n    2. Accessing the list of all contacts directly (requires appropriate permissions).", "arguments": {"contact_uri": {"description": "A content URI as a string, pointing to the contact\nto be edited. This URI can be obtained from the ACTION_PICK function\nor by querying the contacts database.", "type": "str", "required": true}, "contact_info": {"description": "A dictionary containing additional\ncontact information to pre-fill in the edit form. Keys should correspond\nto contact fields (available key: 'email', 'phone', 'name', 'company', 'address'), and values should be\nthe data to pre-fill. Default is None.", "type": "Optional[Dict[str, Any]]", "required": false, "default": null}}}]}
{"query": "How do I change both the name and company for my contact with the URI 'content://contacts/people/10'? Name should be 'Clark Kent' and company 'Daily Planet'.", "answers": [{"id": 0, "name": "ACTION_EDIT_CONTACT", "arguments": {"contact_uri": "content://contacts/people/10", "contact_info": {"name": "Clark Kent", "company": "Daily Planet"}}}], "tools": [{"name": "ACTION_EDIT_CONTACT", "description": "Edit an existing contact.\n\nThis function allows the user to edit the details of a specific contact\nbased on the provided contact URI. Additional contact information can be\nprovided to pre-fill certain fields in the edit form.\nNote:\n    The contact_uri can be obtained in two primary ways:\n    1. Using the contact URI returned by the ACTION_PICK function.\n    2. Accessing the list of all contacts directly (requires appropriate permissions).", "arguments": {"contact_uri": {"description": "A content URI as a string, pointing to the contact\nto be edited. This URI can be obtained from the ACTION_PICK function\nor by querying the contacts database.", "type": "str", "required": true}, "contact_info": {"description": "A dictionary containing additional\ncontact information to pre-fill in the edit form. Keys should correspond\nto contact fields (available key: 'email', 'phone', 'name', 'company', 'address'), and values should be\nthe data to pre-fill. Default is None.", "type": "Optional[Dict[str, Any]]", "required": false, "default": null}}}]}
{"query": "Update contact information at URI 'content://contacts/people/11' by setting the email to 'contact@enterprise.com' and the phone number to '2025550133'.", "answers": [{"id": 0, "name": "ACTION_EDIT_CONTACT", "arguments": {"contact_uri": "content://contacts/people/11", "contact_info": {"email": "contact@enterprise.com", "phone": "2025550133"}}}], "tools": [{"name": "ACTION_EDIT_CONTACT", "description": "Edit an existing contact.\n\nThis function allows the user to edit the details of a specific contact\nbased on the provided contact URI. Additional contact information can be\nprovided to pre-fill certain fields in the edit form.\nNote:\n    The contact_uri can be obtained in two primary ways:\n    1. Using the contact URI returned by the ACTION_PICK function.\n    2. Accessing the list of all contacts directly (requires appropriate permissions).", "arguments": {"contact_uri": {"description": "A content URI as a string, pointing to the contact\nto be edited. This URI can be obtained from the ACTION_PICK function\nor by querying the contacts database.", "type": "str", "required": true}, "contact_info": {"description": "A dictionary containing additional\ncontact information to pre-fill in the edit form. Keys should correspond\nto contact fields (available key: 'email', 'phone', 'name', 'company', 'address'), and values should be\nthe data to pre-fill. Default is None.", "type": "Optional[Dict[str, Any]]", "required": false, "default": null}}}]}
{"query": "Alter the name for the contact with URI 'content://contacts/people/12' to 'Diana Prince'.", "answers": [{"id": 0, "name": "ACTION_EDIT_CONTACT", "arguments": {"contact_uri": "content://contacts/people/12", "contact_info": {"name": "Diana Prince"}}}], "tools": [{"name": "ACTION_EDIT_CONTACT", "description": "Edit an existing contact.\n\nThis function allows the user to edit the details of a specific contact\nbased on the provided contact URI. Additional contact information can be\nprovided to pre-fill certain fields in the edit form.\nNote:\n    The contact_uri can be obtained in two primary ways:\n    1. Using the contact URI returned by the ACTION_PICK function.\n    2. Accessing the list of all contacts directly (requires appropriate permissions).", "arguments": {"contact_uri": {"description": "A content URI as a string, pointing to the contact\nto be edited. This URI can be obtained from the ACTION_PICK function\nor by querying the contacts database.", "type": "str", "required": true}, "contact_info": {"description": "A dictionary containing additional\ncontact information to pre-fill in the edit form. Keys should correspond\nto contact fields (available key: 'email', 'phone', 'name', 'company', 'address'), and values should be\nthe data to pre-fill. Default is None.", "type": "Optional[Dict[str, Any]]", "required": false, "default": null}}}]}
{"query": "I need to revise the phone number and address for the contact located at 'content://contacts/people/13'. Please update the phone to '3035550105' and the address to 'Midtown 120, Blvd East, Gotham City'.", "answers": [{"id": 0, "name": "ACTION_EDIT_CONTACT", "arguments": {"contact_uri": "content://contacts/people/13", "contact_info": {"phone": "3035550105", "address": "Midtown 120, Blvd East, Gotham City"}}}], "tools": [{"name": "ACTION_EDIT_CONTACT", "description": "Edit an existing contact.\n\nThis function allows the user to edit the details of a specific contact\nbased on the provided contact URI. Additional contact information can be\nprovided to pre-fill certain fields in the edit form.\nNote:\n    The contact_uri can be obtained in two primary ways:\n    1. Using the contact URI returned by the ACTION_PICK function.\n    2. Accessing the list of all contacts directly (requires appropriate permissions).", "arguments": {"contact_uri": {"description": "A content URI as a string, pointing to the contact\nto be edited. This URI can be obtained from the ACTION_PICK function\nor by querying the contacts database.", "type": "str", "required": true}, "contact_info": {"description": "A dictionary containing additional\ncontact information to pre-fill in the edit form. Keys should correspond\nto contact fields (available key: 'email', 'phone', 'name', 'company', 'address'), and values should be\nthe data to pre-fill. Default is None.", "type": "Optional[Dict[str, Any]]", "required": false, "default": null}}}]}
{"query": "Please change the company and email for the URI 'content://contacts/people/14'. Set the company to 'Stark Industries' and the email to 'staff@starkindustries.com'.", "answers": [{"id": 0, "name": "ACTION_EDIT_CONTACT", "arguments": {"contact_uri": "content://contacts/people/14", "contact_info": {"company": "Stark Industries", "email": "staff@starkindustries.com"}}}], "tools": [{"name": "ACTION_EDIT_CONTACT", "description": "Edit an existing contact.\n\nThis function allows the user to edit the details of a specific contact\nbased on the provided contact URI. Additional contact information can be\nprovided to pre-fill certain fields in the edit form.\nNote:\n    The contact_uri can be obtained in two primary ways:\n    1. Using the contact URI returned by the ACTION_PICK function.\n    2. Accessing the list of all contacts directly (requires appropriate permissions).", "arguments": {"contact_uri": {"description": "A content URI as a string, pointing to the contact\nto be edited. This URI can be obtained from the ACTION_PICK function\nor by querying the contacts database.", "type": "str", "required": true}, "contact_info": {"description": "A dictionary containing additional\ncontact information to pre-fill in the edit form. Keys should correspond\nto contact fields (available key: 'email', 'phone', 'name', 'company', 'address'), and values should be\nthe data to pre-fill. Default is None.", "type": "Optional[Dict[str, Any]]", "required": false, "default": null}}}]}
{"query": "Update the URI 'content://contacts/people/15' by adjusting the contact's phone number to '4085550182' and name to 'Peter Parker'.", "answers": [{"id": 0, "name": "ACTION_EDIT_CONTACT", "arguments": {"contact_uri": "content://contacts/people/15", "contact_info": {"phone": "4085550182", "name": "Peter Parker"}}}], "tools": [{"name": "ACTION_EDIT_CONTACT", "description": "Edit an existing contact.\n\nThis function allows the user to edit the details of a specific contact\nbased on the provided contact URI. Additional contact information can be\nprovided to pre-fill certain fields in the edit form.\nNote:\n    The contact_uri can be obtained in two primary ways:\n    1. Using the contact URI returned by the ACTION_PICK function.\n    2. Accessing the list of all contacts directly (requires appropriate permissions).", "arguments": {"contact_uri": {"description": "A content URI as a string, pointing to the contact\nto be edited. This URI can be obtained from the ACTION_PICK function\nor by querying the contacts database.", "type": "str", "required": true}, "contact_info": {"description": "A dictionary containing additional\ncontact information to pre-fill in the edit form. Keys should correspond\nto contact fields (available key: 'email', 'phone', 'name', 'company', 'address'), and values should be\nthe data to pre-fill. Default is None.", "type": "Optional[Dict[str, Any]]", "required": false, "default": null}}}]}
{"query": "I need to select a few JPEG images from my device. Could you assist?", "answers": [{"id": 0, "name": "ACTION_GET_CONTENT", "arguments": {"mime_type": "image/jpeg", "allow_multiple": true}}], "tools": [{"name": "ACTION_GET_CONTENT", "description": "Let user select one or multilple file(s) of a specific type.\n\nThis function allows the user to select one or more files of a specified MIME type.\nIt returns a list of content URIs for the selected file(s).", "arguments": {"mime_type": {"description": "The MIME type of the file(s) to be selected (e.g., \"image/*\", \"audio/*\", \"video/*\", \"*/*\").", "type": "str", "required": true}, "allow_multiple": {"description": "If True, allows selection of multiple files. Defaults to False.", "type": "bool", "required": false, "default": false}}, "returns": {"description": "A list of URIs as strings, each pointing to a selected file.\nIf no file is selected or the operation is cancelled, returns an empty list.", "type": "List[str]"}, "examples": ["# Select a single image\nimage_uris = ACTION_GET_CONTENT(\"image/*\")\n\n# Select multiple documents\ndoc_uris = ACTION_GET_CONTENT(\"application/pdf\", allow_multiple=True)"]}]}
{"query": "How can I pick multiple video files at once?", "answers": [{"id": 0, "name": "ACTION_GET_CONTENT", "arguments": {"mime_type": "video/*", "allow_multiple": true}}], "tools": [{"name": "ACTION_GET_CONTENT", "description": "Let user select one or multilple file(s) of a specific type.\n\nThis function allows the user to select one or more files of a specified MIME type.\nIt returns a list of content URIs for the selected file(s).", "arguments": {"mime_type": {"description": "The MIME type of the file(s) to be selected (e.g., \"image/*\", \"audio/*\", \"video/*\", \"*/*\").", "type": "str", "required": true}, "allow_multiple": {"description": "If True, allows selection of multiple files. Defaults to False.", "type": "bool", "required": false, "default": false}}, "returns": {"description": "A list of URIs as strings, each pointing to a selected file.\nIf no file is selected or the operation is cancelled, returns an empty list.", "type": "List[str]"}, "examples": ["# Select a single image\nimage_uris = ACTION_GET_CONTENT(\"image/*\")\n\n# Select multiple documents\ndoc_uris = ACTION_GET_CONTENT(\"application/pdf\", allow_multiple=True)"]}]}
{"query": "Please assist me in selecting a single audio file.", "answers": [{"id": 0, "name": "ACTION_GET_CONTENT", "arguments": {"mime_type": "audio/*", "allow_multiple": false}}], "tools": [{"name": "ACTION_GET_CONTENT", "description": "Let user select one or multilple file(s) of a specific type.\n\nThis function allows the user to select one or more files of a specified MIME type.\nIt returns a list of content URIs for the selected file(s).", "arguments": {"mime_type": {"description": "The MIME type of the file(s) to be selected (e.g., \"image/*\", \"audio/*\", \"video/*\", \"*/*\").", "type": "str", "required": true}, "allow_multiple": {"description": "If True, allows selection of multiple files. Defaults to False.", "type": "bool", "required": false, "default": false}}, "returns": {"description": "A list of URIs as strings, each pointing to a selected file.\nIf no file is selected or the operation is cancelled, returns an empty list.", "type": "List[str]"}, "examples": ["# Select a single image\nimage_uris = ACTION_GET_CONTENT(\"image/*\")\n\n# Select multiple documents\ndoc_uris = ACTION_GET_CONTENT(\"application/pdf\", allow_multiple=True)"]}]}
{"query": "I wish to access a PDF document. Could you open the file chooser?", "answers": [{"id": 0, "name": "ACTION_GET_CONTENT", "arguments": {"mime_type": "application/pdf", "allow_multiple": false}}], "tools": [{"name": "ACTION_GET_CONTENT", "description": "Let user select one or multilple file(s) of a specific type.\n\nThis function allows the user to select one or more files of a specified MIME type.\nIt returns a list of content URIs for the selected file(s).", "arguments": {"mime_type": {"description": "The MIME type of the file(s) to be selected (e.g., \"image/*\", \"audio/*\", \"video/*\", \"*/*\").", "type": "str", "required": true}, "allow_multiple": {"description": "If True, allows selection of multiple files. Defaults to False.", "type": "bool", "required": false, "default": false}}, "returns": {"description": "A list of URIs as strings, each pointing to a selected file.\nIf no file is selected or the operation is cancelled, returns an empty list.", "type": "List[str]"}, "examples": ["# Select a single image\nimage_uris = ACTION_GET_CONTENT(\"image/*\")\n\n# Select multiple documents\ndoc_uris = ACTION_GET_CONTENT(\"application/pdf\", allow_multiple=True)"]}]}
{"query": "Can you help me to select several files of any type from my computer?", "answers": [{"id": 0, "name": "ACTION_GET_CONTENT", "arguments": {"mime_type": "*/*", "allow_multiple": true}}], "tools": [{"name": "ACTION_GET_CONTENT", "description": "Let user select one or multilple file(s) of a specific type.\n\nThis function allows the user to select one or more files of a specified MIME type.\nIt returns a list of content URIs for the selected file(s).", "arguments": {"mime_type": {"description": "The MIME type of the file(s) to be selected (e.g., \"image/*\", \"audio/*\", \"video/*\", \"*/*\").", "type": "str", "required": true}, "allow_multiple": {"description": "If True, allows selection of multiple files. Defaults to False.", "type": "bool", "required": false, "default": false}}, "returns": {"description": "A list of URIs as strings, each pointing to a selected file.\nIf no file is selected or the operation is cancelled, returns an empty list.", "type": "List[str]"}, "examples": ["# Select a single image\nimage_uris = ACTION_GET_CONTENT(\"image/*\")\n\n# Select multiple documents\ndoc_uris = ACTION_GET_CONTENT(\"application/pdf\", allow_multiple=True)"]}]}
{"query": "Enable selection for one file of any format.", "answers": [{"id": 0, "name": "ACTION_GET_CONTENT", "arguments": {"mime_type": "*/*", "allow_multiple": false}}], "tools": [{"name": "ACTION_GET_CONTENT", "description": "Let user select one or multilple file(s) of a specific type.\n\nThis function allows the user to select one or more files of a specified MIME type.\nIt returns a list of content URIs for the selected file(s).", "arguments": {"mime_type": {"description": "The MIME type of the file(s) to be selected (e.g., \"image/*\", \"audio/*\", \"video/*\", \"*/*\").", "type": "str", "required": true}, "allow_multiple": {"description": "If True, allows selection of multiple files. Defaults to False.", "type": "bool", "required": false, "default": false}}, "returns": {"description": "A list of URIs as strings, each pointing to a selected file.\nIf no file is selected or the operation is cancelled, returns an empty list.", "type": "List[str]"}, "examples": ["# Select a single image\nimage_uris = ACTION_GET_CONTENT(\"image/*\")\n\n# Select multiple documents\ndoc_uris = ACTION_GET_CONTENT(\"application/pdf\", allow_multiple=True)"]}]}
{"query": "I need to select a single spreadsheet file, can you open the file selector?", "answers": [{"id": 0, "name": "ACTION_GET_CONTENT", "arguments": {"mime_type": "application/vnd.ms-excel", "allow_multiple": false}}], "tools": [{"name": "ACTION_GET_CONTENT", "description": "Let user select one or multilple file(s) of a specific type.\n\nThis function allows the user to select one or more files of a specified MIME type.\nIt returns a list of content URIs for the selected file(s).", "arguments": {"mime_type": {"description": "The MIME type of the file(s) to be selected (e.g., \"image/*\", \"audio/*\", \"video/*\", \"*/*\").", "type": "str", "required": true}, "allow_multiple": {"description": "If True, allows selection of multiple files. Defaults to False.", "type": "bool", "required": false, "default": false}}, "returns": {"description": "A list of URIs as strings, each pointing to a selected file.\nIf no file is selected or the operation is cancelled, returns an empty list.", "type": "List[str]"}, "examples": ["# Select a single image\nimage_uris = ACTION_GET_CONTENT(\"image/*\")\n\n# Select multiple documents\ndoc_uris = ACTION_GET_CONTENT(\"application/pdf\", allow_multiple=True)"]}]}
{"query": "Guide me to pick numerous text files for processing.", "answers": [{"id": 0, "name": "ACTION_GET_CONTENT", "arguments": {"mime_type": "text/plain", "allow_multiple": true}}], "tools": [{"name": "ACTION_GET_CONTENT", "description": "Let user select one or multilple file(s) of a specific type.\n\nThis function allows the user to select one or more files of a specified MIME type.\nIt returns a list of content URIs for the selected file(s).", "arguments": {"mime_type": {"description": "The MIME type of the file(s) to be selected (e.g., \"image/*\", \"audio/*\", \"video/*\", \"*/*\").", "type": "str", "required": true}, "allow_multiple": {"description": "If True, allows selection of multiple files. Defaults to False.", "type": "bool", "required": false, "default": false}}, "returns": {"description": "A list of URIs as strings, each pointing to a selected file.\nIf no file is selected or the operation is cancelled, returns an empty list.", "type": "List[str]"}, "examples": ["# Select a single image\nimage_uris = ACTION_GET_CONTENT(\"image/*\")\n\n# Select multiple documents\ndoc_uris = ACTION_GET_CONTENT(\"application/pdf\", allow_multiple=True)"]}]}
{"query": "Help me select one video file.", "answers": [{"id": 0, "name": "ACTION_GET_CONTENT", "arguments": {"mime_type": "video/*", "allow_multiple": false}}], "tools": [{"name": "ACTION_GET_CONTENT", "description": "Let user select one or multilple file(s) of a specific type.\n\nThis function allows the user to select one or more files of a specified MIME type.\nIt returns a list of content URIs for the selected file(s).", "arguments": {"mime_type": {"description": "The MIME type of the file(s) to be selected (e.g., \"image/*\", \"audio/*\", \"video/*\", \"*/*\").", "type": "str", "required": true}, "allow_multiple": {"description": "If True, allows selection of multiple files. Defaults to False.", "type": "bool", "required": false, "default": false}}, "returns": {"description": "A list of URIs as strings, each pointing to a selected file.\nIf no file is selected or the operation is cancelled, returns an empty list.", "type": "List[str]"}, "examples": ["# Select a single image\nimage_uris = ACTION_GET_CONTENT(\"image/*\")\n\n# Select multiple documents\ndoc_uris = ACTION_GET_CONTENT(\"application/pdf\", allow_multiple=True)"]}]}
{"query": "I require the activation of file selection for multi-file .png image uploads.", "answers": [{"id": 0, "name": "ACTION_GET_CONTENT", "arguments": {"mime_type": "image/png", "allow_multiple": true}}], "tools": [{"name": "ACTION_GET_CONTENT", "description": "Let user select one or multilple file(s) of a specific type.\n\nThis function allows the user to select one or more files of a specified MIME type.\nIt returns a list of content URIs for the selected file(s).", "arguments": {"mime_type": {"description": "The MIME type of the file(s) to be selected (e.g., \"image/*\", \"audio/*\", \"video/*\", \"*/*\").", "type": "str", "required": true}, "allow_multiple": {"description": "If True, allows selection of multiple files. Defaults to False.", "type": "bool", "required": false, "default": false}}, "returns": {"description": "A list of URIs as strings, each pointing to a selected file.\nIf no file is selected or the operation is cancelled, returns an empty list.", "type": "List[str]"}, "examples": ["# Select a single image\nimage_uris = ACTION_GET_CONTENT(\"image/*\")\n\n# Select multiple documents\ndoc_uris = ACTION_GET_CONTENT(\"application/pdf\", allow_multiple=True)"]}]}
{"query": "Enable me to choose a single MP3 audio file from my archive.", "answers": [{"id": 0, "name": "ACTION_GET_CONTENT", "arguments": {"mime_type": "audio/mpeg", "allow_multiple": false}}], "tools": [{"name": "ACTION_GET_CONTENT", "description": "Let user select one or multilple file(s) of a specific type.\n\nThis function allows the user to select one or more files of a specified MIME type.\nIt returns a list of content URIs for the selected file(s).", "arguments": {"mime_type": {"description": "The MIME type of the file(s) to be selected (e.g., \"image/*\", \"audio/*\", \"video/*\", \"*/*\").", "type": "str", "required": true}, "allow_multiple": {"description": "If True, allows selection of multiple files. Defaults to False.", "type": "bool", "required": false, "default": false}}, "returns": {"description": "A list of URIs as strings, each pointing to a selected file.\nIf no file is selected or the operation is cancelled, returns an empty list.", "type": "List[str]"}, "examples": ["# Select a single image\nimage_uris = ACTION_GET_CONTENT(\"image/*\")\n\n# Select multiple documents\ndoc_uris = ACTION_GET_CONTENT(\"application/pdf\", allow_multiple=True)"]}]}
{"query": "I would like to pick multiple GIF files from my folders, please assist.", "answers": [{"id": 0, "name": "ACTION_GET_CONTENT", "arguments": {"mime_type": "image/gif", "allow_multiple": true}}], "tools": [{"name": "ACTION_GET_CONTENT", "description": "Let user select one or multilple file(s) of a specific type.\n\nThis function allows the user to select one or more files of a specified MIME type.\nIt returns a list of content URIs for the selected file(s).", "arguments": {"mime_type": {"description": "The MIME type of the file(s) to be selected (e.g., \"image/*\", \"audio/*\", \"video/*\", \"*/*\").", "type": "str", "required": true}, "allow_multiple": {"description": "If True, allows selection of multiple files. Defaults to False.", "type": "bool", "required": false, "default": false}}, "returns": {"description": "A list of URIs as strings, each pointing to a selected file.\nIf no file is selected or the operation is cancelled, returns an empty list.", "type": "List[str]"}, "examples": ["# Select a single image\nimage_uris = ACTION_GET_CONTENT(\"image/*\")\n\n# Select multiple documents\ndoc_uris = ACTION_GET_CONTENT(\"application/pdf\", allow_multiple=True)"]}]}
{"query": "Facilitate selection of a single file without restrictions on type.", "answers": [{"id": 0, "name": "ACTION_GET_CONTENT", "arguments": {"mime_type": "*/*", "allow_multiple": false}}], "tools": [{"name": "ACTION_GET_CONTENT", "description": "Let user select one or multilple file(s) of a specific type.\n\nThis function allows the user to select one or more files of a specified MIME type.\nIt returns a list of content URIs for the selected file(s).", "arguments": {"mime_type": {"description": "The MIME type of the file(s) to be selected (e.g., \"image/*\", \"audio/*\", \"video/*\", \"*/*\").", "type": "str", "required": true}, "allow_multiple": {"description": "If True, allows selection of multiple files. Defaults to False.", "type": "bool", "required": false, "default": false}}, "returns": {"description": "A list of URIs as strings, each pointing to a selected file.\nIf no file is selected or the operation is cancelled, returns an empty list.", "type": "List[str]"}, "examples": ["# Select a single image\nimage_uris = ACTION_GET_CONTENT(\"image/*\")\n\n# Select multiple documents\ndoc_uris = ACTION_GET_CONTENT(\"application/pdf\", allow_multiple=True)"]}]}
{"query": "Please open a dialog to select one single XML file.", "answers": [{"id": 0, "name": "ACTION_GET_CONTENT", "arguments": {"mime_type": "application/xml", "allow_multiple": false}}], "tools": [{"name": "ACTION_GET_CONTENT", "description": "Let user select one or multilple file(s) of a specific type.\n\nThis function allows the user to select one or more files of a specified MIME type.\nIt returns a list of content URIs for the selected file(s).", "arguments": {"mime_type": {"description": "The MIME type of the file(s) to be selected (e.g., \"image/*\", \"audio/*\", \"video/*\", \"*/*\").", "type": "str", "required": true}, "allow_multiple": {"description": "If True, allows selection of multiple files. Defaults to False.", "type": "bool", "required": false, "default": false}}, "returns": {"description": "A list of URIs as strings, each pointing to a selected file.\nIf no file is selected or the operation is cancelled, returns an empty list.", "type": "List[str]"}, "examples": ["# Select a single image\nimage_uris = ACTION_GET_CONTENT(\"image/*\")\n\n# Select multiple documents\ndoc_uris = ACTION_GET_CONTENT(\"application/pdf\", allow_multiple=True)"]}]}
{"query": "Assist in selecting multiple office documents at once.", "answers": [{"id": 0, "name": "ACTION_GET_CONTENT", "arguments": {"mime_type": "application/msword,application/vnd.ms-excel,application/vnd.ms-powerpoint", "allow_multiple": true}}], "tools": [{"name": "ACTION_GET_CONTENT", "description": "Let user select one or multilple file(s) of a specific type.\n\nThis function allows the user to select one or more files of a specified MIME type.\nIt returns a list of content URIs for the selected file(s).", "arguments": {"mime_type": {"description": "The MIME type of the file(s) to be selected (e.g., \"image/*\", \"audio/*\", \"video/*\", \"*/*\").", "type": "str", "required": true}, "allow_multiple": {"description": "If True, allows selection of multiple files. Defaults to False.", "type": "bool", "required": false, "default": false}}, "returns": {"description": "A list of URIs as strings, each pointing to a selected file.\nIf no file is selected or the operation is cancelled, returns an empty list.", "type": "List[str]"}, "examples": ["# Select a single image\nimage_uris = ACTION_GET_CONTENT(\"image/*\")\n\n# Select multiple documents\ndoc_uris = ACTION_GET_CONTENT(\"application/pdf\", allow_multiple=True)"]}]}
{"query": "How can I retrieve the URI for a ringtone that I want to set as my alarm?", "answers": [{"id": 0, "name": "ACTION_GET_RINGTONE", "arguments": {}}], "tools": [{"name": "ACTION_GET_RINGTONE", "description": "Let user select a ringtone and return the URI of the selected ringtone.\n\nThis function allows the user to select a ringtone from the device's ringtone picker.\nIt returns the content URI of the selected ringtone that can be use to set alarm.", "arguments": {}, "returns": {"description": "A content URI as a string pointing to the selected ringtone.\nIf no ringtone is selected or the operation is cancelled, returns None.", "type": "Optional[str]"}}]}
{"query": "Please guide me to select a ringtone and get its URI for my new alarm setting.", "answers": [{"id": 0, "name": "ACTION_GET_RINGTONE", "arguments": {}}], "tools": [{"name": "ACTION_GET_RINGTONE", "description": "Let user select a ringtone and return the URI of the selected ringtone.\n\nThis function allows the user to select a ringtone from the device's ringtone picker.\nIt returns the content URI of the selected ringtone that can be use to set alarm.", "arguments": {}, "returns": {"description": "A content URI as a string pointing to the selected ringtone.\nIf no ringtone is selected or the operation is cancelled, returns None.", "type": "Optional[str]"}}]}
{"query": "What steps should I follow to choose a new ringtone and obtain its URI on my mobile device?", "answers": [{"id": 0, "name": "ACTION_GET_RINGTONE", "arguments": {}}], "tools": [{"name": "ACTION_GET_RINGTONE", "description": "Let user select a ringtone and return the URI of the selected ringtone.\n\nThis function allows the user to select a ringtone from the device's ringtone picker.\nIt returns the content URI of the selected ringtone that can be use to set alarm.", "arguments": {}, "returns": {"description": "A content URI as a string pointing to the selected ringtone.\nIf no ringtone is selected or the operation is cancelled, returns None.", "type": "Optional[str]"}}]}
{"query": "I need help with changing my old ringtone. Can you help me select a new one and provide the URI?", "answers": [{"id": 0, "name": "ACTION_GET_RINGTONE", "arguments": {}}], "tools": [{"name": "ACTION_GET_RINGTONE", "description": "Let user select a ringtone and return the URI of the selected ringtone.\n\nThis function allows the user to select a ringtone from the device's ringtone picker.\nIt returns the content URI of the selected ringtone that can be use to set alarm.", "arguments": {}, "returns": {"description": "A content URI as a string pointing to the selected ringtone.\nIf no ringtone is selected or the operation is cancelled, returns None.", "type": "Optional[str]"}}]}
{"query": "Initiate the process to choose a ringtone and output the URI for it, please.", "answers": [{"id": 0, "name": "ACTION_GET_RINGTONE", "arguments": {}}], "tools": [{"name": "ACTION_GET_RINGTONE", "description": "Let user select a ringtone and return the URI of the selected ringtone.\n\nThis function allows the user to select a ringtone from the device's ringtone picker.\nIt returns the content URI of the selected ringtone that can be use to set alarm.", "arguments": {}, "returns": {"description": "A content URI as a string pointing to the selected ringtone.\nIf no ringtone is selected or the operation is cancelled, returns None.", "type": "Optional[str]"}}]}
{"query": "Tell me how I can select a ringtone and fetch its corresponding URI to use it for my phone alerts.", "answers": [{"id": 0, "name": "ACTION_GET_RINGTONE", "arguments": {}}], "tools": [{"name": "ACTION_GET_RINGTONE", "description": "Let user select a ringtone and return the URI of the selected ringtone.\n\nThis function allows the user to select a ringtone from the device's ringtone picker.\nIt returns the content URI of the selected ringtone that can be use to set alarm.", "arguments": {}, "returns": {"description": "A content URI as a string pointing to the selected ringtone.\nIf no ringtone is selected or the operation is cancelled, returns None.", "type": "Optional[str]"}}]}
{"query": "Can you start the ringtone picker so I can choose one and get the URI?", "answers": [{"id": 0, "name": "ACTION_GET_RINGTONE", "arguments": {}}], "tools": [{"name": "ACTION_GET_RINGTONE", "description": "Let user select a ringtone and return the URI of the selected ringtone.\n\nThis function allows the user to select a ringtone from the device's ringtone picker.\nIt returns the content URI of the selected ringtone that can be use to set alarm.", "arguments": {}, "returns": {"description": "A content URI as a string pointing to the selected ringtone.\nIf no ringtone is selected or the operation is cancelled, returns None.", "type": "Optional[str]"}}]}
{"query": "Activate the selection tool for ringtones on my device and obtain the URI of my choice.", "answers": [{"id": 0, "name": "ACTION_GET_RINGTONE", "arguments": {}}], "tools": [{"name": "ACTION_GET_RINGTONE", "description": "Let user select a ringtone and return the URI of the selected ringtone.\n\nThis function allows the user to select a ringtone from the device's ringtone picker.\nIt returns the content URI of the selected ringtone that can be use to set alarm.", "arguments": {}, "returns": {"description": "A content URI as a string pointing to the selected ringtone.\nIf no ringtone is selected or the operation is cancelled, returns None.", "type": "Optional[str]"}}]}
{"query": "I would like to change my phone's ringtone, help me pick one and provide the URI, thanks.", "answers": [{"id": 0, "name": "ACTION_GET_RINGTONE", "arguments": {}}], "tools": [{"name": "ACTION_GET_RINGTONE", "description": "Let user select a ringtone and return the URI of the selected ringtone.\n\nThis function allows the user to select a ringtone from the device's ringtone picker.\nIt returns the content URI of the selected ringtone that can be use to set alarm.", "arguments": {}, "returns": {"description": "A content URI as a string pointing to the selected ringtone.\nIf no ringtone is selected or the operation is cancelled, returns None.", "type": "Optional[str]"}}]}
{"query": "Enable the ringtone selector on my device and return the unique URI for the ringtone I select.", "answers": [{"id": 0, "name": "ACTION_GET_RINGTONE", "arguments": {}}], "tools": [{"name": "ACTION_GET_RINGTONE", "description": "Let user select a ringtone and return the URI of the selected ringtone.\n\nThis function allows the user to select a ringtone from the device's ringtone picker.\nIt returns the content URI of the selected ringtone that can be use to set alarm.", "arguments": {}, "returns": {"description": "A content URI as a string pointing to the selected ringtone.\nIf no ringtone is selected or the operation is cancelled, returns None.", "type": "Optional[str]"}}]}
{"query": "Provide a way to select a ringtone from those available and return the URI for my use.", "answers": [{"id": 0, "name": "ACTION_GET_RINGTONE", "arguments": {}}], "tools": [{"name": "ACTION_GET_RINGTONE", "description": "Let user select a ringtone and return the URI of the selected ringtone.\n\nThis function allows the user to select a ringtone from the device's ringtone picker.\nIt returns the content URI of the selected ringtone that can be use to set alarm.", "arguments": {}, "returns": {"description": "A content URI as a string pointing to the selected ringtone.\nIf no ringtone is selected or the operation is cancelled, returns None.", "type": "Optional[str]"}}]}
{"query": "Launch the ringtone choosing utility and give me the URI for the ringtone I select.", "answers": [{"id": 0, "name": "ACTION_GET_RINGTONE", "arguments": {}}], "tools": [{"name": "ACTION_GET_RINGTONE", "description": "Let user select a ringtone and return the URI of the selected ringtone.\n\nThis function allows the user to select a ringtone from the device's ringtone picker.\nIt returns the content URI of the selected ringtone that can be use to set alarm.", "arguments": {}, "returns": {"description": "A content URI as a string pointing to the selected ringtone.\nIf no ringtone is selected or the operation is cancelled, returns None.", "type": "Optional[str]"}}]}
{"query": "I want to browse through ringtones to choose one. Could you provide the URI after I make a selection?", "answers": [{"id": 0, "name": "ACTION_GET_RINGTONE", "arguments": {}}], "tools": [{"name": "ACTION_GET_RINGTONE", "description": "Let user select a ringtone and return the URI of the selected ringtone.\n\nThis function allows the user to select a ringtone from the device's ringtone picker.\nIt returns the content URI of the selected ringtone that can be use to set alarm.", "arguments": {}, "returns": {"description": "A content URI as a string pointing to the selected ringtone.\nIf no ringtone is selected or the operation is cancelled, returns None.", "type": "Optional[str]"}}]}
{"query": "Instruct how to access the ringtone selector on my mobile and get the URI for my chosen ringtone.", "answers": [{"id": 0, "name": "ACTION_GET_RINGTONE", "arguments": {}}], "tools": [{"name": "ACTION_GET_RINGTONE", "description": "Let user select a ringtone and return the URI of the selected ringtone.\n\nThis function allows the user to select a ringtone from the device's ringtone picker.\nIt returns the content URI of the selected ringtone that can be use to set alarm.", "arguments": {}, "returns": {"description": "A content URI as a string pointing to the selected ringtone.\nIf no ringtone is selected or the operation is cancelled, returns None.", "type": "Optional[str]"}}]}
{"query": "Guide me through selecting a new ringtone from the device and obtaining its URI for modifying alarm settings.", "answers": [{"id": 0, "name": "ACTION_GET_RINGTONE", "arguments": {}}], "tools": [{"name": "ACTION_GET_RINGTONE", "description": "Let user select a ringtone and return the URI of the selected ringtone.\n\nThis function allows the user to select a ringtone from the device's ringtone picker.\nIt returns the content URI of the selected ringtone that can be use to set alarm.", "arguments": {}, "returns": {"description": "A content URI as a string pointing to the selected ringtone.\nIf no ringtone is selected or the operation is cancelled, returns None.", "type": "Optional[str]"}}]}
{"query": "Can you help me take a photo with my camera app and provide me the URI of the saved picture?", "answers": [{"id": 0, "name": "ACTION_IMAGE_CAPTURE", "arguments": {}}], "tools": [{"name": "ACTION_IMAGE_CAPTURE", "description": "Capture a picture using the camera app and return the URI of the saved photo.\n\nThis function uses the ACTION_IMAGE_CAPTURE intent to open the camera app and capture a photo.\nThe photo is saved to a URI location, which is returned by this function.\nUser can then use this URI to access the photo file and do whatever they want with it.", "arguments": {}, "returns": {"description": "The URI location where the camera app saves the photo file.", "type": "str"}}]}
{"query": "I need to capture a photograph now. Where will it be stored?", "answers": [{"id": 0, "name": "ACTION_IMAGE_CAPTURE", "arguments": {}}], "tools": [{"name": "ACTION_IMAGE_CAPTURE", "description": "Capture a picture using the camera app and return the URI of the saved photo.\n\nThis function uses the ACTION_IMAGE_CAPTURE intent to open the camera app and capture a photo.\nThe photo is saved to a URI location, which is returned by this function.\nUser can then use this URI to access the photo file and do whatever they want with it.", "arguments": {}, "returns": {"description": "The URI location where the camera app saves the photo file.", "type": "str"}}]}
{"query": "Use my device's camera to take a picture and show me the file location.", "answers": [{"id": 0, "name": "ACTION_IMAGE_CAPTURE", "arguments": {}}], "tools": [{"name": "ACTION_IMAGE_CAPTURE", "description": "Capture a picture using the camera app and return the URI of the saved photo.\n\nThis function uses the ACTION_IMAGE_CAPTURE intent to open the camera app and capture a photo.\nThe photo is saved to a URI location, which is returned by this function.\nUser can then use this URI to access the photo file and do whatever they want with it.", "arguments": {}, "returns": {"description": "The URI location where the camera app saves the photo file.", "type": "str"}}]}
{"query": "Activate the camera for a photo capture and provide the file's URI afterward.", "answers": [{"id": 0, "name": "ACTION_IMAGE_CAPTURE", "arguments": {}}], "tools": [{"name": "ACTION_IMAGE_CAPTURE", "description": "Capture a picture using the camera app and return the URI of the saved photo.\n\nThis function uses the ACTION_IMAGE_CAPTURE intent to open the camera app and capture a photo.\nThe photo is saved to a URI location, which is returned by this function.\nUser can then use this URI to access the photo file and do whatever they want with it.", "arguments": {}, "returns": {"description": "The URI location where the camera app saves the photo file.", "type": "str"}}]}
{"query": "I'd like to snap a picture using my mobile’s camera feature, where should I look for the saved image URI?", "answers": [{"id": 0, "name": "ACTION_IMAGE_CAPTURE", "arguments": {}}], "tools": [{"name": "ACTION_IMAGE_CAPTURE", "description": "Capture a picture using the camera app and return the URI of the saved photo.\n\nThis function uses the ACTION_IMAGE_CAPTURE intent to open the camera app and capture a photo.\nThe photo is saved to a URI location, which is returned by this function.\nUser can then use this URI to access the photo file and do whatever they want with it.", "arguments": {}, "returns": {"description": "The URI location where the camera app saves the photo file.", "type": "str"}}]}
{"query": "How do I use my phone to take a photo and retrieve the location where this photo is saved?", "answers": [{"id": 0, "name": "ACTION_IMAGE_CAPTURE", "arguments": {}}], "tools": [{"name": "ACTION_IMAGE_CAPTURE", "description": "Capture a picture using the camera app and return the URI of the saved photo.\n\nThis function uses the ACTION_IMAGE_CAPTURE intent to open the camera app and capture a photo.\nThe photo is saved to a URI location, which is returned by this function.\nUser can then use this URI to access the photo file and do whatever they want with it.", "arguments": {}, "returns": {"description": "The URI location where the camera app saves the photo file.", "type": "str"}}]}
{"query": "Could you initiate a picture taking session and then guide me to the location where it's saved?", "answers": [{"id": 0, "name": "ACTION_IMAGE_CAPTURE", "arguments": {}}], "tools": [{"name": "ACTION_IMAGE_CAPTURE", "description": "Capture a picture using the camera app and return the URI of the saved photo.\n\nThis function uses the ACTION_IMAGE_CAPTURE intent to open the camera app and capture a photo.\nThe photo is saved to a URI location, which is returned by this function.\nUser can then use this URI to access the photo file and do whatever they want with it.", "arguments": {}, "returns": {"description": "The URI location where the camera app saves the photo file.", "type": "str"}}]}
{"query": "Activate my device's camera to photograph right now and let me know the URI of that photo.", "answers": [{"id": 0, "name": "ACTION_IMAGE_CAPTURE", "arguments": {}}], "tools": [{"name": "ACTION_IMAGE_CAPTURE", "description": "Capture a picture using the camera app and return the URI of the saved photo.\n\nThis function uses the ACTION_IMAGE_CAPTURE intent to open the camera app and capture a photo.\nThe photo is saved to a URI location, which is returned by this function.\nUser can then use this URI to access the photo file and do whatever they want with it.", "arguments": {}, "returns": {"description": "The URI location where the camera app saves the photo file.", "type": "str"}}]}
{"query": "Please enable the camera on my smartphone to capture an image and tell me where the image file is placed.", "answers": [{"id": 0, "name": "ACTION_IMAGE_CAPTURE", "arguments": {}}], "tools": [{"name": "ACTION_IMAGE_CAPTURE", "description": "Capture a picture using the camera app and return the URI of the saved photo.\n\nThis function uses the ACTION_IMAGE_CAPTURE intent to open the camera app and capture a photo.\nThe photo is saved to a URI location, which is returned by this function.\nUser can then use this URI to access the photo file and do whatever they want with it.", "arguments": {}, "returns": {"description": "The URI location where the camera app saves the photo file.", "type": "str"}}]}
{"query": "I wish to use the camera app for snapping a quick picture. Can you let me know where the photo gets stored?", "answers": [{"id": 0, "name": "ACTION_IMAGE_CAPTURE", "arguments": {}}], "tools": [{"name": "ACTION_IMAGE_CAPTURE", "description": "Capture a picture using the camera app and return the URI of the saved photo.\n\nThis function uses the ACTION_IMAGE_CAPTURE intent to open the camera app and capture a photo.\nThe photo is saved to a URI location, which is returned by this function.\nUser can then use this URI to access the photo file and do whatever they want with it.", "arguments": {}, "returns": {"description": "The URI location where the camera app saves the photo file.", "type": "str"}}]}
{"query": "Execute a picture taking operation using the camera application and give me the URI where it saves.", "answers": [{"id": 0, "name": "ACTION_IMAGE_CAPTURE", "arguments": {}}], "tools": [{"name": "ACTION_IMAGE_CAPTURE", "description": "Capture a picture using the camera app and return the URI of the saved photo.\n\nThis function uses the ACTION_IMAGE_CAPTURE intent to open the camera app and capture a photo.\nThe photo is saved to a URI location, which is returned by this function.\nUser can then use this URI to access the photo file and do whatever they want with it.", "arguments": {}, "returns": {"description": "The URI location where the camera app saves the photo file.", "type": "str"}}]}
{"query": "Utilize my phone's camera to capture a new image and provide me the saved position of the image.", "answers": [{"id": 0, "name": "ACTION_IMAGE_CAPTURE", "arguments": {}}], "tools": [{"name": "ACTION_IMAGE_CAPTURE", "description": "Capture a picture using the camera app and return the URI of the saved photo.\n\nThis function uses the ACTION_IMAGE_CAPTURE intent to open the camera app and capture a photo.\nThe photo is saved to a URI location, which is returned by this function.\nUser can then use this URI to access the photo file and do whatever they want with it.", "arguments": {}, "returns": {"description": "The URI location where the camera app saves the photo file.", "type": "str"}}]}
{"query": "Command the camera app to take a picture and then show where the photo file is saved.", "answers": [{"id": 0, "name": "ACTION_IMAGE_CAPTURE", "arguments": {}}], "tools": [{"name": "ACTION_IMAGE_CAPTURE", "description": "Capture a picture using the camera app and return the URI of the saved photo.\n\nThis function uses the ACTION_IMAGE_CAPTURE intent to open the camera app and capture a photo.\nThe photo is saved to a URI location, which is returned by this function.\nUser can then use this URI to access the photo file and do whatever they want with it.", "arguments": {}, "returns": {"description": "The URI location where the camera app saves the photo file.", "type": "str"}}]}
{"query": "Open the camera app, take a photo, and then give me the location of the saved photo file.", "answers": [{"id": 0, "name": "ACTION_IMAGE_CAPTURE", "arguments": {}}], "tools": [{"name": "ACTION_IMAGE_CAPTURE", "description": "Capture a picture using the camera app and return the URI of the saved photo.\n\nThis function uses the ACTION_IMAGE_CAPTURE intent to open the camera app and capture a photo.\nThe photo is saved to a URI location, which is returned by this function.\nUser can then use this URI to access the photo file and do whatever they want with it.", "arguments": {}, "returns": {"description": "The URI location where the camera app saves the photo file.", "type": "str"}}]}
{"query": "I require a photo captured with my camera app. Where will I find the URI of this captured image?", "answers": [{"id": 0, "name": "ACTION_IMAGE_CAPTURE", "arguments": {}}], "tools": [{"name": "ACTION_IMAGE_CAPTURE", "description": "Capture a picture using the camera app and return the URI of the saved photo.\n\nThis function uses the ACTION_IMAGE_CAPTURE intent to open the camera app and capture a photo.\nThe photo is saved to a URI location, which is returned by this function.\nUser can then use this URI to access the photo file and do whatever they want with it.", "arguments": {}, "returns": {"description": "The URI location where the camera app saves the photo file.", "type": "str"}}]}
{"query": "Can you help me add a new contact named Jane Smith with her email as janesmith@mail.com?", "answers": [{"id": 0, "name": "ACTION_INSERT_CONTACT", "arguments": {"contact_info": {"name": "Jane Smith", "email": "janesmith@mail.com"}}}], "tools": [{"name": "ACTION_INSERT_CONTACT", "description": "Insert a new contact.\n\nThis function allows the user to create a new contact with the provided\ncontact information. It will open the contact creation interface with\npre-filled information based on the provided data.", "arguments": {"contact_info": {"description": "A dictionary containing the contact\ninformation to pre-fill in the new contact form. Keys should\ncorrespond to contact fields (available key: 'email', 'phone', 'name', 'company', 'address'),\nand values should be the data to pre-fill.", "type": "Dict[str, Any]", "required": true}}, "examples": ["ACTION_INSERT({\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"phone\": \"1234567890\"\n})"]}]}
{"query": "I'd like to input a new contact entry for Mike Johnson, who works at WebEx Inc., and his phone number is 9876543210.", "answers": [{"id": 0, "name": "ACTION_INSERT_CONTACT", "arguments": {"contact_info": {"name": "Mike Johnson", "phone": "9876543210", "company": "WebEx Inc."}}}], "tools": [{"name": "ACTION_INSERT_CONTACT", "description": "Insert a new contact.\n\nThis function allows the user to create a new contact with the provided\ncontact information. It will open the contact creation interface with\npre-filled information based on the provided data.", "arguments": {"contact_info": {"description": "A dictionary containing the contact\ninformation to pre-fill in the new contact form. Keys should\ncorrespond to contact fields (available key: 'email', 'phone', 'name', 'company', 'address'),\nand values should be the data to pre-fill.", "type": "Dict[str, Any]", "required": true}}, "examples": ["ACTION_INSERT({\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"phone\": \"1234567890\"\n})"]}]}
{"query": "Please set up a contact for Alexis Doe; include details like her company as NexGen Innovations, address at 1234 Tech Park, Bay Area, and her business email is alexis.d@nexgen.com.", "answers": [{"id": 0, "name": "ACTION_INSERT_CONTACT", "arguments": {"contact_info": {"name": "Alexis Doe", "company": "NexGen Innovations", "address": "1234 Tech Park, Bay Area", "email": "alexis.d@nexgen.com"}}}], "tools": [{"name": "ACTION_INSERT_CONTACT", "description": "Insert a new contact.\n\nThis function allows the user to create a new contact with the provided\ncontact information. It will open the contact creation interface with\npre-filled information based on the provided data.", "arguments": {"contact_info": {"description": "A dictionary containing the contact\ninformation to pre-fill in the new contact form. Keys should\ncorrespond to contact fields (available key: 'email', 'phone', 'name', 'company', 'address'),\nand values should be the data to pre-fill.", "type": "Dict[str, Any]", "required": true}}, "examples": ["ACTION_INSERT({\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"phone\": \"1234567890\"\n})"]}]}
{"query": "I need a quick add for a contact named Tom Hardy, information should include his work at Global Tech and his email which is tom.hardy@gtech.com.", "answers": [{"id": 0, "name": "ACTION_INSERT_CONTACT", "arguments": {"contact_info": {"name": "Tom Hardy", "company": "Global Tech", "email": "tom.hardy@gtech.com"}}}], "tools": [{"name": "ACTION_INSERT_CONTACT", "description": "Insert a new contact.\n\nThis function allows the user to create a new contact with the provided\ncontact information. It will open the contact creation interface with\npre-filled information based on the provided data.", "arguments": {"contact_info": {"description": "A dictionary containing the contact\ninformation to pre-fill in the new contact form. Keys should\ncorrespond to contact fields (available key: 'email', 'phone', 'name', 'company', 'address'),\nand values should be the data to pre-fill.", "type": "Dict[str, Any]", "required": true}}, "examples": ["ACTION_INSERT({\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"phone\": \"1234567890\"\n})"]}]}
{"query": "Create a contact card for a person named Elisa Mirth, her company is Mirthstone Ltd, and she can be reached at elisam@mirthstone.com.", "answers": [{"id": 0, "name": "ACTION_INSERT_CONTACT", "arguments": {"contact_info": {"name": "Elisa Mirth", "company": "Mirthstone Ltd", "email": "elisam@mirthstone.com"}}}], "tools": [{"name": "ACTION_INSERT_CONTACT", "description": "Insert a new contact.\n\nThis function allows the user to create a new contact with the provided\ncontact information. It will open the contact creation interface with\npre-filled information based on the provided data.", "arguments": {"contact_info": {"description": "A dictionary containing the contact\ninformation to pre-fill in the new contact form. Keys should\ncorrespond to contact fields (available key: 'email', 'phone', 'name', 'company', 'address'),\nand values should be the data to pre-fill.", "type": "Dict[str, Any]", "required": true}}, "examples": ["ACTION_INSERT({\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"phone\": \"1234567890\"\n})"]}]}
{"query": "We have a new client, Charles Green, from Greenery Solutions; please register his contact with his business address as 4567 Nature St, Eco City.", "answers": [{"id": 0, "name": "ACTION_INSERT_CONTACT", "arguments": {"contact_info": {"name": "Charles Green", "company": "Greenery Solutions", "address": "4567 Nature St, Eco City"}}}], "tools": [{"name": "ACTION_INSERT_CONTACT", "description": "Insert a new contact.\n\nThis function allows the user to create a new contact with the provided\ncontact information. It will open the contact creation interface with\npre-filled information based on the provided data.", "arguments": {"contact_info": {"description": "A dictionary containing the contact\ninformation to pre-fill in the new contact form. Keys should\ncorrespond to contact fields (available key: 'email', 'phone', 'name', 'company', 'address'),\nand values should be the data to pre-fill.", "type": "Dict[str, Any]", "required": true}}, "examples": ["ACTION_INSERT({\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"phone\": \"1234567890\"\n})"]}]}
{"query": "Insert a new contact for Julia Ming at Ming Industries, include her email julia.m@mingind.com and her address at 789 Enterprise Blvd, Tech Town.", "answers": [{"id": 0, "name": "ACTION_INSERT_CONTACT", "arguments": {"contact_info": {"name": "Julia Ming", "company": "Ming Industries", "email": "julia.m@mingind.com", "address": "789 Enterprise Blvd, Tech Town"}}}], "tools": [{"name": "ACTION_INSERT_CONTACT", "description": "Insert a new contact.\n\nThis function allows the user to create a new contact with the provided\ncontact information. It will open the contact creation interface with\npre-filled information based on the provided data.", "arguments": {"contact_info": {"description": "A dictionary containing the contact\ninformation to pre-fill in the new contact form. Keys should\ncorrespond to contact fields (available key: 'email', 'phone', 'name', 'company', 'address'),\nand values should be the data to pre-fill.", "type": "Dict[str, Any]", "required": true}}, "examples": ["ACTION_INSERT({\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"phone\": \"1234567890\"\n})"]}]}
{"query": "Add contact details for Harry Potter, his email address is harry.potter@wizards.com and his phone number is 1122334455.", "answers": [{"id": 0, "name": "ACTION_INSERT_CONTACT", "arguments": {"contact_info": {"name": "Harry Potter", "email": "harry.potter@wizards.com", "phone": "1122334455"}}}], "tools": [{"name": "ACTION_INSERT_CONTACT", "description": "Insert a new contact.\n\nThis function allows the user to create a new contact with the provided\ncontact information. It will open the contact creation interface with\npre-filled information based on the provided data.", "arguments": {"contact_info": {"description": "A dictionary containing the contact\ninformation to pre-fill in the new contact form. Keys should\ncorrespond to contact fields (available key: 'email', 'phone', 'name', 'company', 'address'),\nand values should be the data to pre-fill.", "type": "Dict[str, Any]", "required": true}}, "examples": ["ACTION_INSERT({\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"phone\": \"1234567890\"\n})"]}]}
{"query": "I want to input a new contact, Emily Blunt, attached with her number 2134553214 and working at High Towers Inc.", "answers": [{"id": 0, "name": "ACTION_INSERT_CONTACT", "arguments": {"contact_info": {"name": "Emily Blunt", "phone": "2134553214", "company": "High Towers Inc."}}}], "tools": [{"name": "ACTION_INSERT_CONTACT", "description": "Insert a new contact.\n\nThis function allows the user to create a new contact with the provided\ncontact information. It will open the contact creation interface with\npre-filled information based on the provided data.", "arguments": {"contact_info": {"description": "A dictionary containing the contact\ninformation to pre-fill in the new contact form. Keys should\ncorrespond to contact fields (available key: 'email', 'phone', 'name', 'company', 'address'),\nand values should be the data to pre-fill.", "type": "Dict[str, Any]", "required": true}}, "examples": ["ACTION_INSERT({\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"phone\": \"1234567890\"\n})"]}]}
{"query": "Can you organize a new contact named Robert Brown, with contact email robert.brown@example.com? He is with Innovatech Ltd.", "answers": [{"id": 0, "name": "ACTION_INSERT_CONTACT", "arguments": {"contact_info": {"name": "Robert Brown", "email": "robert.brown@example.com", "company": "Innovatech Ltd"}}}], "tools": [{"name": "ACTION_INSERT_CONTACT", "description": "Insert a new contact.\n\nThis function allows the user to create a new contact with the provided\ncontact information. It will open the contact creation interface with\npre-filled information based on the provided data.", "arguments": {"contact_info": {"description": "A dictionary containing the contact\ninformation to pre-fill in the new contact form. Keys should\ncorrespond to contact fields (available key: 'email', 'phone', 'name', 'company', 'address'),\nand values should be the data to pre-fill.", "type": "Dict[str, Any]", "required": true}}, "examples": ["ACTION_INSERT({\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"phone\": \"1234567890\"\n})"]}]}
{"query": "Set up a new contact for Lisa Ray with the following info: her contact email lisa.ray@example.com, phone number 9080706050, and her company Ray Enterprises.", "answers": [{"id": 0, "name": "ACTION_INSERT_CONTACT", "arguments": {"contact_info": {"name": "Lisa Ray", "email": "lisa.ray@example.com", "phone": "9080706050", "company": "Ray Enterprises"}}}], "tools": [{"name": "ACTION_INSERT_CONTACT", "description": "Insert a new contact.\n\nThis function allows the user to create a new contact with the provided\ncontact information. It will open the contact creation interface with\npre-filled information based on the provided data.", "arguments": {"contact_info": {"description": "A dictionary containing the contact\ninformation to pre-fill in the new contact form. Keys should\ncorrespond to contact fields (available key: 'email', 'phone', 'name', 'company', 'address'),\nand values should be the data to pre-fill.", "type": "Dict[str, Any]", "required": true}}, "examples": ["ACTION_INSERT({\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"phone\": \"1234567890\"\n})"]}]}
{"query": "Can you help me set up an all-day event titled 'Product Launch' with a description about launching our new tech gadget this Saturday?", "answers": [{"id": 0, "name": "ACTION_INSERT_EVENT", "arguments": {"TITLE": "Product Launch", "DESCRIPTION": "Launching our new tech gadget", "EXTRA_EVENT_ALL_DAY": true}}], "tools": [{"name": "ACTION_INSERT_EVENT", "description": "Add a new event to the user's calendar.\n", "arguments": {"TITLE": {"description": "The event title.", "type": "str", "required": true}, "DESCRIPTION": {"description": "The event description.", "type": "str", "required": true}, "EVENT_LOCATION": {"description": "The event location. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EVENT_ALL_DAY": {"description": "A boolean specifying whether this is an all-day event. Default is False.", "type": "bool", "required": false, "default": false}, "EXTRA_EVENT_BEGIN_TIME": {"description": "The start time of the event in ISO 8601 format. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EVENT_END_TIME": {"description": "The end time of the event in ISO 8601 format. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EMAIL": {"description": "A list of email addresses that specify the invitees. Default is None.", "type": "List[str]", "required": false, "default": null}}}]}
{"query": "I need to add an event called 'Quarterly Business Review' in our main conference room; the focus is on Q1 sales and marketing strategies, from 9 AM to 12 PM next Monday.", "answers": [{"id": 0, "name": "ACTION_INSERT_EVENT", "arguments": {"TITLE": "Quarterly Business Review", "DESCRIPTION": "Focus on Q1 sales and marketing strategies", "EVENT_LOCATION": "main conference room", "EXTRA_EVENT_BEGIN_TIME": "2024-01-08T09:00:00", "EXTRA_EVENT_END_TIME": "2024-01-08T12:00:00"}}], "tools": [{"name": "ACTION_INSERT_EVENT", "description": "Add a new event to the user's calendar.\n", "arguments": {"TITLE": {"description": "The event title.", "type": "str", "required": true}, "DESCRIPTION": {"description": "The event description.", "type": "str", "required": true}, "EVENT_LOCATION": {"description": "The event location. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EVENT_ALL_DAY": {"description": "A boolean specifying whether this is an all-day event. Default is False.", "type": "bool", "required": false, "default": false}, "EXTRA_EVENT_BEGIN_TIME": {"description": "The start time of the event in ISO 8601 format. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EVENT_END_TIME": {"description": "The end time of the event in ISO 8601 format. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EMAIL": {"description": "A list of email addresses that specify the invitees. Default is None.", "type": "List[str]", "required": false, "default": null}}}]}
{"query": "Schedule a team meeting titled 'Tech Sync' described as discussing project milestones and task assignments, in the small meeting room, taking place tomorrow from 3 PM to 4:30 PM.", "answers": [{"id": 0, "name": "ACTION_INSERT_EVENT", "arguments": {"TITLE": "Tech Sync", "DESCRIPTION": "Discussing project milestones and task assignments", "EVENT_LOCATION": "small meeting room", "EXTRA_EVENT_BEGIN_TIME": "2024-01-09T15:00:00", "EXTRA_EVENT_END_TIME": "2024-01-09T16:30:00"}}], "tools": [{"name": "ACTION_INSERT_EVENT", "description": "Add a new event to the user's calendar.\n", "arguments": {"TITLE": {"description": "The event title.", "type": "str", "required": true}, "DESCRIPTION": {"description": "The event description.", "type": "str", "required": true}, "EVENT_LOCATION": {"description": "The event location. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EVENT_ALL_DAY": {"description": "A boolean specifying whether this is an all-day event. Default is False.", "type": "bool", "required": false, "default": false}, "EXTRA_EVENT_BEGIN_TIME": {"description": "The start time of the event in ISO 8601 format. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EVENT_END_TIME": {"description": "The end time of the event in ISO 8601 format. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EMAIL": {"description": "A list of email addresses that specify the invitees. Default is None.", "type": "List[str]", "required": false, "default": null}}}]}
{"query": "Please add a new event entitled 'Client Workshop', with a detailed plan on user experience improvements, at Workshop Hall, and make it a full day event the day after tomorrow.", "answers": [{"id": 0, "name": "ACTION_INSERT_EVENT", "arguments": {"TITLE": "Client Workshop", "DESCRIPTION": "Detailed plan on user experience improvements", "EVENT_LOCATION": "Workshop Hall", "EXTRA_EVENT_ALL_DAY": true}}], "tools": [{"name": "ACTION_INSERT_EVENT", "description": "Add a new event to the user's calendar.\n", "arguments": {"TITLE": {"description": "The event title.", "type": "str", "required": true}, "DESCRIPTION": {"description": "The event description.", "type": "str", "required": true}, "EVENT_LOCATION": {"description": "The event location. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EVENT_ALL_DAY": {"description": "A boolean specifying whether this is an all-day event. Default is False.", "type": "bool", "required": false, "default": false}, "EXTRA_EVENT_BEGIN_TIME": {"description": "The start time of the event in ISO 8601 format. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EVENT_END_TIME": {"description": "The end time of the event in ISO 8601 format. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EMAIL": {"description": "A list of email addresses that specify the invitees. Default is None.", "type": "List[str]", "required": false, "default": null}}}]}
{"query": "Create a calendar event named 'HR Training Session', described as an orientation for new hires, in the HR conference room, scheduled for next Friday from 10 AM to 5 PM.", "answers": [{"id": 0, "name": "ACTION_INSERT_EVENT", "arguments": {"TITLE": "HR Training Session", "DESCRIPTION": "Orientation for new hires", "EVENT_LOCATION": "HR conference room", "EXTRA_EVENT_BEGIN_TIME": "2024-01-12T10:00:00", "EXTRA_EVENT_END_TIME": "2024-01-12T17:00:00"}}], "tools": [{"name": "ACTION_INSERT_EVENT", "description": "Add a new event to the user's calendar.\n", "arguments": {"TITLE": {"description": "The event title.", "type": "str", "required": true}, "DESCRIPTION": {"description": "The event description.", "type": "str", "required": true}, "EVENT_LOCATION": {"description": "The event location. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EVENT_ALL_DAY": {"description": "A boolean specifying whether this is an all-day event. Default is False.", "type": "bool", "required": false, "default": false}, "EXTRA_EVENT_BEGIN_TIME": {"description": "The start time of the event in ISO 8601 format. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EVENT_END_TIME": {"description": "The end time of the event in ISO 8601 format. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EMAIL": {"description": "A list of email addresses that specify the invitees. Default is None.", "type": "List[str]", "required": false, "default": null}}}]}
{"query": "Let's organize an event titled 'Annual General Meeting' meant for company stakeholders, in the auditorium, next month from 1 PM to 4 PM.", "answers": [{"id": 0, "name": "ACTION_INSERT_EVENT", "arguments": {"TITLE": "Annual General Meeting", "DESCRIPTION": "For company stakeholders", "EVENT_LOCATION": "auditorium", "EXTRA_EVENT_BEGIN_TIME": "2024-02-15T13:00:00", "EXTRA_EVENT_END_TIME": "2024-02-15T16:00:00"}}], "tools": [{"name": "ACTION_INSERT_EVENT", "description": "Add a new event to the user's calendar.\n", "arguments": {"TITLE": {"description": "The event title.", "type": "str", "required": true}, "DESCRIPTION": {"description": "The event description.", "type": "str", "required": true}, "EVENT_LOCATION": {"description": "The event location. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EVENT_ALL_DAY": {"description": "A boolean specifying whether this is an all-day event. Default is False.", "type": "bool", "required": false, "default": false}, "EXTRA_EVENT_BEGIN_TIME": {"description": "The start time of the event in ISO 8601 format. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EVENT_END_TIME": {"description": "The end time of the event in ISO 8601 format. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EMAIL": {"description": "A list of email addresses that specify the invitees. Default is None.", "type": "List[str]", "required": false, "default": null}}}]}
{"query": "Add a meeting titled 'Budget Review' covering the next fiscal year's financial planning, to be held in Board Room 3 next Wednesday from 2 PM to 3:30 PM.", "answers": [{"id": 0, "name": "ACTION_INSERT_EVENT", "arguments": {"TITLE": "Budget Review", "DESCRIPTION": "Next fiscal year's financial planning", "EVENT_LOCATION": "Board Room 3", "EXTRA_EVENT_BEGIN_TIME": "2024-01-10T14:00:00", "EXTRA_EVENT_END_TIME": "2024-01-10T15:30:00"}}], "tools": [{"name": "ACTION_INSERT_EVENT", "description": "Add a new event to the user's calendar.\n", "arguments": {"TITLE": {"description": "The event title.", "type": "str", "required": true}, "DESCRIPTION": {"description": "The event description.", "type": "str", "required": true}, "EVENT_LOCATION": {"description": "The event location. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EVENT_ALL_DAY": {"description": "A boolean specifying whether this is an all-day event. Default is False.", "type": "bool", "required": false, "default": false}, "EXTRA_EVENT_BEGIN_TIME": {"description": "The start time of the event in ISO 8601 format. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EVENT_END_TIME": {"description": "The end time of the event in ISO 8601 format. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EMAIL": {"description": "A list of email addresses that specify the invitees. Default is None.", "type": "List[str]", "required": false, "default": null}}}]}
{"query": "Please insert a book club event entitled 'Fiction Fans Unite!' which discusses latest thriller novels, to take place at the local library, starting tomorrow at 6 PM and concluding at 7:30 PM.", "answers": [{"id": 0, "name": "ACTION_INSERT_EVENT", "arguments": {"TITLE": "Fiction Fans Unite!", "DESCRIPTION": "Discusses latest thriller novels", "EVENT_LOCATION": "local library", "EXTRA_EVENT_BEGIN_TIME": "2024-01-09T18:00:00", "EXTRA_EVENT_END_TIME": "2024-01-09T19:30:00"}}], "tools": [{"name": "ACTION_INSERT_EVENT", "description": "Add a new event to the user's calendar.\n", "arguments": {"TITLE": {"description": "The event title.", "type": "str", "required": true}, "DESCRIPTION": {"description": "The event description.", "type": "str", "required": true}, "EVENT_LOCATION": {"description": "The event location. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EVENT_ALL_DAY": {"description": "A boolean specifying whether this is an all-day event. Default is False.", "type": "bool", "required": false, "default": false}, "EXTRA_EVENT_BEGIN_TIME": {"description": "The start time of the event in ISO 8601 format. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EVENT_END_TIME": {"description": "The end time of the event in ISO 8601 format. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EMAIL": {"description": "A list of email addresses that specify the invitees. Default is None.", "type": "List[str]", "required": false, "default": null}}}]}
{"query": "Create a get-together event called 'End of Year Celebration', meaning a casual meet-up for all department members, at The Rooftop Bar, occurring all day on December 31st.", "answers": [{"id": 0, "name": "ACTION_INSERT_EVENT", "arguments": {"TITLE": "End of Year Celebration", "DESCRIPTION": "Casual meet-up for all department members", "EVENT_LOCATION": "The Rooftop Bar", "EXTRA_EVENT_ALL_DAY": true}}], "tools": [{"name": "ACTION_INSERT_EVENT", "description": "Add a new event to the user's calendar.\n", "arguments": {"TITLE": {"description": "The event title.", "type": "str", "required": true}, "DESCRIPTION": {"description": "The event description.", "type": "str", "required": true}, "EVENT_LOCATION": {"description": "The event location. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EVENT_ALL_DAY": {"description": "A boolean specifying whether this is an all-day event. Default is False.", "type": "bool", "required": false, "default": false}, "EXTRA_EVENT_BEGIN_TIME": {"description": "The start time of the event in ISO 8601 format. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EVENT_END_TIME": {"description": "The end time of the event in ISO 8601 format. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EMAIL": {"description": "A list of email addresses that specify the invitees. Default is None.", "type": "List[str]", "required": false, "default": null}}}]}
{"query": "Add to my calendar an event entitled 'Software Release v1.3', detailed as the official rollout of version 1.3 of our application, in our main office, starting at 10 AM and ending at 11 AM next Thursday.", "answers": [{"id": 0, "name": "ACTION_INSERT_EVENT", "arguments": {"TITLE": "Software Release v1.3", "DESCRIPTION": "Official rollout of version 1.3 of our application", "EVENT_LOCATION": "main office", "EXTRA_EVENT_BEGIN_TIME": "2024-01-11T10:00:00", "EXTRA_EVENT_END_TIME": "2024-01-11T11:00:00"}}], "tools": [{"name": "ACTION_INSERT_EVENT", "description": "Add a new event to the user's calendar.\n", "arguments": {"TITLE": {"description": "The event title.", "type": "str", "required": true}, "DESCRIPTION": {"description": "The event description.", "type": "str", "required": true}, "EVENT_LOCATION": {"description": "The event location. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EVENT_ALL_DAY": {"description": "A boolean specifying whether this is an all-day event. Default is False.", "type": "bool", "required": false, "default": false}, "EXTRA_EVENT_BEGIN_TIME": {"description": "The start time of the event in ISO 8601 format. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EVENT_END_TIME": {"description": "The end time of the event in ISO 8601 format. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EMAIL": {"description": "A list of email addresses that specify the invitees. Default is None.", "type": "List[str]", "required": false, "default": null}}}]}
{"query": "Could you put in a reminder titled 'Project Deadline' regarding the final submission of the marketing proposal, at our head office, set for the final hour of work next Monday?", "answers": [{"id": 0, "name": "ACTION_INSERT_EVENT", "arguments": {"TITLE": "Project Deadline", "DESCRIPTION": "Final submission of the marketing proposal", "EVENT_LOCATION": "head office", "EXTRA_EVENT_BEGIN_TIME": "2024-01-08T16:00:00", "EXTRA_EVENT_END_TIME": "2024-01-08T17:00:00"}}], "tools": [{"name": "ACTION_INSERT_EVENT", "description": "Add a new event to the user's calendar.\n", "arguments": {"TITLE": {"description": "The event title.", "type": "str", "required": true}, "DESCRIPTION": {"description": "The event description.", "type": "str", "required": true}, "EVENT_LOCATION": {"description": "The event location. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EVENT_ALL_DAY": {"description": "A boolean specifying whether this is an all-day event. Default is False.", "type": "bool", "required": false, "default": false}, "EXTRA_EVENT_BEGIN_TIME": {"description": "The start time of the event in ISO 8601 format. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EVENT_END_TIME": {"description": "The end time of the event in ISO 8601 format. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EMAIL": {"description": "A list of email addresses that specify the invitees. Default is None.", "type": "List[str]", "required": false, "default": null}}}]}
{"query": "Schedule a new event titled 'Orientation Day' designed to welcome and inform new employees, at Training Hall, set as an all-day event this upcoming Monday.", "answers": [{"id": 0, "name": "ACTION_INSERT_EVENT", "arguments": {"TITLE": "Orientation Day", "DESCRIPTION": "Welcome and inform new employees", "EVENT_LOCATION": "Training Hall", "EXTRA_EVENT_ALL_DAY": true}}], "tools": [{"name": "ACTION_INSERT_EVENT", "description": "Add a new event to the user's calendar.\n", "arguments": {"TITLE": {"description": "The event title.", "type": "str", "required": true}, "DESCRIPTION": {"description": "The event description.", "type": "str", "required": true}, "EVENT_LOCATION": {"description": "The event location. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EVENT_ALL_DAY": {"description": "A boolean specifying whether this is an all-day event. Default is False.", "type": "bool", "required": false, "default": false}, "EXTRA_EVENT_BEGIN_TIME": {"description": "The start time of the event in ISO 8601 format. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EVENT_END_TIME": {"description": "The end time of the event in ISO 8601 format. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EMAIL": {"description": "A list of email addresses that specify the invitees. Default is None.", "type": "List[str]", "required": false, "default": null}}}]}
{"query": "Organize an event named 'Investor Pitch' aimed at showcasing our new product lines to potential investors, at Downtown Conference Center, beginning at 2 PM and finishing by 4 PM next Tuesday.", "answers": [{"id": 0, "name": "ACTION_INSERT_EVENT", "arguments": {"TITLE": "Investor Pitch", "DESCRIPTION": "Showcasing our new product lines to potential investors", "EVENT_LOCATION": "Downtown Conference Center", "EXTRA_EVENT_BEGIN_TIME": "2024-01-09T14:00:00", "EXTRA_EVENT_END_TIME": "2024-01-09T16:00:00"}}], "tools": [{"name": "ACTION_INSERT_EVENT", "description": "Add a new event to the user's calendar.\n", "arguments": {"TITLE": {"description": "The event title.", "type": "str", "required": true}, "DESCRIPTION": {"description": "The event description.", "type": "str", "required": true}, "EVENT_LOCATION": {"description": "The event location. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EVENT_ALL_DAY": {"description": "A boolean specifying whether this is an all-day event. Default is False.", "type": "bool", "required": false, "default": false}, "EXTRA_EVENT_BEGIN_TIME": {"description": "The start time of the event in ISO 8601 format. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EVENT_END_TIME": {"description": "The end time of the event in ISO 8601 format. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EMAIL": {"description": "A list of email addresses that specify the invitees. Default is None.", "type": "List[str]", "required": false, "default": null}}}]}
{"query": "Insert into my schedule an event named 'Strategy Meeting', about discussing key business growth strategies, at CEO's Office, beginning at 3 PM and concluding at 5 PM next Thursday.", "answers": [{"id": 0, "name": "ACTION_INSERT_EVENT", "arguments": {"TITLE": "Strategy Meeting", "DESCRIPTION": "Discussing key business growth strategies", "EVENT_LOCATION": "CEO's Office", "EXTRA_EVENT_BEGIN_TIME": "2024-01-11T15:00:00", "EXTRA_EVENT_END_TIME": "2024-01-11T17:00:00"}}], "tools": [{"name": "ACTION_INSERT_EVENT", "description": "Add a new event to the user's calendar.\n", "arguments": {"TITLE": {"description": "The event title.", "type": "str", "required": true}, "DESCRIPTION": {"description": "The event description.", "type": "str", "required": true}, "EVENT_LOCATION": {"description": "The event location. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EVENT_ALL_DAY": {"description": "A boolean specifying whether this is an all-day event. Default is False.", "type": "bool", "required": false, "default": false}, "EXTRA_EVENT_BEGIN_TIME": {"description": "The start time of the event in ISO 8601 format. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EVENT_END_TIME": {"description": "The end time of the event in ISO 8601 format. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EMAIL": {"description": "A list of email addresses that specify the invitees. Default is None.", "type": "List[str]", "required": false, "default": null}}}]}
{"query": "Please add an event called 'Webinar on Data Security', focused on teaching best practices in data protection, to be broadcasted from Studio 2, and make it a full day event next Wednesday.", "answers": [{"id": 0, "name": "ACTION_INSERT_EVENT", "arguments": {"TITLE": "Webinar on Data Security", "DESCRIPTION": "Teaching best practices in data protection", "EVENT_LOCATION": "Studio 2", "EXTRA_EVENT_ALL_DAY": true}}], "tools": [{"name": "ACTION_INSERT_EVENT", "description": "Add a new event to the user's calendar.\n", "arguments": {"TITLE": {"description": "The event title.", "type": "str", "required": true}, "DESCRIPTION": {"description": "The event description.", "type": "str", "required": true}, "EVENT_LOCATION": {"description": "The event location. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EVENT_ALL_DAY": {"description": "A boolean specifying whether this is an all-day event. Default is False.", "type": "bool", "required": false, "default": false}, "EXTRA_EVENT_BEGIN_TIME": {"description": "The start time of the event in ISO 8601 format. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EVENT_END_TIME": {"description": "The end time of the event in ISO 8601 format. Default is None.", "type": "str", "required": false, "default": null}, "EXTRA_EMAIL": {"description": "A list of email addresses that specify the invitees. Default is None.", "type": "List[str]", "required": false, "default": null}}}]}
{"query": "I need to open a single PDF file for my project review.", "answers": [{"id": 0, "name": "ACTION_OPEN_DOCUMENT", "arguments": {"mime_types": ["application/pdf"]}}], "tools": [{"name": "ACTION_OPEN_DOCUMENT", "description": "Opens a file or multiple files of specified MIME type(s).\n\nThis function allows the user to select one or more files of specified MIME type(s).\nIt provides long-term, persistent access to the selected file(s). This is usually better than using ACTION_GET_CONTENT, since it can also access files from cloud storage or other document providers.", "arguments": {"mime_types": {"description": "The MIME type(s) of the file(s) to be selected.\nCan be a list of strings for multiple types or only a list with a single string for a single type.", "type": "List[str]", "required": true}, "allow_multiple": {"description": "If True, allows selection of multiple files. Defaults to False.", "type": "bool", "required": false, "default": false}}, "returns": {"description": "A list of content URIs as strings, each pointing to a selected file.\nIf no file is selected or the operation is cancelled, returns an empty list.", "type": "List[str]"}, "examples": ["# Open a single image\nimage_uris = ACTION_OPEN_DOCUMENT([\"image/*\"])\n\n# Open multiple documents of different types\ndoc_uris = ACTION_OPEN_DOCUMENT([\"application/pdf\", \"text/plain\"], allow_multiple=True)"]}]}
{"query": "Can we select multiple JPEG and PNG images to edit at once?", "answers": [{"id": 0, "name": "ACTION_OPEN_DOCUMENT", "arguments": {"mime_types": ["image/jpeg", "image/png"], "allow_multiple": true}}], "tools": [{"name": "ACTION_OPEN_DOCUMENT", "description": "Opens a file or multiple files of specified MIME type(s).\n\nThis function allows the user to select one or more files of specified MIME type(s).\nIt provides long-term, persistent access to the selected file(s). This is usually better than using ACTION_GET_CONTENT, since it can also access files from cloud storage or other document providers.", "arguments": {"mime_types": {"description": "The MIME type(s) of the file(s) to be selected.\nCan be a list of strings for multiple types or only a list with a single string for a single type.", "type": "List[str]", "required": true}, "allow_multiple": {"description": "If True, allows selection of multiple files. Defaults to False.", "type": "bool", "required": false, "default": false}}, "returns": {"description": "A list of content URIs as strings, each pointing to a selected file.\nIf no file is selected or the operation is cancelled, returns an empty list.", "type": "List[str]"}, "examples": ["# Open a single image\nimage_uris = ACTION_OPEN_DOCUMENT([\"image/*\"])\n\n# Open multiple documents of different types\ndoc_uris = ACTION_OPEN_DOCUMENT([\"application/pdf\", \"text/plain\"], allow_multiple=True)"]}]}
{"query": "Please help me load various document types including Word documents and spreadsheets, and yes, I'll need to select more than one of each.", "answers": [{"id": 0, "name": "ACTION_OPEN_DOCUMENT", "arguments": {"mime_types": ["application/msword", "application/vnd.ms-excel"], "allow_multiple": true}}], "tools": [{"name": "ACTION_OPEN_DOCUMENT", "description": "Opens a file or multiple files of specified MIME type(s).\n\nThis function allows the user to select one or more files of specified MIME type(s).\nIt provides long-term, persistent access to the selected file(s). This is usually better than using ACTION_GET_CONTENT, since it can also access files from cloud storage or other document providers.", "arguments": {"mime_types": {"description": "The MIME type(s) of the file(s) to be selected.\nCan be a list of strings for multiple types or only a list with a single string for a single type.", "type": "List[str]", "required": true}, "allow_multiple": {"description": "If True, allows selection of multiple files. Defaults to False.", "type": "bool", "required": false, "default": false}}, "returns": {"description": "A list of content URIs as strings, each pointing to a selected file.\nIf no file is selected or the operation is cancelled, returns an empty list.", "type": "List[str]"}, "examples": ["# Open a single image\nimage_uris = ACTION_OPEN_DOCUMENT([\"image/*\"])\n\n# Open multiple documents of different types\ndoc_uris = ACTION_OPEN_DOCUMENT([\"application/pdf\", \"text/plain\"], allow_multiple=True)"]}]}
{"query": "I'd like to open a single file that could be either a text file or a Markdown file, based on what's available.", "answers": [{"id": 0, "name": "ACTION_OPEN_DOCUMENT", "arguments": {"mime_types": ["text/plain", "text/markdown"]}}], "tools": [{"name": "ACTION_OPEN_DOCUMENT", "description": "Opens a file or multiple files of specified MIME type(s).\n\nThis function allows the user to select one or more files of specified MIME type(s).\nIt provides long-term, persistent access to the selected file(s). This is usually better than using ACTION_GET_CONTENT, since it can also access files from cloud storage or other document providers.", "arguments": {"mime_types": {"description": "The MIME type(s) of the file(s) to be selected.\nCan be a list of strings for multiple types or only a list with a single string for a single type.", "type": "List[str]", "required": true}, "allow_multiple": {"description": "If True, allows selection of multiple files. Defaults to False.", "type": "bool", "required": false, "default": false}}, "returns": {"description": "A list of content URIs as strings, each pointing to a selected file.\nIf no file is selected or the operation is cancelled, returns an empty list.", "type": "List[str]"}, "examples": ["# Open a single image\nimage_uris = ACTION_OPEN_DOCUMENT([\"image/*\"])\n\n# Open multiple documents of different types\ndoc_uris = ACTION_OPEN_DOCUMENT([\"application/pdf\", \"text/plain\"], allow_multiple=True)"]}]}
{"query": "Enable selection of multiple video files of any common format for a video editing session I have planned.", "answers": [{"id": 0, "name": "ACTION_OPEN_DOCUMENT", "arguments": {"mime_types": ["video/*"], "allow_multiple": true}}], "tools": [{"name": "ACTION_OPEN_DOCUMENT", "description": "Opens a file or multiple files of specified MIME type(s).\n\nThis function allows the user to select one or more files of specified MIME type(s).\nIt provides long-term, persistent access to the selected file(s). This is usually better than using ACTION_GET_CONTENT, since it can also access files from cloud storage or other document providers.", "arguments": {"mime_types": {"description": "The MIME type(s) of the file(s) to be selected.\nCan be a list of strings for multiple types or only a list with a single string for a single type.", "type": "List[str]", "required": true}, "allow_multiple": {"description": "If True, allows selection of multiple files. Defaults to False.", "type": "bool", "required": false, "default": false}}, "returns": {"description": "A list of content URIs as strings, each pointing to a selected file.\nIf no file is selected or the operation is cancelled, returns an empty list.", "type": "List[str]"}, "examples": ["# Open a single image\nimage_uris = ACTION_OPEN_DOCUMENT([\"image/*\"])\n\n# Open multiple documents of different types\ndoc_uris = ACTION_OPEN_DOCUMENT([\"application/pdf\", \"text/plain\"], allow_multiple=True)"]}]}
{"query": "For a presentation, I need to access a single PowerPoint file stored in the cloud.", "answers": [{"id": 0, "name": "ACTION_OPEN_DOCUMENT", "arguments": {"mime_types": ["application/vnd.ms-powerpoint"]}}], "tools": [{"name": "ACTION_OPEN_DOCUMENT", "description": "Opens a file or multiple files of specified MIME type(s).\n\nThis function allows the user to select one or more files of specified MIME type(s).\nIt provides long-term, persistent access to the selected file(s). This is usually better than using ACTION_GET_CONTENT, since it can also access files from cloud storage or other document providers.", "arguments": {"mime_types": {"description": "The MIME type(s) of the file(s) to be selected.\nCan be a list of strings for multiple types or only a list with a single string for a single type.", "type": "List[str]", "required": true}, "allow_multiple": {"description": "If True, allows selection of multiple files. Defaults to False.", "type": "bool", "required": false, "default": false}}, "returns": {"description": "A list of content URIs as strings, each pointing to a selected file.\nIf no file is selected or the operation is cancelled, returns an empty list.", "type": "List[str]"}, "examples": ["# Open a single image\nimage_uris = ACTION_OPEN_DOCUMENT([\"image/*\"])\n\n# Open multiple documents of different types\ndoc_uris = ACTION_OPEN_DOCUMENT([\"application/pdf\", \"text/plain\"], allow_multiple=True)"]}]}
{"query": "Could you help me load several CSV files for data analysis?", "answers": [{"id": 0, "name": "ACTION_OPEN_DOCUMENT", "arguments": {"mime_types": ["text/csv"], "allow_multiple": true}}], "tools": [{"name": "ACTION_OPEN_DOCUMENT", "description": "Opens a file or multiple files of specified MIME type(s).\n\nThis function allows the user to select one or more files of specified MIME type(s).\nIt provides long-term, persistent access to the selected file(s). This is usually better than using ACTION_GET_CONTENT, since it can also access files from cloud storage or other document providers.", "arguments": {"mime_types": {"description": "The MIME type(s) of the file(s) to be selected.\nCan be a list of strings for multiple types or only a list with a single string for a single type.", "type": "List[str]", "required": true}, "allow_multiple": {"description": "If True, allows selection of multiple files. Defaults to False.", "type": "bool", "required": false, "default": false}}, "returns": {"description": "A list of content URIs as strings, each pointing to a selected file.\nIf no file is selected or the operation is cancelled, returns an empty list.", "type": "List[str]"}, "examples": ["# Open a single image\nimage_uris = ACTION_OPEN_DOCUMENT([\"image/*\"])\n\n# Open multiple documents of different types\ndoc_uris = ACTION_OPEN_DOCUMENT([\"application/pdf\", \"text/plain\"], allow_multiple=True)"]}]}
{"query": "I need to open an audio file for sampling, preferably an MP3 or WAV file.", "answers": [{"id": 0, "name": "ACTION_OPEN_DOCUMENT", "arguments": {"mime_types": ["audio/mpeg", "audio/wav"]}}], "tools": [{"name": "ACTION_OPEN_DOCUMENT", "description": "Opens a file or multiple files of specified MIME type(s).\n\nThis function allows the user to select one or more files of specified MIME type(s).\nIt provides long-term, persistent access to the selected file(s). This is usually better than using ACTION_GET_CONTENT, since it can also access files from cloud storage or other document providers.", "arguments": {"mime_types": {"description": "The MIME type(s) of the file(s) to be selected.\nCan be a list of strings for multiple types or only a list with a single string for a single type.", "type": "List[str]", "required": true}, "allow_multiple": {"description": "If True, allows selection of multiple files. Defaults to False.", "type": "bool", "required": false, "default": false}}, "returns": {"description": "A list of content URIs as strings, each pointing to a selected file.\nIf no file is selected or the operation is cancelled, returns an empty list.", "type": "List[str]"}, "examples": ["# Open a single image\nimage_uris = ACTION_OPEN_DOCUMENT([\"image/*\"])\n\n# Open multiple documents of different types\ndoc_uris = ACTION_OPEN_DOCUMENT([\"application/pdf\", \"text/plain\"], allow_multiple=True)"]}]}
{"query": "Can you assist in opening multiple files of varying types, specifically PDFs and text files, for some research I am doing?", "answers": [{"id": 0, "name": "ACTION_OPEN_DOCUMENT", "arguments": {"mime_types": ["application/pdf", "text/plain"], "allow_multiple": true}}], "tools": [{"name": "ACTION_OPEN_DOCUMENT", "description": "Opens a file or multiple files of specified MIME type(s).\n\nThis function allows the user to select one or more files of specified MIME type(s).\nIt provides long-term, persistent access to the selected file(s). This is usually better than using ACTION_GET_CONTENT, since it can also access files from cloud storage or other document providers.", "arguments": {"mime_types": {"description": "The MIME type(s) of the file(s) to be selected.\nCan be a list of strings for multiple types or only a list with a single string for a single type.", "type": "List[str]", "required": true}, "allow_multiple": {"description": "If True, allows selection of multiple files. Defaults to False.", "type": "bool", "required": false, "default": false}}, "returns": {"description": "A list of content URIs as strings, each pointing to a selected file.\nIf no file is selected or the operation is cancelled, returns an empty list.", "type": "List[str]"}, "examples": ["# Open a single image\nimage_uris = ACTION_OPEN_DOCUMENT([\"image/*\"])\n\n# Open multiple documents of different types\ndoc_uris = ACTION_OPEN_DOCUMENT([\"application/pdf\", \"text/plain\"], allow_multiple=True)"]}]}
{"query": "I just need to quickly view an XML file; can you open one up?", "answers": [{"id": 0, "name": "ACTION_OPEN_DOCUMENT", "arguments": {"mime_types": ["text/xml"]}}], "tools": [{"name": "ACTION_OPEN_DOCUMENT", "description": "Opens a file or multiple files of specified MIME type(s).\n\nThis function allows the user to select one or more files of specified MIME type(s).\nIt provides long-term, persistent access to the selected file(s). This is usually better than using ACTION_GET_CONTENT, since it can also access files from cloud storage or other document providers.", "arguments": {"mime_types": {"description": "The MIME type(s) of the file(s) to be selected.\nCan be a list of strings for multiple types or only a list with a single string for a single type.", "type": "List[str]", "required": true}, "allow_multiple": {"description": "If True, allows selection of multiple files. Defaults to False.", "type": "bool", "required": false, "default": false}}, "returns": {"description": "A list of content URIs as strings, each pointing to a selected file.\nIf no file is selected or the operation is cancelled, returns an empty list.", "type": "List[str]"}, "examples": ["# Open a single image\nimage_uris = ACTION_OPEN_DOCUMENT([\"image/*\"])\n\n# Open multiple documents of different types\ndoc_uris = ACTION_OPEN_DOCUMENT([\"application/pdf\", \"text/plain\"], allow_multiple=True)"]}]}
{"query": "Enable the selection of GIF images; I might need more than one for the project I'm working on.", "answers": [{"id": 0, "name": "ACTION_OPEN_DOCUMENT", "arguments": {"mime_types": ["image/gif"], "allow_multiple": true}}], "tools": [{"name": "ACTION_OPEN_DOCUMENT", "description": "Opens a file or multiple files of specified MIME type(s).\n\nThis function allows the user to select one or more files of specified MIME type(s).\nIt provides long-term, persistent access to the selected file(s). This is usually better than using ACTION_GET_CONTENT, since it can also access files from cloud storage or other document providers.", "arguments": {"mime_types": {"description": "The MIME type(s) of the file(s) to be selected.\nCan be a list of strings for multiple types or only a list with a single string for a single type.", "type": "List[str]", "required": true}, "allow_multiple": {"description": "If True, allows selection of multiple files. Defaults to False.", "type": "bool", "required": false, "default": false}}, "returns": {"description": "A list of content URIs as strings, each pointing to a selected file.\nIf no file is selected or the operation is cancelled, returns an empty list.", "type": "List[str]"}, "examples": ["# Open a single image\nimage_uris = ACTION_OPEN_DOCUMENT([\"image/*\"])\n\n# Open multiple documents of different types\ndoc_uris = ACTION_OPEN_DOCUMENT([\"application/pdf\", \"text/plain\"], allow_multiple=True)"]}]}
{"query": "Let's open a batch of JSON files for data manipulation tasks. Multiple file selection is necessary.", "answers": [{"id": 0, "name": "ACTION_OPEN_DOCUMENT", "arguments": {"mime_types": ["application/json"], "allow_multiple": true}}], "tools": [{"name": "ACTION_OPEN_DOCUMENT", "description": "Opens a file or multiple files of specified MIME type(s).\n\nThis function allows the user to select one or more files of specified MIME type(s).\nIt provides long-term, persistent access to the selected file(s). This is usually better than using ACTION_GET_CONTENT, since it can also access files from cloud storage or other document providers.", "arguments": {"mime_types": {"description": "The MIME type(s) of the file(s) to be selected.\nCan be a list of strings for multiple types or only a list with a single string for a single type.", "type": "List[str]", "required": true}, "allow_multiple": {"description": "If True, allows selection of multiple files. Defaults to False.", "type": "bool", "required": false, "default": false}}, "returns": {"description": "A list of content URIs as strings, each pointing to a selected file.\nIf no file is selected or the operation is cancelled, returns an empty list.", "type": "List[str]"}, "examples": ["# Open a single image\nimage_uris = ACTION_OPEN_DOCUMENT([\"image/*\"])\n\n# Open multiple documents of different types\ndoc_uris = ACTION_OPEN_DOCUMENT([\"application/pdf\", \"text/plain\"], allow_multiple=True)"]}]}
{"query": "I need to access just one HTML document from a website reconstruction project.", "answers": [{"id": 0, "name": "ACTION_OPEN_DOCUMENT", "arguments": {"mime_types": ["text/html"]}}], "tools": [{"name": "ACTION_OPEN_DOCUMENT", "description": "Opens a file or multiple files of specified MIME type(s).\n\nThis function allows the user to select one or more files of specified MIME type(s).\nIt provides long-term, persistent access to the selected file(s). This is usually better than using ACTION_GET_CONTENT, since it can also access files from cloud storage or other document providers.", "arguments": {"mime_types": {"description": "The MIME type(s) of the file(s) to be selected.\nCan be a list of strings for multiple types or only a list with a single string for a single type.", "type": "List[str]", "required": true}, "allow_multiple": {"description": "If True, allows selection of multiple files. Defaults to False.", "type": "bool", "required": false, "default": false}}, "returns": {"description": "A list of content URIs as strings, each pointing to a selected file.\nIf no file is selected or the operation is cancelled, returns an empty list.", "type": "List[str]"}, "examples": ["# Open a single image\nimage_uris = ACTION_OPEN_DOCUMENT([\"image/*\"])\n\n# Open multiple documents of different types\ndoc_uris = ACTION_OPEN_DOCUMENT([\"application/pdf\", \"text/plain\"], allow_multiple=True)"]}]}
{"query": "Could you facilitate the opening of one or more Photoshop files for me to review the graphics?", "answers": [{"id": 0, "name": "ACTION_OPEN_DOCUMENT", "arguments": {"mime_types": ["image/vnd.adobe.photoshop"], "allow_multiple": true}}], "tools": [{"name": "ACTION_OPEN_DOCUMENT", "description": "Opens a file or multiple files of specified MIME type(s).\n\nThis function allows the user to select one or more files of specified MIME type(s).\nIt provides long-term, persistent access to the selected file(s). This is usually better than using ACTION_GET_CONTENT, since it can also access files from cloud storage or other document providers.", "arguments": {"mime_types": {"description": "The MIME type(s) of the file(s) to be selected.\nCan be a list of strings for multiple types or only a list with a single string for a single type.", "type": "List[str]", "required": true}, "allow_multiple": {"description": "If True, allows selection of multiple files. Defaults to False.", "type": "bool", "required": false, "default": false}}, "returns": {"description": "A list of content URIs as strings, each pointing to a selected file.\nIf no file is selected or the operation is cancelled, returns an empty list.", "type": "List[str]"}, "examples": ["# Open a single image\nimage_uris = ACTION_OPEN_DOCUMENT([\"image/*\"])\n\n# Open multiple documents of different types\ndoc_uris = ACTION_OPEN_DOCUMENT([\"application/pdf\", \"text/plain\"], allow_multiple=True)"]}]}
{"query": "I need assistance in launching a file with a MIME type of either executable for Windows or shell script for Unix systems.", "answers": [{"id": 0, "name": "ACTION_OPEN_DOCUMENT", "arguments": {"mime_types": ["application/octet-stream", "application/x-sh"]}}], "tools": [{"name": "ACTION_OPEN_DOCUMENT", "description": "Opens a file or multiple files of specified MIME type(s).\n\nThis function allows the user to select one or more files of specified MIME type(s).\nIt provides long-term, persistent access to the selected file(s). This is usually better than using ACTION_GET_CONTENT, since it can also access files from cloud storage or other document providers.", "arguments": {"mime_types": {"description": "The MIME type(s) of the file(s) to be selected.\nCan be a list of strings for multiple types or only a list with a single string for a single type.", "type": "List[str]", "required": true}, "allow_multiple": {"description": "If True, allows selection of multiple files. Defaults to False.", "type": "bool", "required": false, "default": false}}, "returns": {"description": "A list of content URIs as strings, each pointing to a selected file.\nIf no file is selected or the operation is cancelled, returns an empty list.", "type": "List[str]"}, "examples": ["# Open a single image\nimage_uris = ACTION_OPEN_DOCUMENT([\"image/*\"])\n\n# Open multiple documents of different types\ndoc_uris = ACTION_OPEN_DOCUMENT([\"application/pdf\", \"text/plain\"], allow_multiple=True)"]}]}
{"query": "How do I select a phone number from my contact list?", "answers": [{"id": 0, "name": "ACTION_PICK", "arguments": {"data_type": "PHONE"}}], "tools": [{"name": "ACTION_PICK", "description": "This function allows the user to select a contact or specific contact information (such as phone\nnumber, email, or postal address) and returns a content URI for the selected data.", "arguments": {"data_type": {"description": "The type of contact data to pick. Default is \"ALL\".\nAvailable options:\n- \"ADDRESS\": Pick a contact's address\n- \"PHONE\": Pick a contact's phone number\n- \"EMAIL\": Pick a contact's email address\n- \"ALL\": Pick the entire contact", "type": "str", "required": false, "default": "ALL"}}, "returns": {"description": "A content URI as a string, pointing to the selected contact or contact data.\nThis URI can be used to query for more details about the contact.", "type": "str"}}]}
{"query": "I need to fetch an email address from contacts for sending an invitation.", "answers": [{"id": 0, "name": "ACTION_PICK", "arguments": {"data_type": "EMAIL"}}], "tools": [{"name": "ACTION_PICK", "description": "This function allows the user to select a contact or specific contact information (such as phone\nnumber, email, or postal address) and returns a content URI for the selected data.", "arguments": {"data_type": {"description": "The type of contact data to pick. Default is \"ALL\".\nAvailable options:\n- \"ADDRESS\": Pick a contact's address\n- \"PHONE\": Pick a contact's phone number\n- \"EMAIL\": Pick a contact's email address\n- \"ALL\": Pick the entire contact", "type": "str", "required": false, "default": "ALL"}}, "returns": {"description": "A content URI as a string, pointing to the selected contact or contact data.\nThis URI can be used to query for more details about the contact.", "type": "str"}}]}
{"query": "Can you assist me in picking a contact's postal address for a parcel delivery?", "answers": [{"id": 0, "name": "ACTION_PICK", "arguments": {"data_type": "ADDRESS"}}], "tools": [{"name": "ACTION_PICK", "description": "This function allows the user to select a contact or specific contact information (such as phone\nnumber, email, or postal address) and returns a content URI for the selected data.", "arguments": {"data_type": {"description": "The type of contact data to pick. Default is \"ALL\".\nAvailable options:\n- \"ADDRESS\": Pick a contact's address\n- \"PHONE\": Pick a contact's phone number\n- \"EMAIL\": Pick a contact's email address\n- \"ALL\": Pick the entire contact", "type": "str", "required": false, "default": "ALL"}}, "returns": {"description": "A content URI as a string, pointing to the selected contact or contact data.\nThis URI can be used to query for more details about the contact.", "type": "str"}}]}
{"query": "Retrieve the complete contact information for John Doe.", "answers": [{"id": 0, "name": "ACTION_PICK", "arguments": {"data_type": "ALL"}}], "tools": [{"name": "ACTION_PICK", "description": "This function allows the user to select a contact or specific contact information (such as phone\nnumber, email, or postal address) and returns a content URI for the selected data.", "arguments": {"data_type": {"description": "The type of contact data to pick. Default is \"ALL\".\nAvailable options:\n- \"ADDRESS\": Pick a contact's address\n- \"PHONE\": Pick a contact's phone number\n- \"EMAIL\": Pick a contact's email address\n- \"ALL\": Pick the entire contact", "type": "str", "required": false, "default": "ALL"}}, "returns": {"description": "A content URI as a string, pointing to the selected contact or contact data.\nThis URI can be used to query for more details about the contact.", "type": "str"}}]}
{"query": "Find me a way to extract just a friend's phone contact details from my phone directory.", "answers": [{"id": 0, "name": "ACTION_PICK", "arguments": {"data_type": "PHONE"}}], "tools": [{"name": "ACTION_PICK", "description": "This function allows the user to select a contact or specific contact information (such as phone\nnumber, email, or postal address) and returns a content URI for the selected data.", "arguments": {"data_type": {"description": "The type of contact data to pick. Default is \"ALL\".\nAvailable options:\n- \"ADDRESS\": Pick a contact's address\n- \"PHONE\": Pick a contact's phone number\n- \"EMAIL\": Pick a contact's email address\n- \"ALL\": Pick the entire contact", "type": "str", "required": false, "default": "ALL"}}, "returns": {"description": "A content URI as a string, pointing to the selected contact or contact data.\nThis URI can be used to query for more details about the contact.", "type": "str"}}]}
{"query": "For organizing a meetup, I need to obtain email addresses of some of my acquaintances from my contacts.", "answers": [{"id": 0, "name": "ACTION_PICK", "arguments": {"data_type": "EMAIL"}}], "tools": [{"name": "ACTION_PICK", "description": "This function allows the user to select a contact or specific contact information (such as phone\nnumber, email, or postal address) and returns a content URI for the selected data.", "arguments": {"data_type": {"description": "The type of contact data to pick. Default is \"ALL\".\nAvailable options:\n- \"ADDRESS\": Pick a contact's address\n- \"PHONE\": Pick a contact's phone number\n- \"EMAIL\": Pick a contact's email address\n- \"ALL\": Pick the entire contact", "type": "str", "required": false, "default": "ALL"}}, "returns": {"description": "A content URI as a string, pointing to the selected contact or contact data.\nThis URI can be used to query for more details about the contact.", "type": "str"}}]}
{"query": "Let's get the mailing address from Michael's contact to send him a Christmas card.", "answers": [{"id": 0, "name": "ACTION_PICK", "arguments": {"data_type": "ADDRESS"}}], "tools": [{"name": "ACTION_PICK", "description": "This function allows the user to select a contact or specific contact information (such as phone\nnumber, email, or postal address) and returns a content URI for the selected data.", "arguments": {"data_type": {"description": "The type of contact data to pick. Default is \"ALL\".\nAvailable options:\n- \"ADDRESS\": Pick a contact's address\n- \"PHONE\": Pick a contact's phone number\n- \"EMAIL\": Pick a contact's email address\n- \"ALL\": Pick the entire contact", "type": "str", "required": false, "default": "ALL"}}, "returns": {"description": "A content URI as a string, pointing to the selected contact or contact data.\nThis URI can be used to query for more details about the contact.", "type": "str"}}]}
{"query": "I am looking to access an entire contact's info; what should I do?", "answers": [{"id": 0, "name": "ACTION_PICK", "arguments": {"data_type": "ALL"}}], "tools": [{"name": "ACTION_PICK", "description": "This function allows the user to select a contact or specific contact information (such as phone\nnumber, email, or postal address) and returns a content URI for the selected data.", "arguments": {"data_type": {"description": "The type of contact data to pick. Default is \"ALL\".\nAvailable options:\n- \"ADDRESS\": Pick a contact's address\n- \"PHONE\": Pick a contact's phone number\n- \"EMAIL\": Pick a contact's email address\n- \"ALL\": Pick the entire contact", "type": "str", "required": false, "default": "ALL"}}, "returns": {"description": "A content URI as a string, pointing to the selected contact or contact data.\nThis URI can be used to query for more details about the contact.", "type": "str"}}]}
{"query": "Extract phone number details of my colleague for urgent office work.", "answers": [{"id": 0, "name": "ACTION_PICK", "arguments": {"data_type": "PHONE"}}], "tools": [{"name": "ACTION_PICK", "description": "This function allows the user to select a contact or specific contact information (such as phone\nnumber, email, or postal address) and returns a content URI for the selected data.", "arguments": {"data_type": {"description": "The type of contact data to pick. Default is \"ALL\".\nAvailable options:\n- \"ADDRESS\": Pick a contact's address\n- \"PHONE\": Pick a contact's phone number\n- \"EMAIL\": Pick a contact's email address\n- \"ALL\": Pick the entire contact", "type": "str", "required": false, "default": "ALL"}}, "returns": {"description": "A content URI as a string, pointing to the selected contact or contact data.\nThis URI can be used to query for more details about the contact.", "type": "str"}}]}
{"query": "I require selecting the electronic mail coordinates from my business contacts. Help?", "answers": [{"id": 0, "name": "ACTION_PICK", "arguments": {"data_type": "EMAIL"}}], "tools": [{"name": "ACTION_PICK", "description": "This function allows the user to select a contact or specific contact information (such as phone\nnumber, email, or postal address) and returns a content URI for the selected data.", "arguments": {"data_type": {"description": "The type of contact data to pick. Default is \"ALL\".\nAvailable options:\n- \"ADDRESS\": Pick a contact's address\n- \"PHONE\": Pick a contact's phone number\n- \"EMAIL\": Pick a contact's email address\n- \"ALL\": Pick the entire contact", "type": "str", "required": false, "default": "ALL"}}, "returns": {"description": "A content URI as a string, pointing to the selected contact or contact data.\nThis URI can be used to query for more details about the contact.", "type": "str"}}]}
{"query": "Help me get my manager's office address from the contacts to send an official document.", "answers": [{"id": 0, "name": "ACTION_PICK", "arguments": {"data_type": "ADDRESS"}}], "tools": [{"name": "ACTION_PICK", "description": "This function allows the user to select a contact or specific contact information (such as phone\nnumber, email, or postal address) and returns a content URI for the selected data.", "arguments": {"data_type": {"description": "The type of contact data to pick. Default is \"ALL\".\nAvailable options:\n- \"ADDRESS\": Pick a contact's address\n- \"PHONE\": Pick a contact's phone number\n- \"EMAIL\": Pick a contact's email address\n- \"ALL\": Pick the entire contact", "type": "str", "required": false, "default": "ALL"}}, "returns": {"description": "A content URI as a string, pointing to the selected contact or contact data.\nThis URI can be used to query for more details about the contact.", "type": "str"}}]}
{"query": "Access full details from the contact list for Emma.", "answers": [{"id": 0, "name": "ACTION_PICK", "arguments": {"data_type": "ALL"}}], "tools": [{"name": "ACTION_PICK", "description": "This function allows the user to select a contact or specific contact information (such as phone\nnumber, email, or postal address) and returns a content URI for the selected data.", "arguments": {"data_type": {"description": "The type of contact data to pick. Default is \"ALL\".\nAvailable options:\n- \"ADDRESS\": Pick a contact's address\n- \"PHONE\": Pick a contact's phone number\n- \"EMAIL\": Pick a contact's email address\n- \"ALL\": Pick the entire contact", "type": "str", "required": false, "default": "ALL"}}, "returns": {"description": "A content URI as a string, pointing to the selected contact or contact data.\nThis URI can be used to query for more details about the contact.", "type": "str"}}]}
{"query": "Guide me to procure the telephone numbers from my digital phone book for a survey.", "answers": [{"id": 0, "name": "ACTION_PICK", "arguments": {"data_type": "PHONE"}}], "tools": [{"name": "ACTION_PICK", "description": "This function allows the user to select a contact or specific contact information (such as phone\nnumber, email, or postal address) and returns a content URI for the selected data.", "arguments": {"data_type": {"description": "The type of contact data to pick. Default is \"ALL\".\nAvailable options:\n- \"ADDRESS\": Pick a contact's address\n- \"PHONE\": Pick a contact's phone number\n- \"EMAIL\": Pick a contact's email address\n- \"ALL\": Pick the entire contact", "type": "str", "required": false, "default": "ALL"}}, "returns": {"description": "A content URI as a string, pointing to the selected contact or contact data.\nThis URI can be used to query for more details about the contact.", "type": "str"}}]}
{"query": "What is the method to obtain a contact's email for newsletter subscription from my phone?", "answers": [{"id": 0, "name": "ACTION_PICK", "arguments": {"data_type": "EMAIL"}}], "tools": [{"name": "ACTION_PICK", "description": "This function allows the user to select a contact or specific contact information (such as phone\nnumber, email, or postal address) and returns a content URI for the selected data.", "arguments": {"data_type": {"description": "The type of contact data to pick. Default is \"ALL\".\nAvailable options:\n- \"ADDRESS\": Pick a contact's address\n- \"PHONE\": Pick a contact's phone number\n- \"EMAIL\": Pick a contact's email address\n- \"ALL\": Pick the entire contact", "type": "str", "required": false, "default": "ALL"}}, "returns": {"description": "A content URI as a string, pointing to the selected contact or contact data.\nThis URI can be used to query for more details about the contact.", "type": "str"}}]}
{"query": "Please proceed to pull the physical mailing data from the contacts for Lisa.", "answers": [{"id": 0, "name": "ACTION_PICK", "arguments": {"data_type": "ADDRESS"}}], "tools": [{"name": "ACTION_PICK", "description": "This function allows the user to select a contact or specific contact information (such as phone\nnumber, email, or postal address) and returns a content URI for the selected data.", "arguments": {"data_type": {"description": "The type of contact data to pick. Default is \"ALL\".\nAvailable options:\n- \"ADDRESS\": Pick a contact's address\n- \"PHONE\": Pick a contact's phone number\n- \"EMAIL\": Pick a contact's email address\n- \"ALL\": Pick the entire contact", "type": "str", "required": false, "default": "ALL"}}, "returns": {"description": "A content URI as a string, pointing to the selected contact or contact data.\nThis URI can be used to query for more details about the contact.", "type": "str"}}]}
{"query": "Can you set my alarm for 7:30 AM tomorrow and make sure it has a calming ringtone?", "answers": [{"id": 0, "name": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 7, "EXTRA_MINUTES": 30, "EXTRA_RINGTONE": "calming_ringtone"}}], "tools": [{"name": "ACTION_SET_ALARM", "description": "Set an alarm with the given parameters.\n", "arguments": {"EXTRA_HOUR": {"description": "The hour of the alarm in 24-hour format.", "type": "int", "required": true}, "EXTRA_MINUTES": {"description": "The minutes of the alarm.", "type": "int", "required": true}, "EXTRA_MESSAGE": {"description": "The message of the alarm. Default is an empty string.", "type": "str", "required": false, "default": ""}, "EXTRA_DAYS": {"description": "The days of the alarm, e.g. [\"Monday\", \"Tuesday\"]. Default is None.", "type": "list[str]", "required": false, "default": null}, "EXTRA_RINGTONE": {"description": "The ringtone of the alarm specified by a content URI. Default is None.\nif None, the default ringtone will be used. If set to \"silent\", no ringtone will be played.\n        ", "type": "str", "required": false, "default": null}, "EXTRA_VIBRATE": {"description": "Whether the alarm should vibrate. Default is False.", "type": "bool", "required": false, "default": false}, "EXTRA_SKIP_UI": {"description": "A boolean specifying whether the responding app must skip its UI when setting the alarm.\nIf true, the app must bypass any confirmation UI and set the specified alarm. Default is True.", "type": "bool", "required": false, "default": true}}}]}
{"query": "Set up an alarm at 22:45 without any sound, please.", "answers": [{"id": 0, "name": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 22, "EXTRA_MINUTES": 45, "EXTRA_RINGTONE": "silent"}}], "tools": [{"name": "ACTION_SET_ALARM", "description": "Set an alarm with the given parameters.\n", "arguments": {"EXTRA_HOUR": {"description": "The hour of the alarm in 24-hour format.", "type": "int", "required": true}, "EXTRA_MINUTES": {"description": "The minutes of the alarm.", "type": "int", "required": true}, "EXTRA_MESSAGE": {"description": "The message of the alarm. Default is an empty string.", "type": "str", "required": false, "default": ""}, "EXTRA_DAYS": {"description": "The days of the alarm, e.g. [\"Monday\", \"Tuesday\"]. Default is None.", "type": "list[str]", "required": false, "default": null}, "EXTRA_RINGTONE": {"description": "The ringtone of the alarm specified by a content URI. Default is None.\nif None, the default ringtone will be used. If set to \"silent\", no ringtone will be played.\n        ", "type": "str", "required": false, "default": null}, "EXTRA_VIBRATE": {"description": "Whether the alarm should vibrate. Default is False.", "type": "bool", "required": false, "default": false}, "EXTRA_SKIP_UI": {"description": "A boolean specifying whether the responding app must skip its UI when setting the alarm.\nIf true, the app must bypass any confirmation UI and set the specified alarm. Default is True.", "type": "bool", "required": false, "default": true}}}]}
{"query": "I need an alarm for 6:15 AM that vibrates and repeats every Monday and Wednesday.", "answers": [{"id": 0, "name": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 6, "EXTRA_MINUTES": 15, "EXTRA_DAYS": ["Monday", "Wednesday"], "EXTRA_VIBRATE": true}}], "tools": [{"name": "ACTION_SET_ALARM", "description": "Set an alarm with the given parameters.\n", "arguments": {"EXTRA_HOUR": {"description": "The hour of the alarm in 24-hour format.", "type": "int", "required": true}, "EXTRA_MINUTES": {"description": "The minutes of the alarm.", "type": "int", "required": true}, "EXTRA_MESSAGE": {"description": "The message of the alarm. Default is an empty string.", "type": "str", "required": false, "default": ""}, "EXTRA_DAYS": {"description": "The days of the alarm, e.g. [\"Monday\", \"Tuesday\"]. Default is None.", "type": "list[str]", "required": false, "default": null}, "EXTRA_RINGTONE": {"description": "The ringtone of the alarm specified by a content URI. Default is None.\nif None, the default ringtone will be used. If set to \"silent\", no ringtone will be played.\n        ", "type": "str", "required": false, "default": null}, "EXTRA_VIBRATE": {"description": "Whether the alarm should vibrate. Default is False.", "type": "bool", "required": false, "default": false}, "EXTRA_SKIP_UI": {"description": "A boolean specifying whether the responding app must skip its UI when setting the alarm.\nIf true, the app must bypass any confirmation UI and set the specified alarm. Default is True.", "type": "bool", "required": false, "default": true}}}]}
{"query": "Please, remind me at 14:00 to call mom.", "answers": [{"id": 0, "name": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 14, "EXTRA_MINUTES": 0, "EXTRA_MESSAGE": "Call mom"}}], "tools": [{"name": "ACTION_SET_ALARM", "description": "Set an alarm with the given parameters.\n", "arguments": {"EXTRA_HOUR": {"description": "The hour of the alarm in 24-hour format.", "type": "int", "required": true}, "EXTRA_MINUTES": {"description": "The minutes of the alarm.", "type": "int", "required": true}, "EXTRA_MESSAGE": {"description": "The message of the alarm. Default is an empty string.", "type": "str", "required": false, "default": ""}, "EXTRA_DAYS": {"description": "The days of the alarm, e.g. [\"Monday\", \"Tuesday\"]. Default is None.", "type": "list[str]", "required": false, "default": null}, "EXTRA_RINGTONE": {"description": "The ringtone of the alarm specified by a content URI. Default is None.\nif None, the default ringtone will be used. If set to \"silent\", no ringtone will be played.\n        ", "type": "str", "required": false, "default": null}, "EXTRA_VIBRATE": {"description": "Whether the alarm should vibrate. Default is False.", "type": "bool", "required": false, "default": false}, "EXTRA_SKIP_UI": {"description": "A boolean specifying whether the responding app must skip its UI when setting the alarm.\nIf true, the app must bypass any confirmation UI and set the specified alarm. Default is True.", "type": "bool", "required": false, "default": true}}}]}
{"query": "Could you set an alarm for 20 minutes past midnight? Just a normal alert is fine.", "answers": [{"id": 0, "name": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 0, "EXTRA_MINUTES": 20}}], "tools": [{"name": "ACTION_SET_ALARM", "description": "Set an alarm with the given parameters.\n", "arguments": {"EXTRA_HOUR": {"description": "The hour of the alarm in 24-hour format.", "type": "int", "required": true}, "EXTRA_MINUTES": {"description": "The minutes of the alarm.", "type": "int", "required": true}, "EXTRA_MESSAGE": {"description": "The message of the alarm. Default is an empty string.", "type": "str", "required": false, "default": ""}, "EXTRA_DAYS": {"description": "The days of the alarm, e.g. [\"Monday\", \"Tuesday\"]. Default is None.", "type": "list[str]", "required": false, "default": null}, "EXTRA_RINGTONE": {"description": "The ringtone of the alarm specified by a content URI. Default is None.\nif None, the default ringtone will be used. If set to \"silent\", no ringtone will be played.\n        ", "type": "str", "required": false, "default": null}, "EXTRA_VIBRATE": {"description": "Whether the alarm should vibrate. Default is False.", "type": "bool", "required": false, "default": false}, "EXTRA_SKIP_UI": {"description": "A boolean specifying whether the responding app must skip its UI when setting the alarm.\nIf true, the app must bypass any confirmation UI and set the specified alarm. Default is True.", "type": "bool", "required": false, "default": true}}}]}
{"query": "I need to wake up at 5:55 AM this Friday to catch a flight. No need for vibration.", "answers": [{"id": 0, "name": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 5, "EXTRA_MINUTES": 55, "EXTRA_DAYS": ["Friday"], "EXTRA_VIBRATE": false}}], "tools": [{"name": "ACTION_SET_ALARM", "description": "Set an alarm with the given parameters.\n", "arguments": {"EXTRA_HOUR": {"description": "The hour of the alarm in 24-hour format.", "type": "int", "required": true}, "EXTRA_MINUTES": {"description": "The minutes of the alarm.", "type": "int", "required": true}, "EXTRA_MESSAGE": {"description": "The message of the alarm. Default is an empty string.", "type": "str", "required": false, "default": ""}, "EXTRA_DAYS": {"description": "The days of the alarm, e.g. [\"Monday\", \"Tuesday\"]. Default is None.", "type": "list[str]", "required": false, "default": null}, "EXTRA_RINGTONE": {"description": "The ringtone of the alarm specified by a content URI. Default is None.\nif None, the default ringtone will be used. If set to \"silent\", no ringtone will be played.\n        ", "type": "str", "required": false, "default": null}, "EXTRA_VIBRATE": {"description": "Whether the alarm should vibrate. Default is False.", "type": "bool", "required": false, "default": false}, "EXTRA_SKIP_UI": {"description": "A boolean specifying whether the responding app must skip its UI when setting the alarm.\nIf true, the app must bypass any confirmation UI and set the specified alarm. Default is True.", "type": "bool", "required": false, "default": true}}}]}
{"query": "Activate an alarm at 12:12 PM without the UI popping up.", "answers": [{"id": 0, "name": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 12, "EXTRA_MINUTES": 12, "EXTRA_SKIP_UI": true}}], "tools": [{"name": "ACTION_SET_ALARM", "description": "Set an alarm with the given parameters.\n", "arguments": {"EXTRA_HOUR": {"description": "The hour of the alarm in 24-hour format.", "type": "int", "required": true}, "EXTRA_MINUTES": {"description": "The minutes of the alarm.", "type": "int", "required": true}, "EXTRA_MESSAGE": {"description": "The message of the alarm. Default is an empty string.", "type": "str", "required": false, "default": ""}, "EXTRA_DAYS": {"description": "The days of the alarm, e.g. [\"Monday\", \"Tuesday\"]. Default is None.", "type": "list[str]", "required": false, "default": null}, "EXTRA_RINGTONE": {"description": "The ringtone of the alarm specified by a content URI. Default is None.\nif None, the default ringtone will be used. If set to \"silent\", no ringtone will be played.\n        ", "type": "str", "required": false, "default": null}, "EXTRA_VIBRATE": {"description": "Whether the alarm should vibrate. Default is False.", "type": "bool", "required": false, "default": false}, "EXTRA_SKIP_UI": {"description": "A boolean specifying whether the responding app must skip its UI when setting the alarm.\nIf true, the app must bypass any confirmation UI and set the specified alarm. Default is True.", "type": "bool", "required": false, "default": true}}}]}
{"query": "Program the alarm for 3:30 PM and include an alert that says 'Meeting with team' using the default settings.", "answers": [{"id": 0, "name": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 15, "EXTRA_MINUTES": 30, "EXTRA_MESSAGE": "Meeting with team"}}], "tools": [{"name": "ACTION_SET_ALARM", "description": "Set an alarm with the given parameters.\n", "arguments": {"EXTRA_HOUR": {"description": "The hour of the alarm in 24-hour format.", "type": "int", "required": true}, "EXTRA_MINUTES": {"description": "The minutes of the alarm.", "type": "int", "required": true}, "EXTRA_MESSAGE": {"description": "The message of the alarm. Default is an empty string.", "type": "str", "required": false, "default": ""}, "EXTRA_DAYS": {"description": "The days of the alarm, e.g. [\"Monday\", \"Tuesday\"]. Default is None.", "type": "list[str]", "required": false, "default": null}, "EXTRA_RINGTONE": {"description": "The ringtone of the alarm specified by a content URI. Default is None.\nif None, the default ringtone will be used. If set to \"silent\", no ringtone will be played.\n        ", "type": "str", "required": false, "default": null}, "EXTRA_VIBRATE": {"description": "Whether the alarm should vibrate. Default is False.", "type": "bool", "required": false, "default": false}, "EXTRA_SKIP_UI": {"description": "A boolean specifying whether the responding app must skip its UI when setting the alarm.\nIf true, the app must bypass any confirmation UI and set the specified alarm. Default is True.", "type": "bool", "required": false, "default": true}}}]}
{"query": "Could you kindly schedule an alarm at 15 minutes to 8 in the morning every Tuesday and Thursday, with a jazz ringtone?", "answers": [{"id": 0, "name": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 7, "EXTRA_MINUTES": 45, "EXTRA_DAYS": ["Tuesday", "Thursday"], "EXTRA_RINGTONE": "jazz_ringtone"}}], "tools": [{"name": "ACTION_SET_ALARM", "description": "Set an alarm with the given parameters.\n", "arguments": {"EXTRA_HOUR": {"description": "The hour of the alarm in 24-hour format.", "type": "int", "required": true}, "EXTRA_MINUTES": {"description": "The minutes of the alarm.", "type": "int", "required": true}, "EXTRA_MESSAGE": {"description": "The message of the alarm. Default is an empty string.", "type": "str", "required": false, "default": ""}, "EXTRA_DAYS": {"description": "The days of the alarm, e.g. [\"Monday\", \"Tuesday\"]. Default is None.", "type": "list[str]", "required": false, "default": null}, "EXTRA_RINGTONE": {"description": "The ringtone of the alarm specified by a content URI. Default is None.\nif None, the default ringtone will be used. If set to \"silent\", no ringtone will be played.\n        ", "type": "str", "required": false, "default": null}, "EXTRA_VIBRATE": {"description": "Whether the alarm should vibrate. Default is False.", "type": "bool", "required": false, "default": false}, "EXTRA_SKIP_UI": {"description": "A boolean specifying whether the responding app must skip its UI when setting the alarm.\nIf true, the app must bypass any confirmation UI and set the specified alarm. Default is True.", "type": "bool", "required": false, "default": true}}}]}
{"query": "Please set an alarm that wakes me up at 09:00 with vibrations on.", "answers": [{"id": 0, "name": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 9, "EXTRA_MINUTES": 0, "EXTRA_VIBRATE": true}}], "tools": [{"name": "ACTION_SET_ALARM", "description": "Set an alarm with the given parameters.\n", "arguments": {"EXTRA_HOUR": {"description": "The hour of the alarm in 24-hour format.", "type": "int", "required": true}, "EXTRA_MINUTES": {"description": "The minutes of the alarm.", "type": "int", "required": true}, "EXTRA_MESSAGE": {"description": "The message of the alarm. Default is an empty string.", "type": "str", "required": false, "default": ""}, "EXTRA_DAYS": {"description": "The days of the alarm, e.g. [\"Monday\", \"Tuesday\"]. Default is None.", "type": "list[str]", "required": false, "default": null}, "EXTRA_RINGTONE": {"description": "The ringtone of the alarm specified by a content URI. Default is None.\nif None, the default ringtone will be used. If set to \"silent\", no ringtone will be played.\n        ", "type": "str", "required": false, "default": null}, "EXTRA_VIBRATE": {"description": "Whether the alarm should vibrate. Default is False.", "type": "bool", "required": false, "default": false}, "EXTRA_SKIP_UI": {"description": "A boolean specifying whether the responding app must skip its UI when setting the alarm.\nIf true, the app must bypass any confirmation UI and set the specified alarm. Default is True.", "type": "bool", "required": false, "default": true}}}]}
{"query": "Set an alarm at half past one in the afternoon with the UI hidden.", "answers": [{"id": 0, "name": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 13, "EXTRA_MINUTES": 30, "EXTRA_SKIP_UI": true}}], "tools": [{"name": "ACTION_SET_ALARM", "description": "Set an alarm with the given parameters.\n", "arguments": {"EXTRA_HOUR": {"description": "The hour of the alarm in 24-hour format.", "type": "int", "required": true}, "EXTRA_MINUTES": {"description": "The minutes of the alarm.", "type": "int", "required": true}, "EXTRA_MESSAGE": {"description": "The message of the alarm. Default is an empty string.", "type": "str", "required": false, "default": ""}, "EXTRA_DAYS": {"description": "The days of the alarm, e.g. [\"Monday\", \"Tuesday\"]. Default is None.", "type": "list[str]", "required": false, "default": null}, "EXTRA_RINGTONE": {"description": "The ringtone of the alarm specified by a content URI. Default is None.\nif None, the default ringtone will be used. If set to \"silent\", no ringtone will be played.\n        ", "type": "str", "required": false, "default": null}, "EXTRA_VIBRATE": {"description": "Whether the alarm should vibrate. Default is False.", "type": "bool", "required": false, "default": false}, "EXTRA_SKIP_UI": {"description": "A boolean specifying whether the responding app must skip its UI when setting the alarm.\nIf true, the app must bypass any confirmation UI and set the specified alarm. Default is True.", "type": "bool", "required": false, "default": true}}}]}
{"query": "Would you be able to configure my alarm for 11:11 PM tonight, make sure it's loud?", "answers": [{"id": 0, "name": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 23, "EXTRA_MINUTES": 11, "EXTRA_RINGTONE": "loud_ringtone"}}], "tools": [{"name": "ACTION_SET_ALARM", "description": "Set an alarm with the given parameters.\n", "arguments": {"EXTRA_HOUR": {"description": "The hour of the alarm in 24-hour format.", "type": "int", "required": true}, "EXTRA_MINUTES": {"description": "The minutes of the alarm.", "type": "int", "required": true}, "EXTRA_MESSAGE": {"description": "The message of the alarm. Default is an empty string.", "type": "str", "required": false, "default": ""}, "EXTRA_DAYS": {"description": "The days of the alarm, e.g. [\"Monday\", \"Tuesday\"]. Default is None.", "type": "list[str]", "required": false, "default": null}, "EXTRA_RINGTONE": {"description": "The ringtone of the alarm specified by a content URI. Default is None.\nif None, the default ringtone will be used. If set to \"silent\", no ringtone will be played.\n        ", "type": "str", "required": false, "default": null}, "EXTRA_VIBRATE": {"description": "Whether the alarm should vibrate. Default is False.", "type": "bool", "required": false, "default": false}, "EXTRA_SKIP_UI": {"description": "A boolean specifying whether the responding app must skip its UI when setting the alarm.\nIf true, the app must bypass any confirmation UI and set the specified alarm. Default is True.", "type": "bool", "required": false, "default": true}}}]}
{"query": "Please enable an alarm for 7:20 AM every weekday.", "answers": [{"id": 0, "name": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 7, "EXTRA_MINUTES": 20, "EXTRA_DAYS": ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday"]}}], "tools": [{"name": "ACTION_SET_ALARM", "description": "Set an alarm with the given parameters.\n", "arguments": {"EXTRA_HOUR": {"description": "The hour of the alarm in 24-hour format.", "type": "int", "required": true}, "EXTRA_MINUTES": {"description": "The minutes of the alarm.", "type": "int", "required": true}, "EXTRA_MESSAGE": {"description": "The message of the alarm. Default is an empty string.", "type": "str", "required": false, "default": ""}, "EXTRA_DAYS": {"description": "The days of the alarm, e.g. [\"Monday\", \"Tuesday\"]. Default is None.", "type": "list[str]", "required": false, "default": null}, "EXTRA_RINGTONE": {"description": "The ringtone of the alarm specified by a content URI. Default is None.\nif None, the default ringtone will be used. If set to \"silent\", no ringtone will be played.\n        ", "type": "str", "required": false, "default": null}, "EXTRA_VIBRATE": {"description": "Whether the alarm should vibrate. Default is False.", "type": "bool", "required": false, "default": false}, "EXTRA_SKIP_UI": {"description": "A boolean specifying whether the responding app must skip its UI when setting the alarm.\nIf true, the app must bypass any confirmation UI and set the specified alarm. Default is True.", "type": "bool", "required": false, "default": true}}}]}
{"query": "Activate an alarm at 10 minutes past 10 at night, with the default ringtone and let it vibrate.", "answers": [{"id": 0, "name": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 22, "EXTRA_MINUTES": 10, "EXTRA_VIBRATE": true}}], "tools": [{"name": "ACTION_SET_ALARM", "description": "Set an alarm with the given parameters.\n", "arguments": {"EXTRA_HOUR": {"description": "The hour of the alarm in 24-hour format.", "type": "int", "required": true}, "EXTRA_MINUTES": {"description": "The minutes of the alarm.", "type": "int", "required": true}, "EXTRA_MESSAGE": {"description": "The message of the alarm. Default is an empty string.", "type": "str", "required": false, "default": ""}, "EXTRA_DAYS": {"description": "The days of the alarm, e.g. [\"Monday\", \"Tuesday\"]. Default is None.", "type": "list[str]", "required": false, "default": null}, "EXTRA_RINGTONE": {"description": "The ringtone of the alarm specified by a content URI. Default is None.\nif None, the default ringtone will be used. If set to \"silent\", no ringtone will be played.\n        ", "type": "str", "required": false, "default": null}, "EXTRA_VIBRATE": {"description": "Whether the alarm should vibrate. Default is False.", "type": "bool", "required": false, "default": false}, "EXTRA_SKIP_UI": {"description": "A boolean specifying whether the responding app must skip its UI when setting the alarm.\nIf true, the app must bypass any confirmation UI and set the specified alarm. Default is True.", "type": "bool", "required": false, "default": true}}}]}
{"query": "Set an early morning alarm at 4:15 AM, must operate silently and without showing the UI.", "answers": [{"id": 0, "name": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 4, "EXTRA_MINUTES": 15, "EXTRA_RINGTONE": "silent", "EXTRA_SKIP_UI": true}}], "tools": [{"name": "ACTION_SET_ALARM", "description": "Set an alarm with the given parameters.\n", "arguments": {"EXTRA_HOUR": {"description": "The hour of the alarm in 24-hour format.", "type": "int", "required": true}, "EXTRA_MINUTES": {"description": "The minutes of the alarm.", "type": "int", "required": true}, "EXTRA_MESSAGE": {"description": "The message of the alarm. Default is an empty string.", "type": "str", "required": false, "default": ""}, "EXTRA_DAYS": {"description": "The days of the alarm, e.g. [\"Monday\", \"Tuesday\"]. Default is None.", "type": "list[str]", "required": false, "default": null}, "EXTRA_RINGTONE": {"description": "The ringtone of the alarm specified by a content URI. Default is None.\nif None, the default ringtone will be used. If set to \"silent\", no ringtone will be played.\n        ", "type": "str", "required": false, "default": null}, "EXTRA_VIBRATE": {"description": "Whether the alarm should vibrate. Default is False.", "type": "bool", "required": false, "default": false}, "EXTRA_SKIP_UI": {"description": "A boolean specifying whether the responding app must skip its UI when setting the alarm.\nIf true, the app must bypass any confirmation UI and set the specified alarm. Default is True.", "type": "bool", "required": false, "default": true}}}]}
{"query": "Set up a timer for me that runs for 45 minutes without showing any configuration UI.", "answers": [{"id": 0, "name": "ACTION_SET_TIMER", "arguments": {"duration": "45 minutes", "EXTRA_SKIP_UI": true}}], "tools": [{"name": "ACTION_SET_TIMER", "description": "Set a countdown timer with the given parameters.\n", "arguments": {"duration": {"description": "The duration of the timer in the format \"HH hours MM minutes SS seconds\".\nFor example, \"1 hours 30 minutes\" or \"10 minutes\" or \"1 hours 30 minutes 15 seconds\", etc.\n    ", "type": "str", "required": true}, "EXTRA_MESSAGE": {"description": "A custom message to identify the timer. Default is an empty string.", "type": "str", "required": false, "default": ""}, "EXTRA_SKIP_UI": {"description": "A boolean specifying whether the responding app must skip its UI when setting the timer.\nIf true, the app must bypass any confirmation UI and start the specified timer. Default is True.", "type": "bool", "required": false, "default": true}}}]}
{"query": "I want a countdown of 30 minutes and 15 seconds with a message saying 'Workout Time!'", "answers": [{"id": 0, "name": "ACTION_SET_TIMER", "arguments": {"duration": "30 minutes 15 seconds", "EXTRA_MESSAGE": "Workout Time!"}}], "tools": [{"name": "ACTION_SET_TIMER", "description": "Set a countdown timer with the given parameters.\n", "arguments": {"duration": {"description": "The duration of the timer in the format \"HH hours MM minutes SS seconds\".\nFor example, \"1 hours 30 minutes\" or \"10 minutes\" or \"1 hours 30 minutes 15 seconds\", etc.\n    ", "type": "str", "required": true}, "EXTRA_MESSAGE": {"description": "A custom message to identify the timer. Default is an empty string.", "type": "str", "required": false, "default": ""}, "EXTRA_SKIP_UI": {"description": "A boolean specifying whether the responding app must skip its UI when setting the timer.\nIf true, the app must bypass any confirmation UI and start the specified timer. Default is True.", "type": "bool", "required": false, "default": true}}}]}
{"query": "Please set a timer of two hours with the reminder 'Meeting period'.", "answers": [{"id": 0, "name": "ACTION_SET_TIMER", "arguments": {"duration": "2 hours", "EXTRA_MESSAGE": "Meeting period"}}], "tools": [{"name": "ACTION_SET_TIMER", "description": "Set a countdown timer with the given parameters.\n", "arguments": {"duration": {"description": "The duration of the timer in the format \"HH hours MM minutes SS seconds\".\nFor example, \"1 hours 30 minutes\" or \"10 minutes\" or \"1 hours 30 minutes 15 seconds\", etc.\n    ", "type": "str", "required": true}, "EXTRA_MESSAGE": {"description": "A custom message to identify the timer. Default is an empty string.", "type": "str", "required": false, "default": ""}, "EXTRA_SKIP_UI": {"description": "A boolean specifying whether the responding app must skip its UI when setting the timer.\nIf true, the app must bypass any confirmation UI and start the specified timer. Default is True.", "type": "bool", "required": false, "default": true}}}]}
{"query": "Could you initiate a countdown that lasts for just 10 seconds?", "answers": [{"id": 0, "name": "ACTION_SET_TIMER", "arguments": {"duration": "10 seconds"}}], "tools": [{"name": "ACTION_SET_TIMER", "description": "Set a countdown timer with the given parameters.\n", "arguments": {"duration": {"description": "The duration of the timer in the format \"HH hours MM minutes SS seconds\".\nFor example, \"1 hours 30 minutes\" or \"10 minutes\" or \"1 hours 30 minutes 15 seconds\", etc.\n    ", "type": "str", "required": true}, "EXTRA_MESSAGE": {"description": "A custom message to identify the timer. Default is an empty string.", "type": "str", "required": false, "default": ""}, "EXTRA_SKIP_UI": {"description": "A boolean specifying whether the responding app must skip its UI when setting the timer.\nIf true, the app must bypass any confirmation UI and start the specified timer. Default is True.", "type": "bool", "required": false, "default": true}}}]}
{"query": "Help me with setting a one-and-a-half-hour timer, please, without any interruptions or interface display.", "answers": [{"id": 0, "name": "ACTION_SET_TIMER", "arguments": {"duration": "1 hour 30 minutes", "EXTRA_SKIP_UI": true}}], "tools": [{"name": "ACTION_SET_TIMER", "description": "Set a countdown timer with the given parameters.\n", "arguments": {"duration": {"description": "The duration of the timer in the format \"HH hours MM minutes SS seconds\".\nFor example, \"1 hours 30 minutes\" or \"10 minutes\" or \"1 hours 30 minutes 15 seconds\", etc.\n    ", "type": "str", "required": true}, "EXTRA_MESSAGE": {"description": "A custom message to identify the timer. Default is an empty string.", "type": "str", "required": false, "default": ""}, "EXTRA_SKIP_UI": {"description": "A boolean specifying whether the responding app must skip its UI when setting the timer.\nIf true, the app must bypass any confirmation UI and start the specified timer. Default is True.", "type": "bool", "required": false, "default": true}}}]}
{"query": "Activate a timer for 90 minutes and tag it under 'Study Session'.", "answers": [{"id": 0, "name": "ACTION_SET_TIMER", "arguments": {"duration": "1 hour 30 minutes", "EXTRA_MESSAGE": "Study Session"}}], "tools": [{"name": "ACTION_SET_TIMER", "description": "Set a countdown timer with the given parameters.\n", "arguments": {"duration": {"description": "The duration of the timer in the format \"HH hours MM minutes SS seconds\".\nFor example, \"1 hours 30 minutes\" or \"10 minutes\" or \"1 hours 30 minutes 15 seconds\", etc.\n    ", "type": "str", "required": true}, "EXTRA_MESSAGE": {"description": "A custom message to identify the timer. Default is an empty string.", "type": "str", "required": false, "default": ""}, "EXTRA_SKIP_UI": {"description": "A boolean specifying whether the responding app must skip its UI when setting the timer.\nIf true, the app must bypass any confirmation UI and start the specified timer. Default is True.", "type": "bool", "required": false, "default": true}}}]}
{"query": "Set a 15-minute break timer.", "answers": [{"id": 0, "name": "ACTION_SET_TIMER", "arguments": {"duration": "15 minutes"}}], "tools": [{"name": "ACTION_SET_TIMER", "description": "Set a countdown timer with the given parameters.\n", "arguments": {"duration": {"description": "The duration of the timer in the format \"HH hours MM minutes SS seconds\".\nFor example, \"1 hours 30 minutes\" or \"10 minutes\" or \"1 hours 30 minutes 15 seconds\", etc.\n    ", "type": "str", "required": true}, "EXTRA_MESSAGE": {"description": "A custom message to identify the timer. Default is an empty string.", "type": "str", "required": false, "default": ""}, "EXTRA_SKIP_UI": {"description": "A boolean specifying whether the responding app must skip its UI when setting the timer.\nIf true, the app must bypass any confirmation UI and start the specified timer. Default is True.", "type": "bool", "required": false, "default": true}}}]}
{"query": "I need a quick 5-second timer to test something without any user interface popping up.", "answers": [{"id": 0, "name": "ACTION_SET_TIMER", "arguments": {"duration": "5 seconds", "EXTRA_SKIP_UI": true}}], "tools": [{"name": "ACTION_SET_TIMER", "description": "Set a countdown timer with the given parameters.\n", "arguments": {"duration": {"description": "The duration of the timer in the format \"HH hours MM minutes SS seconds\".\nFor example, \"1 hours 30 minutes\" or \"10 minutes\" or \"1 hours 30 minutes 15 seconds\", etc.\n    ", "type": "str", "required": true}, "EXTRA_MESSAGE": {"description": "A custom message to identify the timer. Default is an empty string.", "type": "str", "required": false, "default": ""}, "EXTRA_SKIP_UI": {"description": "A boolean specifying whether the responding app must skip its UI when setting the timer.\nIf true, the app must bypass any confirmation UI and start the specified timer. Default is True.", "type": "bool", "required": false, "default": true}}}]}
{"query": "Set a timer for three hours and label it 'Long study hours'.", "answers": [{"id": 0, "name": "ACTION_SET_TIMER", "arguments": {"duration": "3 hours", "EXTRA_MESSAGE": "Long study hours"}}], "tools": [{"name": "ACTION_SET_TIMER", "description": "Set a countdown timer with the given parameters.\n", "arguments": {"duration": {"description": "The duration of the timer in the format \"HH hours MM minutes SS seconds\".\nFor example, \"1 hours 30 minutes\" or \"10 minutes\" or \"1 hours 30 minutes 15 seconds\", etc.\n    ", "type": "str", "required": true}, "EXTRA_MESSAGE": {"description": "A custom message to identify the timer. Default is an empty string.", "type": "str", "required": false, "default": ""}, "EXTRA_SKIP_UI": {"description": "A boolean specifying whether the responding app must skip its UI when setting the timer.\nIf true, the app must bypass any confirmation UI and start the specified timer. Default is True.", "type": "bool", "required": false, "default": true}}}]}
{"query": "Please initiate a timer for 20 minutes, thanks.", "answers": [{"id": 0, "name": "ACTION_SET_TIMER", "arguments": {"duration": "20 minutes"}}], "tools": [{"name": "ACTION_SET_TIMER", "description": "Set a countdown timer with the given parameters.\n", "arguments": {"duration": {"description": "The duration of the timer in the format \"HH hours MM minutes SS seconds\".\nFor example, \"1 hours 30 minutes\" or \"10 minutes\" or \"1 hours 30 minutes 15 seconds\", etc.\n    ", "type": "str", "required": true}, "EXTRA_MESSAGE": {"description": "A custom message to identify the timer. Default is an empty string.", "type": "str", "required": false, "default": ""}, "EXTRA_SKIP_UI": {"description": "A boolean specifying whether the responding app must skip its UI when setting the timer.\nIf true, the app must bypass any confirmation UI and start the specified timer. Default is True.", "type": "bool", "required": false, "default": true}}}]}
{"query": "Can you start a one-hour timer for my lunch break?", "answers": [{"id": 0, "name": "ACTION_SET_TIMER", "arguments": {"duration": "1 hour", "EXTRA_MESSAGE": "Lunch break"}}], "tools": [{"name": "ACTION_SET_TIMER", "description": "Set a countdown timer with the given parameters.\n", "arguments": {"duration": {"description": "The duration of the timer in the format \"HH hours MM minutes SS seconds\".\nFor example, \"1 hours 30 minutes\" or \"10 minutes\" or \"1 hours 30 minutes 15 seconds\", etc.\n    ", "type": "str", "required": true}, "EXTRA_MESSAGE": {"description": "A custom message to identify the timer. Default is an empty string.", "type": "str", "required": false, "default": ""}, "EXTRA_SKIP_UI": {"description": "A boolean specifying whether the responding app must skip its UI when setting the timer.\nIf true, the app must bypass any confirmation UI and start the specified timer. Default is True.", "type": "bool", "required": false, "default": true}}}]}
{"query": "Ensure a timer for two and a half hours is set up for my workshop later today, please.", "answers": [{"id": 0, "name": "ACTION_SET_TIMER", "arguments": {"duration": "2 hours 30 minutes", "EXTRA_MESSAGE": "Workshop"}}], "tools": [{"name": "ACTION_SET_TIMER", "description": "Set a countdown timer with the given parameters.\n", "arguments": {"duration": {"description": "The duration of the timer in the format \"HH hours MM minutes SS seconds\".\nFor example, \"1 hours 30 minutes\" or \"10 minutes\" or \"1 hours 30 minutes 15 seconds\", etc.\n    ", "type": "str", "required": true}, "EXTRA_MESSAGE": {"description": "A custom message to identify the timer. Default is an empty string.", "type": "str", "required": false, "default": ""}, "EXTRA_SKIP_UI": {"description": "A boolean specifying whether the responding app must skip its UI when setting the timer.\nIf true, the app must bypass any confirmation UI and start the specified timer. Default is True.", "type": "bool", "required": false, "default": true}}}]}
{"query": "Initiate a 10-minute timer and bypass any confirmation screens.", "answers": [{"id": 0, "name": "ACTION_SET_TIMER", "arguments": {"duration": "10 minutes", "EXTRA_SKIP_UI": true}}], "tools": [{"name": "ACTION_SET_TIMER", "description": "Set a countdown timer with the given parameters.\n", "arguments": {"duration": {"description": "The duration of the timer in the format \"HH hours MM minutes SS seconds\".\nFor example, \"1 hours 30 minutes\" or \"10 minutes\" or \"1 hours 30 minutes 15 seconds\", etc.\n    ", "type": "str", "required": true}, "EXTRA_MESSAGE": {"description": "A custom message to identify the timer. Default is an empty string.", "type": "str", "required": false, "default": ""}, "EXTRA_SKIP_UI": {"description": "A boolean specifying whether the responding app must skip its UI when setting the timer.\nIf true, the app must bypass any confirmation UI and start the specified timer. Default is True.", "type": "bool", "required": false, "default": true}}}]}
{"query": "Turn on a timer for six hours for my all-day training session and don't show any additional screens.", "answers": [{"id": 0, "name": "ACTION_SET_TIMER", "arguments": {"duration": "6 hours", "EXTRA_SKIP_UI": true, "EXTRA_MESSAGE": "All-day training"}}], "tools": [{"name": "ACTION_SET_TIMER", "description": "Set a countdown timer with the given parameters.\n", "arguments": {"duration": {"description": "The duration of the timer in the format \"HH hours MM minutes SS seconds\".\nFor example, \"1 hours 30 minutes\" or \"10 minutes\" or \"1 hours 30 minutes 15 seconds\", etc.\n    ", "type": "str", "required": true}, "EXTRA_MESSAGE": {"description": "A custom message to identify the timer. Default is an empty string.", "type": "str", "required": false, "default": ""}, "EXTRA_SKIP_UI": {"description": "A boolean specifying whether the responding app must skip its UI when setting the timer.\nIf true, the app must bypass any confirmation UI and start the specified timer. Default is True.", "type": "bool", "required": false, "default": true}}}]}
{"query": "Program a 25-second timer to count something quickly for me.", "answers": [{"id": 0, "name": "ACTION_SET_TIMER", "arguments": {"duration": "25 seconds"}}], "tools": [{"name": "ACTION_SET_TIMER", "description": "Set a countdown timer with the given parameters.\n", "arguments": {"duration": {"description": "The duration of the timer in the format \"HH hours MM minutes SS seconds\".\nFor example, \"1 hours 30 minutes\" or \"10 minutes\" or \"1 hours 30 minutes 15 seconds\", etc.\n    ", "type": "str", "required": true}, "EXTRA_MESSAGE": {"description": "A custom message to identify the timer. Default is an empty string.", "type": "str", "required": false, "default": ""}, "EXTRA_SKIP_UI": {"description": "A boolean specifying whether the responding app must skip its UI when setting the timer.\nIf true, the app must bypass any confirmation UI and start the specified timer. Default is True.", "type": "bool", "required": false, "default": true}}}]}
{"query": "Can you display all of my current alarms?", "answers": [{"id": 0, "name": "ACTION_SHOW_ALARMS", "arguments": {}}], "tools": [{"name": "ACTION_SHOW_ALARMS", "description": "Show the list of current alarms.", "arguments": {}}]}
{"query": "I need to see my alarm list right now. Please fetch it.", "answers": [{"id": 0, "name": "ACTION_SHOW_ALARMS", "arguments": {}}], "tools": [{"name": "ACTION_SHOW_ALARMS", "description": "Show the list of current alarms.", "arguments": {}}]}
{"query": "How can I view the alarms I've set?", "answers": [{"id": 0, "name": "ACTION_SHOW_ALARMS", "arguments": {}}], "tools": [{"name": "ACTION_SHOW_ALARMS", "description": "Show the list of current alarms.", "arguments": {}}]}
{"query": "Please list all active alarms.", "answers": [{"id": 0, "name": "ACTION_SHOW_ALARMS", "arguments": {}}], "tools": [{"name": "ACTION_SHOW_ALARMS", "description": "Show the list of current alarms.", "arguments": {}}]}
{"query": "Display the current alarms set on my device.", "answers": [{"id": 0, "name": "ACTION_SHOW_ALARMS", "arguments": {}}], "tools": [{"name": "ACTION_SHOW_ALARMS", "description": "Show the list of current alarms.", "arguments": {}}]}
{"query": "Show me my alarm settings.", "answers": [{"id": 0, "name": "ACTION_SHOW_ALARMS", "arguments": {}}], "tools": [{"name": "ACTION_SHOW_ALARMS", "description": "Show the list of current alarms.", "arguments": {}}]}
{"query": "What are the alarms that I currently have activated?", "answers": [{"id": 0, "name": "ACTION_SHOW_ALARMS", "arguments": {}}], "tools": [{"name": "ACTION_SHOW_ALARMS", "description": "Show the list of current alarms.", "arguments": {}}]}
{"query": "List the alarms configured on my system.", "answers": [{"id": 0, "name": "ACTION_SHOW_ALARMS", "arguments": {}}], "tools": [{"name": "ACTION_SHOW_ALARMS", "description": "Show the list of current alarms.", "arguments": {}}]}
{"query": "Could you provide an overview of all set alarms?", "answers": [{"id": 0, "name": "ACTION_SHOW_ALARMS", "arguments": {}}], "tools": [{"name": "ACTION_SHOW_ALARMS", "description": "Show the list of current alarms.", "arguments": {}}]}
{"query": "Retrieve the alarm list for review.", "answers": [{"id": 0, "name": "ACTION_SHOW_ALARMS", "arguments": {}}], "tools": [{"name": "ACTION_SHOW_ALARMS", "description": "Show the list of current alarms.", "arguments": {}}]}
{"query": "Provide a summary of alarms currently set.", "answers": [{"id": 0, "name": "ACTION_SHOW_ALARMS", "arguments": {}}], "tools": [{"name": "ACTION_SHOW_ALARMS", "description": "Show the list of current alarms.", "arguments": {}}]}
{"query": "I would like to check what alarms are currently in operation.", "answers": [{"id": 0, "name": "ACTION_SHOW_ALARMS", "arguments": {}}], "tools": [{"name": "ACTION_SHOW_ALARMS", "description": "Show the list of current alarms.", "arguments": {}}]}
{"query": "Generate a report of active alarms now.", "answers": [{"id": 0, "name": "ACTION_SHOW_ALARMS", "arguments": {}}], "tools": [{"name": "ACTION_SHOW_ALARMS", "description": "Show the list of current alarms.", "arguments": {}}]}
{"query": "Can you bring up the list showing all my alarm configurations?", "answers": [{"id": 0, "name": "ACTION_SHOW_ALARMS", "arguments": {}}], "tools": [{"name": "ACTION_SHOW_ALARMS", "description": "Show the list of current alarms.", "arguments": {}}]}
{"query": "Do I have any alarms set at the moment?", "answers": [{"id": 0, "name": "ACTION_SHOW_ALARMS", "arguments": {}}], "tools": [{"name": "ACTION_SHOW_ALARMS", "description": "Show the list of current alarms.", "arguments": {}}]}
{"query": "How can I record a video and get the file location using my camera app?", "answers": [{"id": 0, "name": "ACTION_VIDEO_CAPTURE", "arguments": {}}], "tools": [{"name": "ACTION_VIDEO_CAPTURE", "description": "Capture a video using the camera app and return the URI of the saved video.\n\nThis function uses the ACTION_VIDEO_CAPTURE intent to open the camera app and capture a video.\nThe video is saved to a URI location, which is returned by this function.\nUser can then use this URI to access the video file and do whatever they want with it.", "arguments": {}, "returns": {"description": "The URI location where the camera app saves the video file.", "type": "str"}}]}
{"query": "I need to capture a video for a project. What's the best way to initiate the camera to record and save the video?", "answers": [{"id": 0, "name": "ACTION_VIDEO_CAPTURE", "arguments": {}}], "tools": [{"name": "ACTION_VIDEO_CAPTURE", "description": "Capture a video using the camera app and return the URI of the saved video.\n\nThis function uses the ACTION_VIDEO_CAPTURE intent to open the camera app and capture a video.\nThe video is saved to a URI location, which is returned by this function.\nUser can then use this URI to access the video file and do whatever they want with it.", "arguments": {}, "returns": {"description": "The URI location where the camera app saves the video file.", "type": "str"}}]}
{"query": "Can you assist me in using the camera app to take a video and provide the storage location?", "answers": [{"id": 0, "name": "ACTION_VIDEO_CAPTURE", "arguments": {}}], "tools": [{"name": "ACTION_VIDEO_CAPTURE", "description": "Capture a video using the camera app and return the URI of the saved video.\n\nThis function uses the ACTION_VIDEO_CAPTURE intent to open the camera app and capture a video.\nThe video is saved to a URI location, which is returned by this function.\nUser can then use this URI to access the video file and do whatever they want with it.", "arguments": {}, "returns": {"description": "The URI location where the camera app saves the video file.", "type": "str"}}]}
{"query": "Please help me start filming a video with my phone’s camera application and let me know where the video gets stored.", "answers": [{"id": 0, "name": "ACTION_VIDEO_CAPTURE", "arguments": {}}], "tools": [{"name": "ACTION_VIDEO_CAPTURE", "description": "Capture a video using the camera app and return the URI of the saved video.\n\nThis function uses the ACTION_VIDEO_CAPTURE intent to open the camera app and capture a video.\nThe video is saved to a URI location, which is returned by this function.\nUser can then use this URI to access the video file and do whatever they want with it.", "arguments": {}, "returns": {"description": "The URI location where the camera app saves the video file.", "type": "str"}}]}
{"query": "I want to make a video using my phone's camera. How do I do this and find out where the file is saved?", "answers": [{"id": 0, "name": "ACTION_VIDEO_CAPTURE", "arguments": {}}], "tools": [{"name": "ACTION_VIDEO_CAPTURE", "description": "Capture a video using the camera app and return the URI of the saved video.\n\nThis function uses the ACTION_VIDEO_CAPTURE intent to open the camera app and capture a video.\nThe video is saved to a URI location, which is returned by this function.\nUser can then use this URI to access the video file and do whatever they want with it.", "arguments": {}, "returns": {"description": "The URI location where the camera app saves the video file.", "type": "str"}}]}
{"query": "Could you guide me through recording a video through the default camera app and accessing the saved file?", "answers": [{"id": 0, "name": "ACTION_VIDEO_CAPTURE", "arguments": {}}], "tools": [{"name": "ACTION_VIDEO_CAPTURE", "description": "Capture a video using the camera app and return the URI of the saved video.\n\nThis function uses the ACTION_VIDEO_CAPTURE intent to open the camera app and capture a video.\nThe video is saved to a URI location, which is returned by this function.\nUser can then use this URI to access the video file and do whatever they want with it.", "arguments": {}, "returns": {"description": "The URI location where the camera app saves the video file.", "type": "str"}}]}
{"query": "Tell me how to use the camera app to record a video and retrieve the file path.", "answers": [{"id": 0, "name": "ACTION_VIDEO_CAPTURE", "arguments": {}}], "tools": [{"name": "ACTION_VIDEO_CAPTURE", "description": "Capture a video using the camera app and return the URI of the saved video.\n\nThis function uses the ACTION_VIDEO_CAPTURE intent to open the camera app and capture a video.\nThe video is saved to a URI location, which is returned by this function.\nUser can then use this URI to access the video file and do whatever they want with it.", "arguments": {}, "returns": {"description": "The URI location where the camera app saves the video file.", "type": "str"}}]}
{"query": "Initiate video capture using the native camera application and provide me with the URI of the output file.", "answers": [{"id": 0, "name": "ACTION_VIDEO_CAPTURE", "arguments": {}}], "tools": [{"name": "ACTION_VIDEO_CAPTURE", "description": "Capture a video using the camera app and return the URI of the saved video.\n\nThis function uses the ACTION_VIDEO_CAPTURE intent to open the camera app and capture a video.\nThe video is saved to a URI location, which is returned by this function.\nUser can then use this URI to access the video file and do whatever they want with it.", "arguments": {}, "returns": {"description": "The URI location where the camera app saves the video file.", "type": "str"}}]}
{"query": "I need help with activating the video recording feature in the camera app and knowing where the video is saved.", "answers": [{"id": 0, "name": "ACTION_VIDEO_CAPTURE", "arguments": {}}], "tools": [{"name": "ACTION_VIDEO_CAPTURE", "description": "Capture a video using the camera app and return the URI of the saved video.\n\nThis function uses the ACTION_VIDEO_CAPTURE intent to open the camera app and capture a video.\nThe video is saved to a URI location, which is returned by this function.\nUser can then use this URI to access the video file and do whatever they want with it.", "arguments": {}, "returns": {"description": "The URI location where the camera app saves the video file.", "type": "str"}}]}
{"query": "Show me how to start recording a video via the built-in camera app and then locate the saved video.", "answers": [{"id": 0, "name": "ACTION_VIDEO_CAPTURE", "arguments": {}}], "tools": [{"name": "ACTION_VIDEO_CAPTURE", "description": "Capture a video using the camera app and return the URI of the saved video.\n\nThis function uses the ACTION_VIDEO_CAPTURE intent to open the camera app and capture a video.\nThe video is saved to a URI location, which is returned by this function.\nUser can then use this URI to access the video file and do whatever they want with it.", "arguments": {}, "returns": {"description": "The URI location where the camera app saves the video file.", "type": "str"}}]}
{"query": "How do I use my camera's app to film something and find the saved file's URL?", "answers": [{"id": 0, "name": "ACTION_VIDEO_CAPTURE", "arguments": {}}], "tools": [{"name": "ACTION_VIDEO_CAPTURE", "description": "Capture a video using the camera app and return the URI of the saved video.\n\nThis function uses the ACTION_VIDEO_CAPTURE intent to open the camera app and capture a video.\nThe video is saved to a URI location, which is returned by this function.\nUser can then use this URI to access the video file and do whatever they want with it.", "arguments": {}, "returns": {"description": "The URI location where the camera app saves the video file.", "type": "str"}}]}
{"query": "Enable video recording mode in the camera application and provide details on where it will be stored.", "answers": [{"id": 0, "name": "ACTION_VIDEO_CAPTURE", "arguments": {}}], "tools": [{"name": "ACTION_VIDEO_CAPTURE", "description": "Capture a video using the camera app and return the URI of the saved video.\n\nThis function uses the ACTION_VIDEO_CAPTURE intent to open the camera app and capture a video.\nThe video is saved to a URI location, which is returned by this function.\nUser can then use this URI to access the video file and do whatever they want with it.", "arguments": {}, "returns": {"description": "The URI location where the camera app saves the video file.", "type": "str"}}]}
{"query": "Procedure to record a video using camera application and the details of the video storage location?", "answers": [{"id": 0, "name": "ACTION_VIDEO_CAPTURE", "arguments": {}}], "tools": [{"name": "ACTION_VIDEO_CAPTURE", "description": "Capture a video using the camera app and return the URI of the saved video.\n\nThis function uses the ACTION_VIDEO_CAPTURE intent to open the camera app and capture a video.\nThe video is saved to a URI location, which is returned by this function.\nUser can then use this URI to access the video file and do whatever they want with it.", "arguments": {}, "returns": {"description": "The URI location where the camera app saves the video file.", "type": "str"}}]}
{"query": "Assist me in shooting a video from my smartphone's camera app and share the file URI.", "answers": [{"id": 0, "name": "ACTION_VIDEO_CAPTURE", "arguments": {}}], "tools": [{"name": "ACTION_VIDEO_CAPTURE", "description": "Capture a video using the camera app and return the URI of the saved video.\n\nThis function uses the ACTION_VIDEO_CAPTURE intent to open the camera app and capture a video.\nThe video is saved to a URI location, which is returned by this function.\nUser can then use this URI to access the video file and do whatever they want with it.", "arguments": {}, "returns": {"description": "The URI location where the camera app saves the video file.", "type": "str"}}]}
{"query": "Tell me how to start a video recording on my mobile camera app and guide me on how to access the file.", "answers": [{"id": 0, "name": "ACTION_VIDEO_CAPTURE", "arguments": {}}], "tools": [{"name": "ACTION_VIDEO_CAPTURE", "description": "Capture a video using the camera app and return the URI of the saved video.\n\nThis function uses the ACTION_VIDEO_CAPTURE intent to open the camera app and capture a video.\nThe video is saved to a URI location, which is returned by this function.\nUser can then use this URI to access the video file and do whatever they want with it.", "arguments": {}, "returns": {"description": "The URI location where the camera app saves the video file.", "type": "str"}}]}
{"query": "Can you show me the contact information for John's number that I picked earlier today using the ACTION_PICK tool?", "answers": [{"id": 0, "name": "ACTION_VIEW_CONTACT", "arguments": {"contact_uri": "#id_of_ACTION_PICK_result"}}], "tools": [{"name": "ACTION_VIEW_CONTACT", "description": "Display the details for a known contact.\n\nThis function allows the user to view the details of a specific contact\nbased on the provided contact URI.", "arguments": {"contact_uri": {"description": "A content URI as a string, pointing to the contact\nwhose details should be displayed. This URI can be obtained from\nthe ACTION_PICK function or by querying the contacts database.", "type": "str", "required": true}}}]}
{"query": "I need to check the details for a contact URI I have, could you please pull up the contact info?", "answers": [{"id": 0, "name": "ACTION_VIEW_CONTACT", "arguments": {"contact_uri": "content://contacts/people/12345"}}], "tools": [{"name": "ACTION_VIEW_CONTACT", "description": "Display the details for a known contact.\n\nThis function allows the user to view the details of a specific contact\nbased on the provided contact URI.", "arguments": {"contact_uri": {"description": "A content URI as a string, pointing to the contact\nwhose details should be displayed. This URI can be obtained from\nthe ACTION_PICK function or by querying the contacts database.", "type": "str", "required": true}}}]}
{"query": "Please display the information for this contact URI I obtained from querying the database.", "answers": [{"id": 0, "name": "ACTION_VIEW_CONTACT", "arguments": {"contact_uri": "content://contacts/people/67890"}}], "tools": [{"name": "ACTION_VIEW_CONTACT", "description": "Display the details for a known contact.\n\nThis function allows the user to view the details of a specific contact\nbased on the provided contact URI.", "arguments": {"contact_uri": {"description": "A content URI as a string, pointing to the contact\nwhose details should be displayed. This URI can be obtained from\nthe ACTION_PICK function or by querying the contacts database.", "type": "str", "required": true}}}]}
{"query": "I'd like to review a contact's details. Here's the URI, please fetch the info.", "answers": [{"id": 0, "name": "ACTION_VIEW_CONTACT", "arguments": {"contact_uri": "content://contacts/people/112233"}}], "tools": [{"name": "ACTION_VIEW_CONTACT", "description": "Display the details for a known contact.\n\nThis function allows the user to view the details of a specific contact\nbased on the provided contact URI.", "arguments": {"contact_uri": {"description": "A content URI as a string, pointing to the contact\nwhose details should be displayed. This URI can be obtained from\nthe ACTION_PICK function or by querying the contacts database.", "type": "str", "required": true}}}]}
{"query": "Could you help me view the details for a contact with the following URI: content://contacts/people/445566?", "answers": [{"id": 0, "name": "ACTION_VIEW_CONTACT", "arguments": {"contact_uri": "content://contacts/people/445566"}}], "tools": [{"name": "ACTION_VIEW_CONTACT", "description": "Display the details for a known contact.\n\nThis function allows the user to view the details of a specific contact\nbased on the provided contact URI.", "arguments": {"contact_uri": {"description": "A content URI as a string, pointing to the contact\nwhose details should be displayed. This URI can be obtained from\nthe ACTION_PICK function or by querying the contacts database.", "type": "str", "required": true}}}]}
{"query": "Show the contact details for the URI I got after using your selection tool.", "answers": [{"id": 0, "name": "ACTION_VIEW_CONTACT", "arguments": {"contact_uri": "#id_of_contact_selection_tool_result"}}], "tools": [{"name": "ACTION_VIEW_CONTACT", "description": "Display the details for a known contact.\n\nThis function allows the user to view the details of a specific contact\nbased on the provided contact URI.", "arguments": {"contact_uri": {"description": "A content URI as a string, pointing to the contact\nwhose details should be displayed. This URI can be obtained from\nthe ACTION_PICK function or by querying the contacts database.", "type": "str", "required": true}}}]}
{"query": "Use this URI to retrieve and display contact details: content://contacts/people/778899", "answers": [{"id": 0, "name": "ACTION_VIEW_CONTACT", "arguments": {"contact_uri": "content://contacts/people/778899"}}], "tools": [{"name": "ACTION_VIEW_CONTACT", "description": "Display the details for a known contact.\n\nThis function allows the user to view the details of a specific contact\nbased on the provided contact URI.", "arguments": {"contact_uri": {"description": "A content URI as a string, pointing to the contact\nwhose details should be displayed. This URI can be obtained from\nthe ACTION_PICK function or by querying the contacts database.", "type": "str", "required": true}}}]}
{"query": "Please access the contact information using this specific URI I have from a previous operation.", "answers": [{"id": 0, "name": "ACTION_VIEW_CONTACT", "arguments": {"contact_uri": "content://contacts/people/990011"}}], "tools": [{"name": "ACTION_VIEW_CONTACT", "description": "Display the details for a known contact.\n\nThis function allows the user to view the details of a specific contact\nbased on the provided contact URI.", "arguments": {"contact_uri": {"description": "A content URI as a string, pointing to the contact\nwhose details should be displayed. This URI can be obtained from\nthe ACTION_PICK function or by querying the contacts database.", "type": "str", "required": true}}}]}
{"query": "Fetch and display the contact info for the URI derived from our last session's database query.", "answers": [{"id": 0, "name": "ACTION_VIEW_CONTACT", "arguments": {"contact_uri": "content://contacts/people/223344"}}], "tools": [{"name": "ACTION_VIEW_CONTACT", "description": "Display the details for a known contact.\n\nThis function allows the user to view the details of a specific contact\nbased on the provided contact URI.", "arguments": {"contact_uri": {"description": "A content URI as a string, pointing to the contact\nwhose details should be displayed. This URI can be obtained from\nthe ACTION_PICK function or by querying the contacts database.", "type": "str", "required": true}}}]}
{"query": "I managed to get a contact URI recently, can you show me the contact details linked to it?", "answers": [{"id": 0, "name": "ACTION_VIEW_CONTACT", "arguments": {"contact_uri": "content://contacts/people/556677"}}], "tools": [{"name": "ACTION_VIEW_CONTACT", "description": "Display the details for a known contact.\n\nThis function allows the user to view the details of a specific contact\nbased on the provided contact URI.", "arguments": {"contact_uri": {"description": "A content URI as a string, pointing to the contact\nwhose details should be displayed. This URI can be obtained from\nthe ACTION_PICK function or by querying the contacts database.", "type": "str", "required": true}}}]}
{"query": "Pull up the details for this contact URI: content://contacts/people/889900", "answers": [{"id": 0, "name": "ACTION_VIEW_CONTACT", "arguments": {"contact_uri": "content://contacts/people/889900"}}], "tools": [{"name": "ACTION_VIEW_CONTACT", "description": "Display the details for a known contact.\n\nThis function allows the user to view the details of a specific contact\nbased on the provided contact URI.", "arguments": {"contact_uri": {"description": "A content URI as a string, pointing to the contact\nwhose details should be displayed. This URI can be obtained from\nthe ACTION_PICK function or by querying the contacts database.", "type": "str", "required": true}}}]}
{"query": "Here's a contact URI from an earlier database action, could you look up the details?", "answers": [{"id": 0, "name": "ACTION_VIEW_CONTACT", "arguments": {"contact_uri": "content://contacts/people/334455"}}], "tools": [{"name": "ACTION_VIEW_CONTACT", "description": "Display the details for a known contact.\n\nThis function allows the user to view the details of a specific contact\nbased on the provided contact URI.", "arguments": {"contact_uri": {"description": "A content URI as a string, pointing to the contact\nwhose details should be displayed. This URI can be obtained from\nthe ACTION_PICK function or by querying the contacts database.", "type": "str", "required": true}}}]}
{"query": "From the contact picker I used before, I have this URI. Show the contact details, please.", "answers": [{"id": 0, "name": "ACTION_VIEW_CONTACT", "arguments": {"contact_uri": "#id_of_contact_picker_tool_result"}}], "tools": [{"name": "ACTION_VIEW_CONTACT", "description": "Display the details for a known contact.\n\nThis function allows the user to view the details of a specific contact\nbased on the provided contact URI.", "arguments": {"contact_uri": {"description": "A content URI as a string, pointing to the contact\nwhose details should be displayed. This URI can be obtained from\nthe ACTION_PICK function or by querying the contacts database.", "type": "str", "required": true}}}]}
{"query": "Display the specifics of this contact whose URI is content://contacts/people/667788", "answers": [{"id": 0, "name": "ACTION_VIEW_CONTACT", "arguments": {"contact_uri": "content://contacts/people/667788"}}], "tools": [{"name": "ACTION_VIEW_CONTACT", "description": "Display the details for a known contact.\n\nThis function allows the user to view the details of a specific contact\nbased on the provided contact URI.", "arguments": {"contact_uri": {"description": "A content URI as a string, pointing to the contact\nwhose details should be displayed. This URI can be obtained from\nthe ACTION_PICK function or by querying the contacts database.", "type": "str", "required": true}}}]}
{"query": "Using the URI provided, could you load and show the contact data?", "answers": [{"id": 0, "name": "ACTION_VIEW_CONTACT", "arguments": {"contact_uri": "content://contacts/people/998877"}}], "tools": [{"name": "ACTION_VIEW_CONTACT", "description": "Display the details for a known contact.\n\nThis function allows the user to view the details of a specific contact\nbased on the provided contact URI.", "arguments": {"contact_uri": {"description": "A content URI as a string, pointing to the contact\nwhose details should be displayed. This URI can be obtained from\nthe ACTION_PICK function or by querying the contacts database.", "type": "str", "required": true}}}]}
{"query": "Can you start the camera for me to take a photo?", "answers": [{"id": 0, "name": "INTENT_ACTION_STILL_IMAGE_CAMERA", "arguments": {}}], "tools": [{"name": "INTENT_ACTION_STILL_IMAGE_CAMERA", "description": "Open a camera app in still image mode for capturing photos for user.", "arguments": {}}]}
{"query": "I need to snap a picture with my device, could you open the camera app?", "answers": [{"id": 0, "name": "INTENT_ACTION_STILL_IMAGE_CAMERA", "arguments": {}}], "tools": [{"name": "INTENT_ACTION_STILL_IMAGE_CAMERA", "description": "Open a camera app in still image mode for capturing photos for user.", "arguments": {}}]}
{"query": "Could you activate the camera tool for capturing an image?", "answers": [{"id": 0, "name": "INTENT_ACTION_STILL_IMAGE_CAMERA", "arguments": {}}], "tools": [{"name": "INTENT_ACTION_STILL_IMAGE_CAMERA", "description": "Open a camera app in still image mode for capturing photos for user.", "arguments": {}}]}
{"query": "Please open my camera app, I want to take a still photograph.", "answers": [{"id": 0, "name": "INTENT_ACTION_STILL_IMAGE_CAMERA", "arguments": {}}], "tools": [{"name": "INTENT_ACTION_STILL_IMAGE_CAMERA", "description": "Open a camera app in still image mode for capturing photos for user.", "arguments": {}}]}
{"query": "I’d like to quickly capture a photo; can you please open my camera?", "answers": [{"id": 0, "name": "INTENT_ACTION_STILL_IMAGE_CAMERA", "arguments": {}}], "tools": [{"name": "INTENT_ACTION_STILL_IMAGE_CAMERA", "description": "Open a camera app in still image mode for capturing photos for user.", "arguments": {}}]}
{"query": "Is it possible to initiate the camera on my phone for a photo shoot now?", "answers": [{"id": 0, "name": "INTENT_ACTION_STILL_IMAGE_CAMERA", "arguments": {}}], "tools": [{"name": "INTENT_ACTION_STILL_IMAGE_CAMERA", "description": "Open a camera app in still image mode for capturing photos for user.", "arguments": {}}]}
{"query": "I need to document something with a picture, could you turn on the camera?", "answers": [{"id": 0, "name": "INTENT_ACTION_STILL_IMAGE_CAMERA", "arguments": {}}], "tools": [{"name": "INTENT_ACTION_STILL_IMAGE_CAMERA", "description": "Open a camera app in still image mode for capturing photos for user.", "arguments": {}}]}
{"query": "Would you help me by starting the camera for photo mode?", "answers": [{"id": 0, "name": "INTENT_ACTION_STILL_IMAGE_CAMERA", "arguments": {}}], "tools": [{"name": "INTENT_ACTION_STILL_IMAGE_CAMERA", "description": "Open a camera app in still image mode for capturing photos for user.", "arguments": {}}]}
{"query": "Enable my phone's camera for taking a static image, please.", "answers": [{"id": 0, "name": "INTENT_ACTION_STILL_IMAGE_CAMERA", "arguments": {}}], "tools": [{"name": "INTENT_ACTION_STILL_IMAGE_CAMERA", "description": "Open a camera app in still image mode for capturing photos for user.", "arguments": {}}]}
{"query": "Launch the camera in still image capture mode.", "answers": [{"id": 0, "name": "INTENT_ACTION_STILL_IMAGE_CAMERA", "arguments": {}}], "tools": [{"name": "INTENT_ACTION_STILL_IMAGE_CAMERA", "description": "Open a camera app in still image mode for capturing photos for user.", "arguments": {}}]}
{"query": "Open the photo capture utility in my mobile device.", "answers": [{"id": 0, "name": "INTENT_ACTION_STILL_IMAGE_CAMERA", "arguments": {}}], "tools": [{"name": "INTENT_ACTION_STILL_IMAGE_CAMERA", "description": "Open a camera app in still image mode for capturing photos for user.", "arguments": {}}]}
{"query": "Activate the still image function of my device’s camera, I have something to photograph.", "answers": [{"id": 0, "name": "INTENT_ACTION_STILL_IMAGE_CAMERA", "arguments": {}}], "tools": [{"name": "INTENT_ACTION_STILL_IMAGE_CAMERA", "description": "Open a camera app in still image mode for capturing photos for user.", "arguments": {}}]}
{"query": "I need to take a picture immediately, can you open up the camera app?", "answers": [{"id": 0, "name": "INTENT_ACTION_STILL_IMAGE_CAMERA", "arguments": {}}], "tools": [{"name": "INTENT_ACTION_STILL_IMAGE_CAMERA", "description": "Open a camera app in still image mode for capturing photos for user.", "arguments": {}}]}
{"query": "Access the mobile camera for me, I am in a hurry to click a still image.", "answers": [{"id": 0, "name": "INTENT_ACTION_STILL_IMAGE_CAMERA", "arguments": {}}], "tools": [{"name": "INTENT_ACTION_STILL_IMAGE_CAMERA", "description": "Open a camera app in still image mode for capturing photos for user.", "arguments": {}}]}
{"query": "I’d appreciate your assistance in launching the camera mode for photos.", "answers": [{"id": 0, "name": "INTENT_ACTION_STILL_IMAGE_CAMERA", "arguments": {}}], "tools": [{"name": "INTENT_ACTION_STILL_IMAGE_CAMERA", "description": "Open a camera app in still image mode for capturing photos for user.", "arguments": {}}]}
{"query": "I need to start recording a graduation ceremony video. How can I activate the video camera mode on my phone?", "answers": [{"id": 0, "name": "INTENT_ACTION_VIDEO_CAMERA", "arguments": {}}], "tools": [{"name": "INTENT_ACTION_VIDEO_CAMERA", "description": "Open a camera app in video mode to start recording a video.", "arguments": {}}]}
{"query": "Can you open up the video mode in my camera app quickly?", "answers": [{"id": 0, "name": "INTENT_ACTION_VIDEO_CAMERA", "arguments": {}}], "tools": [{"name": "INTENT_ACTION_VIDEO_CAMERA", "description": "Open a camera app in video mode to start recording a video.", "arguments": {}}]}
{"query": "Switch my mobile’s camera to video recording mode, please.", "answers": [{"id": 0, "name": "INTENT_ACTION_VIDEO_CAMERA", "arguments": {}}], "tools": [{"name": "INTENT_ACTION_VIDEO_CAMERA", "description": "Open a camera app in video mode to start recording a video.", "arguments": {}}]}
{"query": "Begin capturing video footage using the camera app.", "answers": [{"id": 0, "name": "INTENT_ACTION_VIDEO_CAMERA", "arguments": {}}], "tools": [{"name": "INTENT_ACTION_VIDEO_CAMERA", "description": "Open a camera app in video mode to start recording a video.", "arguments": {}}]}
{"query": "Activate video mode on my smartphone’s camera app.", "answers": [{"id": 0, "name": "INTENT_ACTION_VIDEO_CAMERA", "arguments": {}}], "tools": [{"name": "INTENT_ACTION_VIDEO_CAMERA", "description": "Open a camera app in video mode to start recording a video.", "arguments": {}}]}
{"query": "Could you help me start a new video recording through the camera application?", "answers": [{"id": 0, "name": "INTENT_ACTION_VIDEO_CAMERA", "arguments": {}}], "tools": [{"name": "INTENT_ACTION_VIDEO_CAMERA", "description": "Open a camera app in video mode to start recording a video.", "arguments": {}}]}
{"query": "Enable the video recording feature on my camera application immediately.", "answers": [{"id": 0, "name": "INTENT_ACTION_VIDEO_CAMERA", "arguments": {}}], "tools": [{"name": "INTENT_ACTION_VIDEO_CAMERA", "description": "Open a camera app in video mode to start recording a video.", "arguments": {}}]}
{"query": "Show me how to switch to video recording mode in the camera app.", "answers": [{"id": 0, "name": "INTENT_ACTION_VIDEO_CAMERA", "arguments": {}}], "tools": [{"name": "INTENT_ACTION_VIDEO_CAMERA", "description": "Open a camera app in video mode to start recording a video.", "arguments": {}}]}
{"query": "I want to record a birthday party video, open the video camera on my phone.", "answers": [{"id": 0, "name": "INTENT_ACTION_VIDEO_CAMERA", "arguments": {}}], "tools": [{"name": "INTENT_ACTION_VIDEO_CAMERA", "description": "Open a camera app in video mode to start recording a video.", "arguments": {}}]}
{"query": "Quickly transition my device’s camera to the mode that allows video recording.", "answers": [{"id": 0, "name": "INTENT_ACTION_VIDEO_CAMERA", "arguments": {}}], "tools": [{"name": "INTENT_ACTION_VIDEO_CAMERA", "description": "Open a camera app in video mode to start recording a video.", "arguments": {}}]}
{"query": "Let's make a video, can you turn on the camera in video mode?", "answers": [{"id": 0, "name": "INTENT_ACTION_VIDEO_CAMERA", "arguments": {}}], "tools": [{"name": "INTENT_ACTION_VIDEO_CAMERA", "description": "Open a camera app in video mode to start recording a video.", "arguments": {}}]}
{"query": "Please launch the video recording function on my camera app.", "answers": [{"id": 0, "name": "INTENT_ACTION_VIDEO_CAMERA", "arguments": {}}], "tools": [{"name": "INTENT_ACTION_VIDEO_CAMERA", "description": "Open a camera app in video mode to start recording a video.", "arguments": {}}]}
{"query": "I would like to start recording a video lecture, could you set up my camera app accordingly?", "answers": [{"id": 0, "name": "INTENT_ACTION_VIDEO_CAMERA", "arguments": {}}], "tools": [{"name": "INTENT_ACTION_VIDEO_CAMERA", "description": "Open a camera app in video mode to start recording a video.", "arguments": {}}]}
{"query": "Switch to video capture mode on my device’s camera app so I can record my workout session.", "answers": [{"id": 0, "name": "INTENT_ACTION_VIDEO_CAMERA", "arguments": {}}], "tools": [{"name": "INTENT_ACTION_VIDEO_CAMERA", "description": "Open a camera app in video mode to start recording a video.", "arguments": {}}]}
{"query": "I’m at a concert and want to record it on video. Open my phone's camera app in video mode.", "answers": [{"id": 0, "name": "INTENT_ACTION_VIDEO_CAMERA", "arguments": {}}], "tools": [{"name": "INTENT_ACTION_VIDEO_CAMERA", "description": "Open a camera app in video mode to start recording a video.", "arguments": {}}]}
{"tool": "dial", "query": "Can you initiate the calling interface with the number 9876543210 ready?", "answers": [{"id": 0, "name": "dial", "arguments": {"phone_number": "9876543210"}}], "tools": [{"name": "dial", "description": "Opens the dialer with a specified number in a phone app for user.\n\nThis function helps user to start a phone call process. It can open\nthe dialer with a pre-filled number. User can then choose to dial the number.", "arguments": {"phone_number": {"description": "The phone number to dial. This should be a valid\ntelephone number as defined in IETF RFC 3966. Examples include:\n\"2125551212\" or \"(212) 555 1212\".", "type": "str", "required": true}}, "examples": ["# Open dialer with a number\ndial(\"2125551212\")"]}]}
{"tool": "dial", "query": "I need to call my lawyer. Please set up the dialer for the number (800) 123-4567.", "answers": [{"id": 0, "name": "dial", "arguments": {"phone_number": "(800) 123-4567"}}], "tools": [{"name": "dial", "description": "Opens the dialer with a specified number in a phone app for user.\n\nThis function helps user to start a phone call process. It can open\nthe dialer with a pre-filled number. User can then choose to dial the number.", "arguments": {"phone_number": {"description": "The phone number to dial. This should be a valid\ntelephone number as defined in IETF RFC 3966. Examples include:\n\"2125551212\" or \"(212) 555 1212\".", "type": "str", "required": true}}, "examples": ["# Open dialer with a number\ndial(\"2125551212\")"]}]}
{"tool": "dial", "query": "Please prep my phone to dial this number: 302-555-0198.", "answers": [{"id": 0, "name": "dial", "arguments": {"phone_number": "302-555-0198"}}], "tools": [{"name": "dial", "description": "Opens the dialer with a specified number in a phone app for user.\n\nThis function helps user to start a phone call process. It can open\nthe dialer with a pre-filled number. User can then choose to dial the number.", "arguments": {"phone_number": {"description": "The phone number to dial. This should be a valid\ntelephone number as defined in IETF RFC 3966. Examples include:\n\"2125551212\" or \"(212) 555 1212\".", "type": "str", "required": true}}, "examples": ["# Open dialer with a number\ndial(\"2125551212\")"]}]}
{"tool": "dial", "query": "Open my phone app with the phone number +442071838750 ready to call.", "answers": [{"id": 0, "name": "dial", "arguments": {"phone_number": "+442071838750"}}], "tools": [{"name": "dial", "description": "Opens the dialer with a specified number in a phone app for user.\n\nThis function helps user to start a phone call process. It can open\nthe dialer with a pre-filled number. User can then choose to dial the number.", "arguments": {"phone_number": {"description": "The phone number to dial. This should be a valid\ntelephone number as defined in IETF RFC 3966. Examples include:\n\"2125551212\" or \"(212) 555 1212\".", "type": "str", "required": true}}, "examples": ["# Open dialer with a number\ndial(\"2125551212\")"]}]}
{"tool": "dial", "query": "Get my dialing screen ready to call my friend at 416-555-7890.", "answers": [{"id": 0, "name": "dial", "arguments": {"phone_number": "416-555-7890"}}], "tools": [{"name": "dial", "description": "Opens the dialer with a specified number in a phone app for user.\n\nThis function helps user to start a phone call process. It can open\nthe dialer with a pre-filled number. User can then choose to dial the number.", "arguments": {"phone_number": {"description": "The phone number to dial. This should be a valid\ntelephone number as defined in IETF RFC 3966. Examples include:\n\"2125551212\" or \"(212) 555 1212\".", "type": "str", "required": true}}, "examples": ["# Open dialer with a number\ndial(\"2125551212\")"]}]}
{"tool": "dial", "query": "Activate the telephone app and prepare to dial 555-202-3045.", "answers": [{"id": 0, "name": "dial", "arguments": {"phone_number": "555-202-3045"}}], "tools": [{"name": "dial", "description": "Opens the dialer with a specified number in a phone app for user.\n\nThis function helps user to start a phone call process. It can open\nthe dialer with a pre-filled number. User can then choose to dial the number.", "arguments": {"phone_number": {"description": "The phone number to dial. This should be a valid\ntelephone number as defined in IETF RFC 3966. Examples include:\n\"2125551212\" or \"(212) 555 1212\".", "type": "str", "required": true}}, "examples": ["# Open dialer with a number\ndial(\"2125551212\")"]}]}
{"tool": "dial", "query": "Could you set up my phone to make a call to (202) 555-0177?", "answers": [{"id": 0, "name": "dial", "arguments": {"phone_number": "(202) 555-0177"}}], "tools": [{"name": "dial", "description": "Opens the dialer with a specified number in a phone app for user.\n\nThis function helps user to start a phone call process. It can open\nthe dialer with a pre-filled number. User can then choose to dial the number.", "arguments": {"phone_number": {"description": "The phone number to dial. This should be a valid\ntelephone number as defined in IETF RFC 3966. Examples include:\n\"2125551212\" or \"(212) 555 1212\".", "type": "str", "required": true}}, "examples": ["# Open dialer with a number\ndial(\"2125551212\")"]}]}
{"tool": "dial", "query": "Prepare the dialer with my mom's new number: 703-555-0129.", "answers": [{"id": 0, "name": "dial", "arguments": {"phone_number": "703-555-0129"}}], "tools": [{"name": "dial", "description": "Opens the dialer with a specified number in a phone app for user.\n\nThis function helps user to start a phone call process. It can open\nthe dialer with a pre-filled number. User can then choose to dial the number.", "arguments": {"phone_number": {"description": "The phone number to dial. This should be a valid\ntelephone number as defined in IETF RFC 3966. Examples include:\n\"2125551212\" or \"(212) 555 1212\".", "type": "str", "required": true}}, "examples": ["# Open dialer with a number\ndial(\"2125551212\")"]}]}
{"tool": "dial", "query": "I want to make a call to the number (123) 456-7890, please set up the dialer.", "answers": [{"id": 0, "name": "dial", "arguments": {"phone_number": "(123) 456-7890"}}], "tools": [{"name": "dial", "description": "Opens the dialer with a specified number in a phone app for user.\n\nThis function helps user to start a phone call process. It can open\nthe dialer with a pre-filled number. User can then choose to dial the number.", "arguments": {"phone_number": {"description": "The phone number to dial. This should be a valid\ntelephone number as defined in IETF RFC 3966. Examples include:\n\"2125551212\" or \"(212) 555 1212\".", "type": "str", "required": true}}, "examples": ["# Open dialer with a number\ndial(\"2125551212\")"]}]}
{"tool": "dial", "query": "Start the dialing app to make a call to +1-202-555-0185.", "answers": [{"id": 0, "name": "dial", "arguments": {"phone_number": "+1-202-555-0185"}}], "tools": [{"name": "dial", "description": "Opens the dialer with a specified number in a phone app for user.\n\nThis function helps user to start a phone call process. It can open\nthe dialer with a pre-filled number. User can then choose to dial the number.", "arguments": {"phone_number": {"description": "The phone number to dial. This should be a valid\ntelephone number as defined in IETF RFC 3966. Examples include:\n\"2125551212\" or \"(212) 555 1212\".", "type": "str", "required": true}}, "examples": ["# Open dialer with a number\ndial(\"2125551212\")"]}]}
{"tool": "dial", "query": "Get the dial screen ready for the number 1-800-555-0199, need to make a call urgently.", "answers": [{"id": 0, "name": "dial", "arguments": {"phone_number": "1-800-555-0199"}}], "tools": [{"name": "dial", "description": "Opens the dialer with a specified number in a phone app for user.\n\nThis function helps user to start a phone call process. It can open\nthe dialer with a pre-filled number. User can then choose to dial the number.", "arguments": {"phone_number": {"description": "The phone number to dial. This should be a valid\ntelephone number as defined in IETF RFC 3966. Examples include:\n\"2125551212\" or \"(212) 555 1212\".", "type": "str", "required": true}}, "examples": ["# Open dialer with a number\ndial(\"2125551212\")"]}]}
{"tool": "dial", "query": "Initialize my dialer with the number 647-555-0191, so I can start the call.", "answers": [{"id": 0, "name": "dial", "arguments": {"phone_number": "647-555-0191"}}], "tools": [{"name": "dial", "description": "Opens the dialer with a specified number in a phone app for user.\n\nThis function helps user to start a phone call process. It can open\nthe dialer with a pre-filled number. User can then choose to dial the number.", "arguments": {"phone_number": {"description": "The phone number to dial. This should be a valid\ntelephone number as defined in IETF RFC 3966. Examples include:\n\"2125551212\" or \"(212) 555 1212\".", "type": "str", "required": true}}, "examples": ["# Open dialer with a number\ndial(\"2125551212\")"]}]}
{"tool": "dial", "query": "Set up a call to 555-0190, please retrieve the number for the dialer.", "answers": [{"id": 0, "name": "dial", "arguments": {"phone_number": "555-0190"}}], "tools": [{"name": "dial", "description": "Opens the dialer with a specified number in a phone app for user.\n\nThis function helps user to start a phone call process. It can open\nthe dialer with a pre-filled number. User can then choose to dial the number.", "arguments": {"phone_number": {"description": "The phone number to dial. This should be a valid\ntelephone number as defined in IETF RFC 3966. Examples include:\n\"2125551212\" or \"(212) 555 1212\".", "type": "str", "required": true}}, "examples": ["# Open dialer with a number\ndial(\"2125551212\")"]}]}
{"tool": "dial", "query": "Need to make an emergency call to 999. Please make the dialer ready with this number.", "answers": [{"id": 0, "name": "dial", "arguments": {"phone_number": "999"}}], "tools": [{"name": "dial", "description": "Opens the dialer with a specified number in a phone app for user.\n\nThis function helps user to start a phone call process. It can open\nthe dialer with a pre-filled number. User can then choose to dial the number.", "arguments": {"phone_number": {"description": "The phone number to dial. This should be a valid\ntelephone number as defined in IETF RFC 3966. Examples include:\n\"2125551212\" or \"(212) 555 1212\".", "type": "str", "required": true}}, "examples": ["# Open dialer with a number\ndial(\"2125551212\")"]}]}
{"tool": "dial", "query": "Enable the dialer to call my office at (650) 555-0111.", "answers": [{"id": 0, "name": "dial", "arguments": {"phone_number": "(650) 555-0111"}}], "tools": [{"name": "dial", "description": "Opens the dialer with a specified number in a phone app for user.\n\nThis function helps user to start a phone call process. It can open\nthe dialer with a pre-filled number. User can then choose to dial the number.", "arguments": {"phone_number": {"description": "The phone number to dial. This should be a valid\ntelephone number as defined in IETF RFC 3966. Examples include:\n\"2125551212\" or \"(212) 555 1212\".", "type": "str", "required": true}}, "examples": ["# Open dialer with a number\ndial(\"2125551212\")"]}]}
{"query": "Can you help me find the email address of a person named Alice Smith?", "answers": [{"id": 0, "name": "get_contact_info", "arguments": {"name": "Alice Smith", "key": "email"}}], "tools": [{"name": "get_contact_info", "description": "Get the contact information based on the contact name and the key.\n", "arguments": {"name": {"description": "The name of the contact.", "type": "str", "required": true}, "key": {"description": "The key to get the information of the contact.\ncan be one of the following: \"email\", \"phone\", \"address\" \"uri\"\nif key is \"uri\", this function will return the uri of the contact that can be \nused to edit the contact.", "type": "str", "required": true}}, "returns": {"description": "The information of the contact based on the key.", "type": "str"}, "examples": ["get_contact_info(\"John Doe\", \"email\")\nthis will return the email of the contact named \"John Doe\""]}]}
{"query": "What is the phone number associated with the contact Robert Brown?", "answers": [{"id": 0, "name": "get_contact_info", "arguments": {"name": "Robert Brown", "key": "phone"}}], "tools": [{"name": "get_contact_info", "description": "Get the contact information based on the contact name and the key.\n", "arguments": {"name": {"description": "The name of the contact.", "type": "str", "required": true}, "key": {"description": "The key to get the information of the contact.\ncan be one of the following: \"email\", \"phone\", \"address\" \"uri\"\nif key is \"uri\", this function will return the uri of the contact that can be \nused to edit the contact.", "type": "str", "required": true}}, "returns": {"description": "The information of the contact based on the key.", "type": "str"}, "examples": ["get_contact_info(\"John Doe\", \"email\")\nthis will return the email of the contact named \"John Doe\""]}]}
{"query": "I need the physical address for the contact named Emily Clarke. Could you retrieve that for me?", "answers": [{"id": 0, "name": "get_contact_info", "arguments": {"name": "Emily Clarke", "key": "address"}}], "tools": [{"name": "get_contact_info", "description": "Get the contact information based on the contact name and the key.\n", "arguments": {"name": {"description": "The name of the contact.", "type": "str", "required": true}, "key": {"description": "The key to get the information of the contact.\ncan be one of the following: \"email\", \"phone\", \"address\" \"uri\"\nif key is \"uri\", this function will return the uri of the contact that can be \nused to edit the contact.", "type": "str", "required": true}}, "returns": {"description": "The information of the contact based on the key.", "type": "str"}, "examples": ["get_contact_info(\"John Doe\", \"email\")\nthis will return the email of the contact named \"John Doe\""]}]}
{"query": "Please fetch the URI for editing the details of the contact labeled as Christopher Lee.", "answers": [{"id": 0, "name": "get_contact_info", "arguments": {"name": "Christopher Lee", "key": "uri"}}], "tools": [{"name": "get_contact_info", "description": "Get the contact information based on the contact name and the key.\n", "arguments": {"name": {"description": "The name of the contact.", "type": "str", "required": true}, "key": {"description": "The key to get the information of the contact.\ncan be one of the following: \"email\", \"phone\", \"address\" \"uri\"\nif key is \"uri\", this function will return the uri of the contact that can be \nused to edit the contact.", "type": "str", "required": true}}, "returns": {"description": "The information of the contact based on the key.", "type": "str"}, "examples": ["get_contact_info(\"John Doe\", \"email\")\nthis will return the email of the contact named \"John Doe\""]}]}
{"query": "Could you find out Christopher Nolan's email for me?", "answers": [{"id": 0, "name": "get_contact_info", "arguments": {"name": "Christopher Nolan", "key": "email"}}], "tools": [{"name": "get_contact_info", "description": "Get the contact information based on the contact name and the key.\n", "arguments": {"name": {"description": "The name of the contact.", "type": "str", "required": true}, "key": {"description": "The key to get the information of the contact.\ncan be one of the following: \"email\", \"phone\", \"address\" \"uri\"\nif key is \"uri\", this function will return the uri of the contact that can be \nused to edit the contact.", "type": "str", "required": true}}, "returns": {"description": "The information of the contact based on the key.", "type": "str"}, "examples": ["get_contact_info(\"John Doe\", \"email\")\nthis will return the email of the contact named \"John Doe\""]}]}
{"query": "What postal address is registered under the contact named Sarah Parker?", "answers": [{"id": 0, "name": "get_contact_info", "arguments": {"name": "Sarah Parker", "key": "address"}}], "tools": [{"name": "get_contact_info", "description": "Get the contact information based on the contact name and the key.\n", "arguments": {"name": {"description": "The name of the contact.", "type": "str", "required": true}, "key": {"description": "The key to get the information of the contact.\ncan be one of the following: \"email\", \"phone\", \"address\" \"uri\"\nif key is \"uri\", this function will return the uri of the contact that can be \nused to edit the contact.", "type": "str", "required": true}}, "returns": {"description": "The information of the contact based on the key.", "type": "str"}, "examples": ["get_contact_info(\"John Doe\", \"email\")\nthis will return the email of the contact named \"John Doe\""]}]}
{"query": "Obtain the contact URI for Jenny Adams, I need to update her profile.", "answers": [{"id": 0, "name": "get_contact_info", "arguments": {"name": "Jenny Adams", "key": "uri"}}], "tools": [{"name": "get_contact_info", "description": "Get the contact information based on the contact name and the key.\n", "arguments": {"name": {"description": "The name of the contact.", "type": "str", "required": true}, "key": {"description": "The key to get the information of the contact.\ncan be one of the following: \"email\", \"phone\", \"address\" \"uri\"\nif key is \"uri\", this function will return the uri of the contact that can be \nused to edit the contact.", "type": "str", "required": true}}, "returns": {"description": "The information of the contact based on the key.", "type": "str"}, "examples": ["get_contact_info(\"John Doe\", \"email\")\nthis will return the email of the contact named \"John Doe\""]}]}
{"query": "Locate the phone contact for Daniel McCoy.", "answers": [{"id": 0, "name": "get_contact_info", "arguments": {"name": "Daniel McCoy", "key": "phone"}}], "tools": [{"name": "get_contact_info", "description": "Get the contact information based on the contact name and the key.\n", "arguments": {"name": {"description": "The name of the contact.", "type": "str", "required": true}, "key": {"description": "The key to get the information of the contact.\ncan be one of the following: \"email\", \"phone\", \"address\" \"uri\"\nif key is \"uri\", this function will return the uri of the contact that can be \nused to edit the contact.", "type": "str", "required": true}}, "returns": {"description": "The information of the contact based on the key.", "type": "str"}, "examples": ["get_contact_info(\"John Doe\", \"email\")\nthis will return the email of the contact named \"John Doe\""]}]}
{"query": "How do I contact Mia Wong? I only need her email.", "answers": [{"id": 0, "name": "get_contact_info", "arguments": {"name": "Mia Wong", "key": "email"}}], "tools": [{"name": "get_contact_info", "description": "Get the contact information based on the contact name and the key.\n", "arguments": {"name": {"description": "The name of the contact.", "type": "str", "required": true}, "key": {"description": "The key to get the information of the contact.\ncan be one of the following: \"email\", \"phone\", \"address\" \"uri\"\nif key is \"uri\", this function will return the uri of the contact that can be \nused to edit the contact.", "type": "str", "required": true}}, "returns": {"description": "The information of the contact based on the key.", "type": "str"}, "examples": ["get_contact_info(\"John Doe\", \"email\")\nthis will return the email of the contact named \"John Doe\""]}]}
{"query": "Source the telephone number for George Kerns, please.", "answers": [{"id": 0, "name": "get_contact_info", "arguments": {"name": "George Kerns", "key": "phone"}}], "tools": [{"name": "get_contact_info", "description": "Get the contact information based on the contact name and the key.\n", "arguments": {"name": {"description": "The name of the contact.", "type": "str", "required": true}, "key": {"description": "The key to get the information of the contact.\ncan be one of the following: \"email\", \"phone\", \"address\" \"uri\"\nif key is \"uri\", this function will return the uri of the contact that can be \nused to edit the contact.", "type": "str", "required": true}}, "returns": {"description": "The information of the contact based on the key.", "type": "str"}, "examples": ["get_contact_info(\"John Doe\", \"email\")\nthis will return the email of the contact named \"John Doe\""]}]}
{"query": "Find out the main office address for the contact named Lisa Ray.", "answers": [{"id": 0, "name": "get_contact_info", "arguments": {"name": "Lisa Ray", "key": "address"}}], "tools": [{"name": "get_contact_info", "description": "Get the contact information based on the contact name and the key.\n", "arguments": {"name": {"description": "The name of the contact.", "type": "str", "required": true}, "key": {"description": "The key to get the information of the contact.\ncan be one of the following: \"email\", \"phone\", \"address\" \"uri\"\nif key is \"uri\", this function will return the uri of the contact that can be \nused to edit the contact.", "type": "str", "required": true}}, "returns": {"description": "The information of the contact based on the key.", "type": "str"}, "examples": ["get_contact_info(\"John Doe\", \"email\")\nthis will return the email of the contact named \"John Doe\""]}]}
{"query": "Please provide the URI needed to modify the contact details of Mark Antoine.", "answers": [{"id": 0, "name": "get_contact_info", "arguments": {"name": "Mark Antoine", "key": "uri"}}], "tools": [{"name": "get_contact_info", "description": "Get the contact information based on the contact name and the key.\n", "arguments": {"name": {"description": "The name of the contact.", "type": "str", "required": true}, "key": {"description": "The key to get the information of the contact.\ncan be one of the following: \"email\", \"phone\", \"address\" \"uri\"\nif key is \"uri\", this function will return the uri of the contact that can be \nused to edit the contact.", "type": "str", "required": true}}, "returns": {"description": "The information of the contact based on the key.", "type": "str"}, "examples": ["get_contact_info(\"John Doe\", \"email\")\nthis will return the email of the contact named \"John Doe\""]}]}
{"query": "I'd like the email of the contact Fred Astaire; can you pull this up?", "answers": [{"id": 0, "name": "get_contact_info", "arguments": {"name": "Fred Astaire", "key": "email"}}], "tools": [{"name": "get_contact_info", "description": "Get the contact information based on the contact name and the key.\n", "arguments": {"name": {"description": "The name of the contact.", "type": "str", "required": true}, "key": {"description": "The key to get the information of the contact.\ncan be one of the following: \"email\", \"phone\", \"address\" \"uri\"\nif key is \"uri\", this function will return the uri of the contact that can be \nused to edit the contact.", "type": "str", "required": true}}, "returns": {"description": "The information of the contact based on the key.", "type": "str"}, "examples": ["get_contact_info(\"John Doe\", \"email\")\nthis will return the email of the contact named \"John Doe\""]}]}
{"query": "What's the current address for Olivia Newton?", "answers": [{"id": 0, "name": "get_contact_info", "arguments": {"name": "Olivia Newton", "key": "address"}}], "tools": [{"name": "get_contact_info", "description": "Get the contact information based on the contact name and the key.\n", "arguments": {"name": {"description": "The name of the contact.", "type": "str", "required": true}, "key": {"description": "The key to get the information of the contact.\ncan be one of the following: \"email\", \"phone\", \"address\" \"uri\"\nif key is \"uri\", this function will return the uri of the contact that can be \nused to edit the contact.", "type": "str", "required": true}}, "returns": {"description": "The information of the contact based on the key.", "type": "str"}, "examples": ["get_contact_info(\"John Doe\", \"email\")\nthis will return the email of the contact named \"John Doe\""]}]}
{"query": "Could you retrieve the URI link to edit the contact details for David Beckham?", "answers": [{"id": 0, "name": "get_contact_info", "arguments": {"name": "David Beckham", "key": "uri"}}], "tools": [{"name": "get_contact_info", "description": "Get the contact information based on the contact name and the key.\n", "arguments": {"name": {"description": "The name of the contact.", "type": "str", "required": true}, "key": {"description": "The key to get the information of the contact.\ncan be one of the following: \"email\", \"phone\", \"address\" \"uri\"\nif key is \"uri\", this function will return the uri of the contact that can be \nused to edit the contact.", "type": "str", "required": true}}, "returns": {"description": "The information of the contact based on the key.", "type": "str"}, "examples": ["get_contact_info(\"John Doe\", \"email\")\nthis will return the email of the contact named \"John Doe\""]}]}
{"query": "Can you extract the phone number for the contact with URI 'content://contacts/people/123'?", "answers": [{"id": 0, "name": "get_contact_info_from_uri", "arguments": {"contact_uri": "content://contacts/people/123", "key": "phone"}}], "tools": [{"name": "get_contact_info_from_uri", "description": "Get the contact information based on the contact URI and the key.\n", "arguments": {"contact_uri": {"description": "The URI of the contact.", "type": "str", "required": true}, "key": {"description": "The key to get the information of the contact.\ncan be one of the following: \"email\", \"phone\", \"address\"", "type": "str", "required": true}}, "returns": {"description": "The information of the contact based on the key.", "type": "str"}, "examples": ["get_contact_info_from_uri(\"content://com.android.contacts/data/9\", \"email\")\nthis will return the email of the contact with URI \"content://com.android.contacts/data/9\""]}]}
{"query": "What is the email address associated with the contact found at this URI: 'content://contacts/people/456'?", "answers": [{"id": 0, "name": "get_contact_info_from_uri", "arguments": {"contact_uri": "content://contacts/people/456", "key": "email"}}], "tools": [{"name": "get_contact_info_from_uri", "description": "Get the contact information based on the contact URI and the key.\n", "arguments": {"contact_uri": {"description": "The URI of the contact.", "type": "str", "required": true}, "key": {"description": "The key to get the information of the contact.\ncan be one of the following: \"email\", \"phone\", \"address\"", "type": "str", "required": true}}, "returns": {"description": "The information of the contact based on the key.", "type": "str"}, "examples": ["get_contact_info_from_uri(\"content://com.android.contacts/data/9\", \"email\")\nthis will return the email of the contact with URI \"content://com.android.contacts/data/9\""]}]}
{"query": "I need to confirm the street address for the contact located at 'content://contacts/people/789'. Could you get that for me?", "answers": [{"id": 0, "name": "get_contact_info_from_uri", "arguments": {"contact_uri": "content://contacts/people/789", "key": "address"}}], "tools": [{"name": "get_contact_info_from_uri", "description": "Get the contact information based on the contact URI and the key.\n", "arguments": {"contact_uri": {"description": "The URI of the contact.", "type": "str", "required": true}, "key": {"description": "The key to get the information of the contact.\ncan be one of the following: \"email\", \"phone\", \"address\"", "type": "str", "required": true}}, "returns": {"description": "The information of the contact based on the key.", "type": "str"}, "examples": ["get_contact_info_from_uri(\"content://com.android.contacts/data/9\", \"email\")\nthis will return the email of the contact with URI \"content://com.android.contacts/data/9\""]}]}
{"query": "Retrieve the email for the contact with the URI 'content://com.android.contacts/data/10'.", "answers": [{"id": 0, "name": "get_contact_info_from_uri", "arguments": {"contact_uri": "content://com.android.contacts/data/10", "key": "email"}}], "tools": [{"name": "get_contact_info_from_uri", "description": "Get the contact information based on the contact URI and the key.\n", "arguments": {"contact_uri": {"description": "The URI of the contact.", "type": "str", "required": true}, "key": {"description": "The key to get the information of the contact.\ncan be one of the following: \"email\", \"phone\", \"address\"", "type": "str", "required": true}}, "returns": {"description": "The information of the contact based on the key.", "type": "str"}, "examples": ["get_contact_info_from_uri(\"content://com.android.contacts/data/9\", \"email\")\nthis will return the email of the contact with URI \"content://com.android.contacts/data/9\""]}]}
{"query": "Fetch the phone information from 'content://contacts/data/15'.", "answers": [{"id": 0, "name": "get_contact_info_from_uri", "arguments": {"contact_uri": "content://contacts/data/15", "key": "phone"}}], "tools": [{"name": "get_contact_info_from_uri", "description": "Get the contact information based on the contact URI and the key.\n", "arguments": {"contact_uri": {"description": "The URI of the contact.", "type": "str", "required": true}, "key": {"description": "The key to get the information of the contact.\ncan be one of the following: \"email\", \"phone\", \"address\"", "type": "str", "required": true}}, "returns": {"description": "The information of the contact based on the key.", "type": "str"}, "examples": ["get_contact_info_from_uri(\"content://com.android.contacts/data/9\", \"email\")\nthis will return the email of the contact with URI \"content://com.android.contacts/data/9\""]}]}
{"query": "I need the address details for the URI 'content://services/contact/301'. Can you find these?", "answers": [{"id": 0, "name": "get_contact_info_from_uri", "arguments": {"contact_uri": "content://services/contact/301", "key": "address"}}], "tools": [{"name": "get_contact_info_from_uri", "description": "Get the contact information based on the contact URI and the key.\n", "arguments": {"contact_uri": {"description": "The URI of the contact.", "type": "str", "required": true}, "key": {"description": "The key to get the information of the contact.\ncan be one of the following: \"email\", \"phone\", \"address\"", "type": "str", "required": true}}, "returns": {"description": "The information of the contact based on the key.", "type": "str"}, "examples": ["get_contact_info_from_uri(\"content://com.android.contacts/data/9\", \"email\")\nthis will return the email of the contact with URI \"content://com.android.contacts/data/9\""]}]}
{"query": "Please provide the phone number of the contact found at 'content://com.android.providers.contacts/12'.", "answers": [{"id": 0, "name": "get_contact_info_from_uri", "arguments": {"contact_uri": "content://com.android.providers.contacts/12", "key": "phone"}}], "tools": [{"name": "get_contact_info_from_uri", "description": "Get the contact information based on the contact URI and the key.\n", "arguments": {"contact_uri": {"description": "The URI of the contact.", "type": "str", "required": true}, "key": {"description": "The key to get the information of the contact.\ncan be one of the following: \"email\", \"phone\", \"address\"", "type": "str", "required": true}}, "returns": {"description": "The information of the contact based on the key.", "type": "str"}, "examples": ["get_contact_info_from_uri(\"content://com.android.contacts/data/9\", \"email\")\nthis will return the email of the contact with URI \"content://com.android.contacts/data/9\""]}]}
{"query": "What's the address for the contact at URI 'content://com.android.contacts/statuses/21'?", "answers": [{"id": 0, "name": "get_contact_info_from_uri", "arguments": {"contact_uri": "content://com.android.contacts/statuses/21", "key": "address"}}], "tools": [{"name": "get_contact_info_from_uri", "description": "Get the contact information based on the contact URI and the key.\n", "arguments": {"contact_uri": {"description": "The URI of the contact.", "type": "str", "required": true}, "key": {"description": "The key to get the information of the contact.\ncan be one of the following: \"email\", \"phone\", \"address\"", "type": "str", "required": true}}, "returns": {"description": "The information of the contact based on the key.", "type": "str"}, "examples": ["get_contact_info_from_uri(\"content://com.android.contacts/data/9\", \"email\")\nthis will return the email of the contact with URI \"content://com.android.contacts/data/9\""]}]}
{"query": "Show me the email linked to the contact URI 'content://contacts/identities/33'.", "answers": [{"id": 0, "name": "get_contact_info_from_uri", "arguments": {"contact_uri": "content://contacts/identities/33", "key": "email"}}], "tools": [{"name": "get_contact_info_from_uri", "description": "Get the contact information based on the contact URI and the key.\n", "arguments": {"contact_uri": {"description": "The URI of the contact.", "type": "str", "required": true}, "key": {"description": "The key to get the information of the contact.\ncan be one of the following: \"email\", \"phone\", \"address\"", "type": "str", "required": true}}, "returns": {"description": "The information of the contact based on the key.", "type": "str"}, "examples": ["get_contact_info_from_uri(\"content://com.android.contacts/data/9\", \"email\")\nthis will return the email of the contact with URI \"content://com.android.contacts/data/9\""]}]}
{"query": "Could you get the email from the URI provided, 'content://services/contact/data/251'?", "answers": [{"id": 0, "name": "get_contact_info_from_uri", "arguments": {"contact_uri": "content://services/contact/data/251", "key": "email"}}], "tools": [{"name": "get_contact_info_from_uri", "description": "Get the contact information based on the contact URI and the key.\n", "arguments": {"contact_uri": {"description": "The URI of the contact.", "type": "str", "required": true}, "key": {"description": "The key to get the information of the contact.\ncan be one of the following: \"email\", \"phone\", \"address\"", "type": "str", "required": true}}, "returns": {"description": "The information of the contact based on the key.", "type": "str"}, "examples": ["get_contact_info_from_uri(\"content://com.android.contacts/data/9\", \"email\")\nthis will return the email of the contact with URI \"content://com.android.contacts/data/9\""]}]}
{"query": "Extract the address for the URI 'content://phonebook/data/41'.", "answers": [{"id": 0, "name": "get_contact_info_from_uri", "arguments": {"contact_uri": "content://phonebook/data/41", "key": "address"}}], "tools": [{"name": "get_contact_info_from_uri", "description": "Get the contact information based on the contact URI and the key.\n", "arguments": {"contact_uri": {"description": "The URI of the contact.", "type": "str", "required": true}, "key": {"description": "The key to get the information of the contact.\ncan be one of the following: \"email\", \"phone\", \"address\"", "type": "str", "required": true}}, "returns": {"description": "The information of the contact based on the key.", "type": "str"}, "examples": ["get_contact_info_from_uri(\"content://com.android.contacts/data/9\", \"email\")\nthis will return the email of the contact with URI \"content://com.android.contacts/data/9\""]}]}
{"query": "Please find the telephone number for the contact saved under the URI 'content://database/people/900'.", "answers": [{"id": 0, "name": "get_contact_info_from_uri", "arguments": {"contact_uri": "content://database/people/900", "key": "phone"}}], "tools": [{"name": "get_contact_info_from_uri", "description": "Get the contact information based on the contact URI and the key.\n", "arguments": {"contact_uri": {"description": "The URI of the contact.", "type": "str", "required": true}, "key": {"description": "The key to get the information of the contact.\ncan be one of the following: \"email\", \"phone\", \"address\"", "type": "str", "required": true}}, "returns": {"description": "The information of the contact based on the key.", "type": "str"}, "examples": ["get_contact_info_from_uri(\"content://com.android.contacts/data/9\", \"email\")\nthis will return the email of the contact with URI \"content://com.android.contacts/data/9\""]}]}
{"query": "Need the email for the individual at 'content://users/contacts/100'. What is it?", "answers": [{"id": 0, "name": "get_contact_info_from_uri", "arguments": {"contact_uri": "content://users/contacts/100", "key": "email"}}], "tools": [{"name": "get_contact_info_from_uri", "description": "Get the contact information based on the contact URI and the key.\n", "arguments": {"contact_uri": {"description": "The URI of the contact.", "type": "str", "required": true}, "key": {"description": "The key to get the information of the contact.\ncan be one of the following: \"email\", \"phone\", \"address\"", "type": "str", "required": true}}, "returns": {"description": "The information of the contact based on the key.", "type": "str"}, "examples": ["get_contact_info_from_uri(\"content://com.android.contacts/data/9\", \"email\")\nthis will return the email of the contact with URI \"content://com.android.contacts/data/9\""]}]}
{"query": "Can you check and provide the address of the contact at this URI: 'content://com.contacts.data/82'?", "answers": [{"id": 0, "name": "get_contact_info_from_uri", "arguments": {"contact_uri": "content://com.contacts.data/82", "key": "address"}}], "tools": [{"name": "get_contact_info_from_uri", "description": "Get the contact information based on the contact URI and the key.\n", "arguments": {"contact_uri": {"description": "The URI of the contact.", "type": "str", "required": true}, "key": {"description": "The key to get the information of the contact.\ncan be one of the following: \"email\", \"phone\", \"address\"", "type": "str", "required": true}}, "returns": {"description": "The information of the contact based on the key.", "type": "str"}, "examples": ["get_contact_info_from_uri(\"content://com.android.contacts/data/9\", \"email\")\nthis will return the email of the contact with URI \"content://com.android.contacts/data/9\""]}]}
{"query": "Find me the telephone contact details from 'content://info/contacts/details/502'.", "answers": [{"id": 0, "name": "get_contact_info_from_uri", "arguments": {"contact_uri": "content://info/contacts/details/502", "key": "phone"}}], "tools": [{"name": "get_contact_info_from_uri", "description": "Get the contact information based on the contact URI and the key.\n", "arguments": {"contact_uri": {"description": "The URI of the contact.", "type": "str", "required": true}, "key": {"description": "The key to get the information of the contact.\ncan be one of the following: \"email\", \"phone\", \"address\"", "type": "str", "required": true}}, "returns": {"description": "The information of the contact based on the key.", "type": "str"}, "examples": ["get_contact_info_from_uri(\"content://com.android.contacts/data/9\", \"email\")\nthis will return the email of the contact with URI \"content://com.android.contacts/data/9\""]}]}
{"query": "How can I change my device settings to connect new Bluetooth devices?", "answers": [{"id": 0, "name": "open_settings", "arguments": {"setting_type": "bluetooth"}}], "tools": [{"name": "open_settings", "description": "Opens a specific settings screen on the device.\n\nThis function allows you to open various system settings screens,\nproviding quick access to different device configuration options.", "arguments": {"setting_type": {"description": "The type of settings screen to open.\nPossible values are:\n- \"general\": General settings (default)\n- \"wireless\": Wireless & network settings\n- \"airplane_mode\": Airplane mode settings\n- \"wifi\": Wi-Fi settings\n- \"apn\": APN settings\n- \"bluetooth\": Bluetooth settings\n- \"date\": Date & time settings\n- \"locale\": Language & input settings\n- \"input_method\": Input method settings\n- \"display\": Display settings\n- \"security\": Security settings\n- \"location\": Location settings\n- \"internal_storage\": Internal storage settings\n- \"memory_card\": Memory card settings", "type": "str", "required": false, "default": "general"}}, "examples": ["# Open general settings\nopen_settings()\n\n# Open Wi-Fi settings\nopen_settings(\"wifi\")\n\n# Open Bluetooth settings\nopen_settings(\"bluetooth\")"]}]}
{"query": "I need to adjust the time on my phone. Which settings should I open?", "answers": [{"id": 0, "name": "open_settings", "arguments": {"setting_type": "date"}}], "tools": [{"name": "open_settings", "description": "Opens a specific settings screen on the device.\n\nThis function allows you to open various system settings screens,\nproviding quick access to different device configuration options.", "arguments": {"setting_type": {"description": "The type of settings screen to open.\nPossible values are:\n- \"general\": General settings (default)\n- \"wireless\": Wireless & network settings\n- \"airplane_mode\": Airplane mode settings\n- \"wifi\": Wi-Fi settings\n- \"apn\": APN settings\n- \"bluetooth\": Bluetooth settings\n- \"date\": Date & time settings\n- \"locale\": Language & input settings\n- \"input_method\": Input method settings\n- \"display\": Display settings\n- \"security\": Security settings\n- \"location\": Location settings\n- \"internal_storage\": Internal storage settings\n- \"memory_card\": Memory card settings", "type": "str", "required": false, "default": "general"}}, "examples": ["# Open general settings\nopen_settings()\n\n# Open Wi-Fi settings\nopen_settings(\"wifi\")\n\n# Open Bluetooth settings\nopen_settings(\"bluetooth\")"]}]}
{"query": "Could you help me access the general settings area of my device?", "answers": [{"id": 0, "name": "open_settings", "arguments": {"setting_type": "general"}}], "tools": [{"name": "open_settings", "description": "Opens a specific settings screen on the device.\n\nThis function allows you to open various system settings screens,\nproviding quick access to different device configuration options.", "arguments": {"setting_type": {"description": "The type of settings screen to open.\nPossible values are:\n- \"general\": General settings (default)\n- \"wireless\": Wireless & network settings\n- \"airplane_mode\": Airplane mode settings\n- \"wifi\": Wi-Fi settings\n- \"apn\": APN settings\n- \"bluetooth\": Bluetooth settings\n- \"date\": Date & time settings\n- \"locale\": Language & input settings\n- \"input_method\": Input method settings\n- \"display\": Display settings\n- \"security\": Security settings\n- \"location\": Location settings\n- \"internal_storage\": Internal storage settings\n- \"memory_card\": Memory card settings", "type": "str", "required": false, "default": "general"}}, "examples": ["# Open general settings\nopen_settings()\n\n# Open Wi-Fi settings\nopen_settings(\"wifi\")\n\n# Open Bluetooth settings\nopen_settings(\"bluetooth\")"]}]}
{"query": "Activate airplane mode on my device through settings.", "answers": [{"id": 0, "name": "open_settings", "arguments": {"setting_type": "airplane_mode"}}], "tools": [{"name": "open_settings", "description": "Opens a specific settings screen on the device.\n\nThis function allows you to open various system settings screens,\nproviding quick access to different device configuration options.", "arguments": {"setting_type": {"description": "The type of settings screen to open.\nPossible values are:\n- \"general\": General settings (default)\n- \"wireless\": Wireless & network settings\n- \"airplane_mode\": Airplane mode settings\n- \"wifi\": Wi-Fi settings\n- \"apn\": APN settings\n- \"bluetooth\": Bluetooth settings\n- \"date\": Date & time settings\n- \"locale\": Language & input settings\n- \"input_method\": Input method settings\n- \"display\": Display settings\n- \"security\": Security settings\n- \"location\": Location settings\n- \"internal_storage\": Internal storage settings\n- \"memory_card\": Memory card settings", "type": "str", "required": false, "default": "general"}}, "examples": ["# Open general settings\nopen_settings()\n\n# Open Wi-Fi settings\nopen_settings(\"wifi\")\n\n# Open Bluetooth settings\nopen_settings(\"bluetooth\")"]}]}
{"query": "I'm looking to check the remaining space on my internal storage, which settings should I go to?", "answers": [{"id": 0, "name": "open_settings", "arguments": {"setting_type": "internal_storage"}}], "tools": [{"name": "open_settings", "description": "Opens a specific settings screen on the device.\n\nThis function allows you to open various system settings screens,\nproviding quick access to different device configuration options.", "arguments": {"setting_type": {"description": "The type of settings screen to open.\nPossible values are:\n- \"general\": General settings (default)\n- \"wireless\": Wireless & network settings\n- \"airplane_mode\": Airplane mode settings\n- \"wifi\": Wi-Fi settings\n- \"apn\": APN settings\n- \"bluetooth\": Bluetooth settings\n- \"date\": Date & time settings\n- \"locale\": Language & input settings\n- \"input_method\": Input method settings\n- \"display\": Display settings\n- \"security\": Security settings\n- \"location\": Location settings\n- \"internal_storage\": Internal storage settings\n- \"memory_card\": Memory card settings", "type": "str", "required": false, "default": "general"}}, "examples": ["# Open general settings\nopen_settings()\n\n# Open Wi-Fi settings\nopen_settings(\"wifi\")\n\n# Open Bluetooth settings\nopen_settings(\"bluetooth\")"]}]}
{"query": "To update the language preferences on my device, which settings screen should I open?", "answers": [{"id": 0, "name": "open_settings", "arguments": {"setting_type": "locale"}}], "tools": [{"name": "open_settings", "description": "Opens a specific settings screen on the device.\n\nThis function allows you to open various system settings screens,\nproviding quick access to different device configuration options.", "arguments": {"setting_type": {"description": "The type of settings screen to open.\nPossible values are:\n- \"general\": General settings (default)\n- \"wireless\": Wireless & network settings\n- \"airplane_mode\": Airplane mode settings\n- \"wifi\": Wi-Fi settings\n- \"apn\": APN settings\n- \"bluetooth\": Bluetooth settings\n- \"date\": Date & time settings\n- \"locale\": Language & input settings\n- \"input_method\": Input method settings\n- \"display\": Display settings\n- \"security\": Security settings\n- \"location\": Location settings\n- \"internal_storage\": Internal storage settings\n- \"memory_card\": Memory card settings", "type": "str", "required": false, "default": "general"}}, "examples": ["# Open general settings\nopen_settings()\n\n# Open Wi-Fi settings\nopen_settings(\"wifi\")\n\n# Open Bluetooth settings\nopen_settings(\"bluetooth\")"]}]}
{"query": "Assist me with accessing the mobile data network settings by opening the right screen.", "answers": [{"id": 0, "name": "open_settings", "arguments": {"setting_type": "wireless"}}], "tools": [{"name": "open_settings", "description": "Opens a specific settings screen on the device.\n\nThis function allows you to open various system settings screens,\nproviding quick access to different device configuration options.", "arguments": {"setting_type": {"description": "The type of settings screen to open.\nPossible values are:\n- \"general\": General settings (default)\n- \"wireless\": Wireless & network settings\n- \"airplane_mode\": Airplane mode settings\n- \"wifi\": Wi-Fi settings\n- \"apn\": APN settings\n- \"bluetooth\": Bluetooth settings\n- \"date\": Date & time settings\n- \"locale\": Language & input settings\n- \"input_method\": Input method settings\n- \"display\": Display settings\n- \"security\": Security settings\n- \"location\": Location settings\n- \"internal_storage\": Internal storage settings\n- \"memory_card\": Memory card settings", "type": "str", "required": false, "default": "general"}}, "examples": ["# Open general settings\nopen_settings()\n\n# Open Wi-Fi settings\nopen_settings(\"wifi\")\n\n# Open Bluetooth settings\nopen_settings(\"bluetooth\")"]}]}
{"query": "I want to manage Wi-Fi networks, which settings should I access?", "answers": [{"id": 0, "name": "open_settings", "arguments": {"setting_type": "wifi"}}], "tools": [{"name": "open_settings", "description": "Opens a specific settings screen on the device.\n\nThis function allows you to open various system settings screens,\nproviding quick access to different device configuration options.", "arguments": {"setting_type": {"description": "The type of settings screen to open.\nPossible values are:\n- \"general\": General settings (default)\n- \"wireless\": Wireless & network settings\n- \"airplane_mode\": Airplane mode settings\n- \"wifi\": Wi-Fi settings\n- \"apn\": APN settings\n- \"bluetooth\": Bluetooth settings\n- \"date\": Date & time settings\n- \"locale\": Language & input settings\n- \"input_method\": Input method settings\n- \"display\": Display settings\n- \"security\": Security settings\n- \"location\": Location settings\n- \"internal_storage\": Internal storage settings\n- \"memory_card\": Memory card settings", "type": "str", "required": false, "default": "general"}}, "examples": ["# Open general settings\nopen_settings()\n\n# Open Wi-Fi settings\nopen_settings(\"wifi\")\n\n# Open Bluetooth settings\nopen_settings(\"bluetooth\")"]}]}
{"query": "Can you guide me to the display settings to adjust my screen brightness?", "answers": [{"id": 0, "name": "open_settings", "arguments": {"setting_type": "display"}}], "tools": [{"name": "open_settings", "description": "Opens a specific settings screen on the device.\n\nThis function allows you to open various system settings screens,\nproviding quick access to different device configuration options.", "arguments": {"setting_type": {"description": "The type of settings screen to open.\nPossible values are:\n- \"general\": General settings (default)\n- \"wireless\": Wireless & network settings\n- \"airplane_mode\": Airplane mode settings\n- \"wifi\": Wi-Fi settings\n- \"apn\": APN settings\n- \"bluetooth\": Bluetooth settings\n- \"date\": Date & time settings\n- \"locale\": Language & input settings\n- \"input_method\": Input method settings\n- \"display\": Display settings\n- \"security\": Security settings\n- \"location\": Location settings\n- \"internal_storage\": Internal storage settings\n- \"memory_card\": Memory card settings", "type": "str", "required": false, "default": "general"}}, "examples": ["# Open general settings\nopen_settings()\n\n# Open Wi-Fi settings\nopen_settings(\"wifi\")\n\n# Open Bluetooth settings\nopen_settings(\"bluetooth\")"]}]}
{"query": "I need to configure additional security options, such as passwords and encryption. Please open the appropriate settings.", "answers": [{"id": 0, "name": "open_settings", "arguments": {"setting_type": "security"}}], "tools": [{"name": "open_settings", "description": "Opens a specific settings screen on the device.\n\nThis function allows you to open various system settings screens,\nproviding quick access to different device configuration options.", "arguments": {"setting_type": {"description": "The type of settings screen to open.\nPossible values are:\n- \"general\": General settings (default)\n- \"wireless\": Wireless & network settings\n- \"airplane_mode\": Airplane mode settings\n- \"wifi\": Wi-Fi settings\n- \"apn\": APN settings\n- \"bluetooth\": Bluetooth settings\n- \"date\": Date & time settings\n- \"locale\": Language & input settings\n- \"input_method\": Input method settings\n- \"display\": Display settings\n- \"security\": Security settings\n- \"location\": Location settings\n- \"internal_storage\": Internal storage settings\n- \"memory_card\": Memory card settings", "type": "str", "required": false, "default": "general"}}, "examples": ["# Open general settings\nopen_settings()\n\n# Open Wi-Fi settings\nopen_settings(\"wifi\")\n\n# Open Bluetooth settings\nopen_settings(\"bluetooth\")"]}]}
{"query": "Show me how to access the settings where I can modify the input method for my device keyboard.", "answers": [{"id": 0, "name": "open_settings", "arguments": {"setting_type": "input_method"}}], "tools": [{"name": "open_settings", "description": "Opens a specific settings screen on the device.\n\nThis function allows you to open various system settings screens,\nproviding quick access to different device configuration options.", "arguments": {"setting_type": {"description": "The type of settings screen to open.\nPossible values are:\n- \"general\": General settings (default)\n- \"wireless\": Wireless & network settings\n- \"airplane_mode\": Airplane mode settings\n- \"wifi\": Wi-Fi settings\n- \"apn\": APN settings\n- \"bluetooth\": Bluetooth settings\n- \"date\": Date & time settings\n- \"locale\": Language & input settings\n- \"input_method\": Input method settings\n- \"display\": Display settings\n- \"security\": Security settings\n- \"location\": Location settings\n- \"internal_storage\": Internal storage settings\n- \"memory_card\": Memory card settings", "type": "str", "required": false, "default": "general"}}, "examples": ["# Open general settings\nopen_settings()\n\n# Open Wi-Fi settings\nopen_settings(\"wifi\")\n\n# Open Bluetooth settings\nopen_settings(\"bluetooth\")"]}]}
{"query": "Direct me to the location services configuration in my device settings.", "answers": [{"id": 0, "name": "open_settings", "arguments": {"setting_type": "location"}}], "tools": [{"name": "open_settings", "description": "Opens a specific settings screen on the device.\n\nThis function allows you to open various system settings screens,\nproviding quick access to different device configuration options.", "arguments": {"setting_type": {"description": "The type of settings screen to open.\nPossible values are:\n- \"general\": General settings (default)\n- \"wireless\": Wireless & network settings\n- \"airplane_mode\": Airplane mode settings\n- \"wifi\": Wi-Fi settings\n- \"apn\": APN settings\n- \"bluetooth\": Bluetooth settings\n- \"date\": Date & time settings\n- \"locale\": Language & input settings\n- \"input_method\": Input method settings\n- \"display\": Display settings\n- \"security\": Security settings\n- \"location\": Location settings\n- \"internal_storage\": Internal storage settings\n- \"memory_card\": Memory card settings", "type": "str", "required": false, "default": "general"}}, "examples": ["# Open general settings\nopen_settings()\n\n# Open Wi-Fi settings\nopen_settings(\"wifi\")\n\n# Open Bluetooth settings\nopen_settings(\"bluetooth\")"]}]}
{"query": "Please open settings where I can check and alter my device's APN configurations.", "answers": [{"id": 0, "name": "open_settings", "arguments": {"setting_type": "apn"}}], "tools": [{"name": "open_settings", "description": "Opens a specific settings screen on the device.\n\nThis function allows you to open various system settings screens,\nproviding quick access to different device configuration options.", "arguments": {"setting_type": {"description": "The type of settings screen to open.\nPossible values are:\n- \"general\": General settings (default)\n- \"wireless\": Wireless & network settings\n- \"airplane_mode\": Airplane mode settings\n- \"wifi\": Wi-Fi settings\n- \"apn\": APN settings\n- \"bluetooth\": Bluetooth settings\n- \"date\": Date & time settings\n- \"locale\": Language & input settings\n- \"input_method\": Input method settings\n- \"display\": Display settings\n- \"security\": Security settings\n- \"location\": Location settings\n- \"internal_storage\": Internal storage settings\n- \"memory_card\": Memory card settings", "type": "str", "required": false, "default": "general"}}, "examples": ["# Open general settings\nopen_settings()\n\n# Open Wi-Fi settings\nopen_settings(\"wifi\")\n\n# Open Bluetooth settings\nopen_settings(\"bluetooth\")"]}]}
{"query": "I need to find out how much space is left on my memory card. What settings should I open?", "answers": [{"id": 0, "name": "open_settings", "arguments": {"setting_type": "memory_card"}}], "tools": [{"name": "open_settings", "description": "Opens a specific settings screen on the device.\n\nThis function allows you to open various system settings screens,\nproviding quick access to different device configuration options.", "arguments": {"setting_type": {"description": "The type of settings screen to open.\nPossible values are:\n- \"general\": General settings (default)\n- \"wireless\": Wireless & network settings\n- \"airplane_mode\": Airplane mode settings\n- \"wifi\": Wi-Fi settings\n- \"apn\": APN settings\n- \"bluetooth\": Bluetooth settings\n- \"date\": Date & time settings\n- \"locale\": Language & input settings\n- \"input_method\": Input method settings\n- \"display\": Display settings\n- \"security\": Security settings\n- \"location\": Location settings\n- \"internal_storage\": Internal storage settings\n- \"memory_card\": Memory card settings", "type": "str", "required": false, "default": "general"}}, "examples": ["# Open general settings\nopen_settings()\n\n# Open Wi-Fi settings\nopen_settings(\"wifi\")\n\n# Open Bluetooth settings\nopen_settings(\"bluetooth\")"]}]}
{"query": "Can you help me to navigate to my device's network and wireless settings?", "answers": [{"id": 0, "name": "open_settings", "arguments": {"setting_type": "wireless"}}], "tools": [{"name": "open_settings", "description": "Opens a specific settings screen on the device.\n\nThis function allows you to open various system settings screens,\nproviding quick access to different device configuration options.", "arguments": {"setting_type": {"description": "The type of settings screen to open.\nPossible values are:\n- \"general\": General settings (default)\n- \"wireless\": Wireless & network settings\n- \"airplane_mode\": Airplane mode settings\n- \"wifi\": Wi-Fi settings\n- \"apn\": APN settings\n- \"bluetooth\": Bluetooth settings\n- \"date\": Date & time settings\n- \"locale\": Language & input settings\n- \"input_method\": Input method settings\n- \"display\": Display settings\n- \"security\": Security settings\n- \"location\": Location settings\n- \"internal_storage\": Internal storage settings\n- \"memory_card\": Memory card settings", "type": "str", "required": false, "default": "general"}}, "examples": ["# Open general settings\nopen_settings()\n\n# Open Wi-Fi settings\nopen_settings(\"wifi\")\n\n# Open Bluetooth settings\nopen_settings(\"bluetooth\")"]}]}
{"query": "Could you show me the location of the Eiffel Tower on the map?", "answers": [{"id": 0, "name": "search_location", "arguments": {"query": "Eiffel Tower"}}], "tools": [{"name": "search_location", "description": "Search for a location using a query string in a map application for user.\n", "arguments": {"query": {"description": "The search query string to find a location.", "type": "str", "required": true}}}]}
{"query": "I need directions to Tokyo Tower, can you help find it?", "answers": [{"id": 0, "name": "search_location", "arguments": {"query": "Tokyo Tower"}}], "tools": [{"name": "search_location", "description": "Search for a location using a query string in a map application for user.\n", "arguments": {"query": {"description": "The search query string to find a location.", "type": "str", "required": true}}}]}
{"query": "Please locate the nearest Starbucks café for me.", "answers": [{"id": 0, "name": "search_location", "arguments": {"query": "nearest Starbucks café"}}], "tools": [{"name": "search_location", "description": "Search for a location using a query string in a map application for user.\n", "arguments": {"query": {"description": "The search query string to find a location.", "type": "str", "required": true}}}]}
{"query": "Where am I able to find Mount Everest on a map?", "answers": [{"id": 0, "name": "search_location", "arguments": {"query": "Mount Everest"}}], "tools": [{"name": "search_location", "description": "Search for a location using a query string in a map application for user.\n", "arguments": {"query": {"description": "The search query string to find a location.", "type": "str", "required": true}}}]}
{"query": "Help me track down the Great Wall of China's location.", "answers": [{"id": 0, "name": "search_location", "arguments": {"query": "Great Wall of China"}}], "tools": [{"name": "search_location", "description": "Search for a location using a query string in a map application for user.\n", "arguments": {"query": {"description": "The search query string to find a location.", "type": "str", "required": true}}}]}
{"query": "I'm looking for the main branch of the New York Public Library.", "answers": [{"id": 0, "name": "search_location", "arguments": {"query": "main branch of the New York Public Library"}}], "tools": [{"name": "search_location", "description": "Search for a location using a query string in a map application for user.\n", "arguments": {"query": {"description": "The search query string to find a location.", "type": "str", "required": true}}}]}
{"query": "Can you pinpoint the whereabouts of Harvard University on the map for me?", "answers": [{"id": 0, "name": "search_location", "arguments": {"query": "Harvard University"}}], "tools": [{"name": "search_location", "description": "Search for a location using a query string in a map application for user.\n", "arguments": {"query": {"description": "The search query string to find a location.", "type": "str", "required": true}}}]}
{"query": "Show me the position of Silicon Valley on a detailed map, please.", "answers": [{"id": 0, "name": "search_location", "arguments": {"query": "Silicon Valley"}}], "tools": [{"name": "search_location", "description": "Search for a location using a query string in a map application for user.\n", "arguments": {"query": {"description": "The search query string to find a location.", "type": "str", "required": true}}}]}
{"query": "Find the exact locality of the Statue of Liberty.", "answers": [{"id": 0, "name": "search_location", "arguments": {"query": "Statue of Liberty"}}], "tools": [{"name": "search_location", "description": "Search for a location using a query string in a map application for user.\n", "arguments": {"query": {"description": "The search query string to find a location.", "type": "str", "required": true}}}]}
{"query": "Look up the current position of the Louvre Museum on a map for me.", "answers": [{"id": 0, "name": "search_location", "arguments": {"query": "Louvre Museum"}}], "tools": [{"name": "search_location", "description": "Search for a location using a query string in a map application for user.\n", "arguments": {"query": {"description": "The search query string to find a location.", "type": "str", "required": true}}}]}
{"query": "Identify where I can find Alcatraz Island using a map.", "answers": [{"id": 0, "name": "search_location", "arguments": {"query": "Alcatraz Island"}}], "tools": [{"name": "search_location", "description": "Search for a location using a query string in a map application for user.\n", "arguments": {"query": {"description": "The search query string to find a location.", "type": "str", "required": true}}}]}
{"query": "Help me find the geographic location of Heathrow Airport on a map.", "answers": [{"id": 0, "name": "search_location", "arguments": {"query": "Heathrow Airport"}}], "tools": [{"name": "search_location", "description": "Search for a location using a query string in a map application for user.\n", "arguments": {"query": {"description": "The search query string to find a location.", "type": "str", "required": true}}}]}
{"query": "Could you locate the Sahara Desert region for me on the map?", "answers": [{"id": 0, "name": "search_location", "arguments": {"query": "Sahara Desert"}}], "tools": [{"name": "search_location", "description": "Search for a location using a query string in a map application for user.\n", "arguments": {"query": {"description": "The search query string to find a location.", "type": "str", "required": true}}}]}
{"query": "Can you guide me to the location of Yellowstone National Park?", "answers": [{"id": 0, "name": "search_location", "arguments": {"query": "Yellowstone National Park"}}], "tools": [{"name": "search_location", "description": "Search for a location using a query string in a map application for user.\n", "arguments": {"query": {"description": "The search query string to find a location.", "type": "str", "required": true}}}]}
{"query": "Show me on the map where Machu Picchu is located, please.", "answers": [{"id": 0, "name": "search_location", "arguments": {"query": "Machu Picchu"}}], "tools": [{"name": "search_location", "description": "Search for a location using a query string in a map application for user.\n", "arguments": {"query": {"description": "The search query string to find a location.", "type": "str", "required": true}}}]}
{"query": "Could you send an email to janedoe@example.com with the subject 'Meeting Schedule' detailing the timing and agenda for next week's project discussion?", "answers": [{"id": 0, "name": "send_email", "arguments": {"to": ["janedoe@example.com"], "subject": "Meeting Schedule", "body": "Please find the details for next week's project discussion including timing and agenda."}}], "tools": [{"name": "send_email", "description": "Compose and send an email with optional attachments.\n\nThis function allows the user to compose an email with various options,\nincluding multiple recipients, CC, BCC, and file attachments.", "arguments": {"to": {"description": "A list of recipient email addresses.", "type": "List[str]", "required": true}, "subject": {"description": "The subject of the email.", "type": "str", "required": true}, "body": {"description": "The body text of the email.", "type": "str", "required": true}, "cc": {"description": "A list of CC recipient email addresses. Default is None.", "type": "Optional[List[str]]", "required": false, "default": null}, "bcc": {"description": "A list of BCC recipient email addresses. Default is None.", "type": "Optional[List[str]]", "required": false, "default": null}, "attachments": {"description": "list of URIs\npointing to the files to be attached to the email. These can be file URIs,\ncontent URIs, or any other valid Android resource URI. Default is None (meaning no attachments). ", "type": "List[str]", "required": false, "default": null}}, "examples": ["# Send an email with a content URI attachment\nsend_email(\n    to=[\"recipient@example.com\"],\n    subject=\"Document\",\n    body=\"Please find the attached document.\",\n    attachments=[\"content://com.android.providers.downloads.documents/document/1234\"]\n)\n\n# Send an email with multiple attachments using different URI types\nsend_email(\n    to=[\"team@example.com\"],\n    subject=\"Project Files\",\n    body=\"Here are the latest project files.\",\n    attachments=[\n        \"content://media/external/images/media/5678\",\n        \"content://com.android.externalstorage.documents/document/primary%3ADownload%2Freport.pdf\"\n    ]\n)"]}]}
{"query": "I need to dispatch an urgent email to both alexsmith@example.com and samjohnson@example.com, subject 'Urgent Project Update', explaining the recent changes in the project plan. Include a CC to the supervisor at supervisor@example.com.", "answers": [{"id": 0, "name": "send_email", "arguments": {"to": ["alexsmith@example.com", "samjohnson@example.com"], "subject": "Urgent Project Update", "body": "Dear Alex and Sam, please be informed about the recent changes in the project plan as discussed.", "cc": ["supervisor@example.com"]}}], "tools": [{"name": "send_email", "description": "Compose and send an email with optional attachments.\n\nThis function allows the user to compose an email with various options,\nincluding multiple recipients, CC, BCC, and file attachments.", "arguments": {"to": {"description": "A list of recipient email addresses.", "type": "List[str]", "required": true}, "subject": {"description": "The subject of the email.", "type": "str", "required": true}, "body": {"description": "The body text of the email.", "type": "str", "required": true}, "cc": {"description": "A list of CC recipient email addresses. Default is None.", "type": "Optional[List[str]]", "required": false, "default": null}, "bcc": {"description": "A list of BCC recipient email addresses. Default is None.", "type": "Optional[List[str]]", "required": false, "default": null}, "attachments": {"description": "list of URIs\npointing to the files to be attached to the email. These can be file URIs,\ncontent URIs, or any other valid Android resource URI. Default is None (meaning no attachments). ", "type": "List[str]", "required": false, "default": null}}, "examples": ["# Send an email with a content URI attachment\nsend_email(\n    to=[\"recipient@example.com\"],\n    subject=\"Document\",\n    body=\"Please find the attached document.\",\n    attachments=[\"content://com.android.providers.downloads.documents/document/1234\"]\n)\n\n# Send an email with multiple attachments using different URI types\nsend_email(\n    to=[\"team@example.com\"],\n    subject=\"Project Files\",\n    body=\"Here are the latest project files.\",\n    attachments=[\n        \"content://media/external/images/media/5678\",\n        \"content://com.android.externalstorage.documents/document/primary%3ADownload%2Freport.pdf\"\n    ]\n)"]}]}
{"query": "Compose an email to notify team@example.com about tomorrow's holiday announcement. The subject should be 'Holiday Notice' and mention that the office will be closed.", "answers": [{"id": 0, "name": "send_email", "arguments": {"to": ["team@example.com"], "subject": "Holiday Notice", "body": "Please be informed that the office will be closed tomorrow as per the holiday schedule."}}], "tools": [{"name": "send_email", "description": "Compose and send an email with optional attachments.\n\nThis function allows the user to compose an email with various options,\nincluding multiple recipients, CC, BCC, and file attachments.", "arguments": {"to": {"description": "A list of recipient email addresses.", "type": "List[str]", "required": true}, "subject": {"description": "The subject of the email.", "type": "str", "required": true}, "body": {"description": "The body text of the email.", "type": "str", "required": true}, "cc": {"description": "A list of CC recipient email addresses. Default is None.", "type": "Optional[List[str]]", "required": false, "default": null}, "bcc": {"description": "A list of BCC recipient email addresses. Default is None.", "type": "Optional[List[str]]", "required": false, "default": null}, "attachments": {"description": "list of URIs\npointing to the files to be attached to the email. These can be file URIs,\ncontent URIs, or any other valid Android resource URI. Default is None (meaning no attachments). ", "type": "List[str]", "required": false, "default": null}}, "examples": ["# Send an email with a content URI attachment\nsend_email(\n    to=[\"recipient@example.com\"],\n    subject=\"Document\",\n    body=\"Please find the attached document.\",\n    attachments=[\"content://com.android.providers.downloads.documents/document/1234\"]\n)\n\n# Send an email with multiple attachments using different URI types\nsend_email(\n    to=[\"team@example.com\"],\n    subject=\"Project Files\",\n    body=\"Here are the latest project files.\",\n    attachments=[\n        \"content://media/external/images/media/5678\",\n        \"content://com.android.externalstorage.documents/document/primary%3ADownload%2Freport.pdf\"\n    ]\n)"]}]}
{"query": "Would it be possible for you to forward a promotional email to clients@example.com with 'New Product Launch' as the subject and also BCC our other franchises via franchises@example.com? The email should discuss our new product range coming this fall.", "answers": [{"id": 0, "name": "send_email", "arguments": {"to": ["clients@example.com"], "subject": "New Product Launch", "body": "We are excited to introduce our new product range coming this fall. Stay tuned for more updates.", "bcc": ["franchises@example.com"]}}], "tools": [{"name": "send_email", "description": "Compose and send an email with optional attachments.\n\nThis function allows the user to compose an email with various options,\nincluding multiple recipients, CC, BCC, and file attachments.", "arguments": {"to": {"description": "A list of recipient email addresses.", "type": "List[str]", "required": true}, "subject": {"description": "The subject of the email.", "type": "str", "required": true}, "body": {"description": "The body text of the email.", "type": "str", "required": true}, "cc": {"description": "A list of CC recipient email addresses. Default is None.", "type": "Optional[List[str]]", "required": false, "default": null}, "bcc": {"description": "A list of BCC recipient email addresses. Default is None.", "type": "Optional[List[str]]", "required": false, "default": null}, "attachments": {"description": "list of URIs\npointing to the files to be attached to the email. These can be file URIs,\ncontent URIs, or any other valid Android resource URI. Default is None (meaning no attachments). ", "type": "List[str]", "required": false, "default": null}}, "examples": ["# Send an email with a content URI attachment\nsend_email(\n    to=[\"recipient@example.com\"],\n    subject=\"Document\",\n    body=\"Please find the attached document.\",\n    attachments=[\"content://com.android.providers.downloads.documents/document/1234\"]\n)\n\n# Send an email with multiple attachments using different URI types\nsend_email(\n    to=[\"team@example.com\"],\n    subject=\"Project Files\",\n    body=\"Here are the latest project files.\",\n    attachments=[\n        \"content://media/external/images/media/5678\",\n        \"content://com.android.externalstorage.documents/document/primary%3ADownload%2Freport.pdf\"\n    ]\n)"]}]}
{"query": "Send a brief to legalteam@example.com having the subject 'Legal Document Review' which includes a request to examine the attached legal documents. Attach these files: 'file:///path/to/legal_document1.pdf' and 'file:///path/to/legal_document2.pdf'.", "answers": [{"id": 0, "name": "send_email", "arguments": {"to": ["legalteam@example.com"], "subject": "Legal Document Review", "body": "Please review the attached legal documents and provide feedback.", "attachments": ["file:///path/to/legal_document1.pdf", "file:///path/to/legal_document2.pdf"]}}], "tools": [{"name": "send_email", "description": "Compose and send an email with optional attachments.\n\nThis function allows the user to compose an email with various options,\nincluding multiple recipients, CC, BCC, and file attachments.", "arguments": {"to": {"description": "A list of recipient email addresses.", "type": "List[str]", "required": true}, "subject": {"description": "The subject of the email.", "type": "str", "required": true}, "body": {"description": "The body text of the email.", "type": "str", "required": true}, "cc": {"description": "A list of CC recipient email addresses. Default is None.", "type": "Optional[List[str]]", "required": false, "default": null}, "bcc": {"description": "A list of BCC recipient email addresses. Default is None.", "type": "Optional[List[str]]", "required": false, "default": null}, "attachments": {"description": "list of URIs\npointing to the files to be attached to the email. These can be file URIs,\ncontent URIs, or any other valid Android resource URI. Default is None (meaning no attachments). ", "type": "List[str]", "required": false, "default": null}}, "examples": ["# Send an email with a content URI attachment\nsend_email(\n    to=[\"recipient@example.com\"],\n    subject=\"Document\",\n    body=\"Please find the attached document.\",\n    attachments=[\"content://com.android.providers.downloads.documents/document/1234\"]\n)\n\n# Send an email with multiple attachments using different URI types\nsend_email(\n    to=[\"team@example.com\"],\n    subject=\"Project Files\",\n    body=\"Here are the latest project files.\",\n    attachments=[\n        \"content://media/external/images/media/5678\",\n        \"content://com.android.externalstorage.documents/document/primary%3ADownload%2Freport.pdf\"\n    ]\n)"]}]}
{"query": "Please draft an email for the HR department at hrdepartment@example.com. It should be titled 'Employee Satisfaction Survey Results' and should share insights from our recent internal survey. No one else needs to see this email.", "answers": [{"id": 0, "name": "send_email", "arguments": {"to": ["hrdepartment@example.com"], "subject": "Employee Satisfaction Survey Results", "body": "Attached are the insights from our recent employee satisfaction survey for your review."}}], "tools": [{"name": "send_email", "description": "Compose and send an email with optional attachments.\n\nThis function allows the user to compose an email with various options,\nincluding multiple recipients, CC, BCC, and file attachments.", "arguments": {"to": {"description": "A list of recipient email addresses.", "type": "List[str]", "required": true}, "subject": {"description": "The subject of the email.", "type": "str", "required": true}, "body": {"description": "The body text of the email.", "type": "str", "required": true}, "cc": {"description": "A list of CC recipient email addresses. Default is None.", "type": "Optional[List[str]]", "required": false, "default": null}, "bcc": {"description": "A list of BCC recipient email addresses. Default is None.", "type": "Optional[List[str]]", "required": false, "default": null}, "attachments": {"description": "list of URIs\npointing to the files to be attached to the email. These can be file URIs,\ncontent URIs, or any other valid Android resource URI. Default is None (meaning no attachments). ", "type": "List[str]", "required": false, "default": null}}, "examples": ["# Send an email with a content URI attachment\nsend_email(\n    to=[\"recipient@example.com\"],\n    subject=\"Document\",\n    body=\"Please find the attached document.\",\n    attachments=[\"content://com.android.providers.downloads.documents/document/1234\"]\n)\n\n# Send an email with multiple attachments using different URI types\nsend_email(\n    to=[\"team@example.com\"],\n    subject=\"Project Files\",\n    body=\"Here are the latest project files.\",\n    attachments=[\n        \"content://media/external/images/media/5678\",\n        \"content://com.android.externalstorage.documents/document/primary%3ADownload%2Freport.pdf\"\n    ]\n)"]}]}
{"query": "Issue a courtesy email to our guests at guests@example.com concerning the conference next month. The subject should state 'Upcoming Conference Details' and please elaborate on the dates, venue, and keynote speakers.", "answers": [{"id": 0, "name": "send_email", "arguments": {"to": ["guests@example.com"], "subject": "Upcoming Conference Details", "body": "We are pleased to inform you about our upcoming conference. Details: Dates, Venue, and Keynote Speakers."}}], "tools": [{"name": "send_email", "description": "Compose and send an email with optional attachments.\n\nThis function allows the user to compose an email with various options,\nincluding multiple recipients, CC, BCC, and file attachments.", "arguments": {"to": {"description": "A list of recipient email addresses.", "type": "List[str]", "required": true}, "subject": {"description": "The subject of the email.", "type": "str", "required": true}, "body": {"description": "The body text of the email.", "type": "str", "required": true}, "cc": {"description": "A list of CC recipient email addresses. Default is None.", "type": "Optional[List[str]]", "required": false, "default": null}, "bcc": {"description": "A list of BCC recipient email addresses. Default is None.", "type": "Optional[List[str]]", "required": false, "default": null}, "attachments": {"description": "list of URIs\npointing to the files to be attached to the email. These can be file URIs,\ncontent URIs, or any other valid Android resource URI. Default is None (meaning no attachments). ", "type": "List[str]", "required": false, "default": null}}, "examples": ["# Send an email with a content URI attachment\nsend_email(\n    to=[\"recipient@example.com\"],\n    subject=\"Document\",\n    body=\"Please find the attached document.\",\n    attachments=[\"content://com.android.providers.downloads.documents/document/1234\"]\n)\n\n# Send an email with multiple attachments using different URI types\nsend_email(\n    to=[\"team@example.com\"],\n    subject=\"Project Files\",\n    body=\"Here are the latest project files.\",\n    attachments=[\n        \"content://media/external/images/media/5678\",\n        \"content://com.android.externalstorage.documents/document/primary%3ADownload%2Freport.pdf\"\n    ]\n)"]}]}
{"query": "Create an email to send to info@example.com with the title 'Request for Information'. It should ask for the latest updates on their services and whether there are any new offerings available.", "answers": [{"id": 0, "name": "send_email", "arguments": {"to": ["info@example.com"], "subject": "Request for Information", "body": "Could you please provide the latest updates on your services and any new offerings?"}}], "tools": [{"name": "send_email", "description": "Compose and send an email with optional attachments.\n\nThis function allows the user to compose an email with various options,\nincluding multiple recipients, CC, BCC, and file attachments.", "arguments": {"to": {"description": "A list of recipient email addresses.", "type": "List[str]", "required": true}, "subject": {"description": "The subject of the email.", "type": "str", "required": true}, "body": {"description": "The body text of the email.", "type": "str", "required": true}, "cc": {"description": "A list of CC recipient email addresses. Default is None.", "type": "Optional[List[str]]", "required": false, "default": null}, "bcc": {"description": "A list of BCC recipient email addresses. Default is None.", "type": "Optional[List[str]]", "required": false, "default": null}, "attachments": {"description": "list of URIs\npointing to the files to be attached to the email. These can be file URIs,\ncontent URIs, or any other valid Android resource URI. Default is None (meaning no attachments). ", "type": "List[str]", "required": false, "default": null}}, "examples": ["# Send an email with a content URI attachment\nsend_email(\n    to=[\"recipient@example.com\"],\n    subject=\"Document\",\n    body=\"Please find the attached document.\",\n    attachments=[\"content://com.android.providers.downloads.documents/document/1234\"]\n)\n\n# Send an email with multiple attachments using different URI types\nsend_email(\n    to=[\"team@example.com\"],\n    subject=\"Project Files\",\n    body=\"Here are the latest project files.\",\n    attachments=[\n        \"content://media/external/images/media/5678\",\n        \"content://com.android.externalstorage.documents/document/primary%3ADownload%2Freport.pdf\"\n    ]\n)"]}]}
{"query": "Please send a message titled 'Meeting Update' with the content 'Meeting has been rescheduled to 3 PM' to the number 2125550198.", "answers": [{"id": 0, "name": "send_message", "arguments": {"phone_number": "2125550198", "subject": "Meeting Update", "body": "Meeting has been rescheduled to 3 PM"}}], "tools": [{"name": "send_message", "description": "Send a message with attachments.\n\nThis function helps user to compose and send a message with optional attachments to a phone number.", "arguments": {"phone_number": {"description": "The phone number to send the message to.", "type": "str", "required": true}, "subject": {"description": "The subject of the message.", "type": "str", "required": true}, "body": {"description": "The body text of the message.", "type": "str", "required": true}, "attachments": {"description": "A list of URIs pointing to the files to be attached to the message.\nDefault is None (meaning no attachments).", "type": "List[str]", "required": false, "default": null}}}]}
{"query": "Could you dispatch the following message: 'Happy Birthday!' to 1234567890 and attach a picture located at 'http://example.com/birthday.jpg'?", "answers": [{"id": 0, "name": "send_message", "arguments": {"phone_number": "1234567890", "subject": "Happy Birthday!", "body": "Happy Birthday!", "attachments": ["http://example.com/birthday.jpg"]}}], "tools": [{"name": "send_message", "description": "Send a message with attachments.\n\nThis function helps user to compose and send a message with optional attachments to a phone number.", "arguments": {"phone_number": {"description": "The phone number to send the message to.", "type": "str", "required": true}, "subject": {"description": "The subject of the message.", "type": "str", "required": true}, "body": {"description": "The body text of the message.", "type": "str", "required": true}, "attachments": {"description": "A list of URIs pointing to the files to be attached to the message.\nDefault is None (meaning no attachments).", "type": "List[str]", "required": false, "default": null}}}]}
{"query": "I need to alert John at 9876543210 about the postponement of our project deadline. The subject should be 'Project Deadline Postponed' and the body should read 'The project deadline has been postponed by one week.'", "answers": [{"id": 0, "name": "send_message", "arguments": {"phone_number": "9876543210", "subject": "Project Deadline Postponed", "body": "The project deadline has been postponed by one week."}}], "tools": [{"name": "send_message", "description": "Send a message with attachments.\n\nThis function helps user to compose and send a message with optional attachments to a phone number.", "arguments": {"phone_number": {"description": "The phone number to send the message to.", "type": "str", "required": true}, "subject": {"description": "The subject of the message.", "type": "str", "required": true}, "body": {"description": "The body text of the message.", "type": "str", "required": true}, "attachments": {"description": "A list of URIs pointing to the files to be attached to the message.\nDefault is None (meaning no attachments).", "type": "List[str]", "required": false, "default": null}}}]}
{"query": "Compose and forward a message to 1112223333 with the subject 'System Maintenance' and body 'System maintenance scheduled for 10pm tonight'. Attach the maintenance protocol document from 'http://example.com/maintenance.pdf'.", "answers": [{"id": 0, "name": "send_message", "arguments": {"phone_number": "1112223333", "subject": "System Maintenance", "body": "System maintenance scheduled for 10pm tonight", "attachments": ["http://example.com/maintenance.pdf"]}}], "tools": [{"name": "send_message", "description": "Send a message with attachments.\n\nThis function helps user to compose and send a message with optional attachments to a phone number.", "arguments": {"phone_number": {"description": "The phone number to send the message to.", "type": "str", "required": true}, "subject": {"description": "The subject of the message.", "type": "str", "required": true}, "body": {"description": "The body text of the message.", "type": "str", "required": true}, "attachments": {"description": "A list of URIs pointing to the files to be attached to the message.\nDefault is None (meaning no attachments).", "type": "List[str]", "required": false, "default": null}}}]}
{"query": "Send an SMS to 5559990007 saying 'Urgent: Server Downtime', and include the message 'All servers are currently down. Technicians are working on the issue.'", "answers": [{"id": 0, "name": "send_message", "arguments": {"phone_number": "5559990007", "subject": "Urgent: Server Downtime", "body": "All servers are currently down. Technicians are working on the issue."}}], "tools": [{"name": "send_message", "description": "Send a message with attachments.\n\nThis function helps user to compose and send a message with optional attachments to a phone number.", "arguments": {"phone_number": {"description": "The phone number to send the message to.", "type": "str", "required": true}, "subject": {"description": "The subject of the message.", "type": "str", "required": true}, "body": {"description": "The body text of the message.", "type": "str", "required": true}, "attachments": {"description": "A list of URIs pointing to the files to be attached to the message.\nDefault is None (meaning no attachments).", "type": "List[str]", "required": false, "default": null}}}]}
{"query": "Forward a notice to 4561237890 regarding the upcoming conference. The subject should be 'Conference Reminder', and the text should read 'Reminder: The annual conference is happening next Wednesday.'", "answers": [{"id": 0, "name": "send_message", "arguments": {"phone_number": "4561237890", "subject": "Conference Reminder", "body": "Reminder: The annual conference is happening next Wednesday."}}], "tools": [{"name": "send_message", "description": "Send a message with attachments.\n\nThis function helps user to compose and send a message with optional attachments to a phone number.", "arguments": {"phone_number": {"description": "The phone number to send the message to.", "type": "str", "required": true}, "subject": {"description": "The subject of the message.", "type": "str", "required": true}, "body": {"description": "The body text of the message.", "type": "str", "required": true}, "attachments": {"description": "A list of URIs pointing to the files to be attached to the message.\nDefault is None (meaning no attachments).", "type": "List[str]", "required": false, "default": null}}}]}
{"query": "Could you send a quick text to the number 3032049023 informing them about the change in lunch venue? Title it 'Change in Lunch Venue' and write 'The venue for today's lunch has been changed to Cafe Blue.'", "answers": [{"id": 0, "name": "send_message", "arguments": {"phone_number": "3032049023", "subject": "Change in Lunch Venue", "body": "The venue for today's lunch has been changed to Cafe Blue."}}], "tools": [{"name": "send_message", "description": "Send a message with attachments.\n\nThis function helps user to compose and send a message with optional attachments to a phone number.", "arguments": {"phone_number": {"description": "The phone number to send the message to.", "type": "str", "required": true}, "subject": {"description": "The subject of the message.", "type": "str", "required": true}, "body": {"description": "The body text of the message.", "type": "str", "required": true}, "attachments": {"description": "A list of URIs pointing to the files to be attached to the message.\nDefault is None (meaning no attachments).", "type": "List[str]", "required": false, "default": null}}}]}
{"query": "I want to notify my manager at 8887776665 about the completion of the quarterly report. Please use 'Quarterly Report Completed' as the subject, and mention 'The quarterly report is ready for your review.' in the body.", "answers": [{"id": 0, "name": "send_message", "arguments": {"phone_number": "8887776665", "subject": "Quarterly Report Completed", "body": "The quarterly report is ready for your review."}}], "tools": [{"name": "send_message", "description": "Send a message with attachments.\n\nThis function helps user to compose and send a message with optional attachments to a phone number.", "arguments": {"phone_number": {"description": "The phone number to send the message to.", "type": "str", "required": true}, "subject": {"description": "The subject of the message.", "type": "str", "required": true}, "body": {"description": "The body text of the message.", "type": "str", "required": true}, "attachments": {"description": "A list of URIs pointing to the files to be attached to the message.\nDefault is None (meaning no attachments).", "type": "List[str]", "required": false, "default": null}}}]}
{"query": "Send a thank you message to 3095017031 with the subject 'Appreciation' and attach a thank you card image from 'https://example.com/thankyou.jpg'. Body should read 'Thanks for your hard work on the project.'", "answers": [{"id": 0, "name": "send_message", "arguments": {"phone_number": "3095017031", "subject": "Appreciation", "body": "Thanks for your hard work on the project.", "attachments": ["https://example.com/thankyou.jpg"]}}], "tools": [{"name": "send_message", "description": "Send a message with attachments.\n\nThis function helps user to compose and send a message with optional attachments to a phone number.", "arguments": {"phone_number": {"description": "The phone number to send the message to.", "type": "str", "required": true}, "subject": {"description": "The subject of the message.", "type": "str", "required": true}, "body": {"description": "The body text of the message.", "type": "str", "required": true}, "attachments": {"description": "A list of URIs pointing to the files to be attached to the message.\nDefault is None (meaning no attachments).", "type": "List[str]", "required": false, "default": null}}}]}
{"query": "Would you mind sending a message to 8009001000 with the subject 'Invoice Inquiry' and body saying 'Please send the latest invoice for your services.'?", "answers": [{"id": 0, "name": "send_message", "arguments": {"phone_number": "8009001000", "subject": "Invoice Inquiry", "body": "Please send the latest invoice for your services."}}], "tools": [{"name": "send_message", "description": "Send a message with attachments.\n\nThis function helps user to compose and send a message with optional attachments to a phone number.", "arguments": {"phone_number": {"description": "The phone number to send the message to.", "type": "str", "required": true}, "subject": {"description": "The subject of the message.", "type": "str", "required": true}, "body": {"description": "The body text of the message.", "type": "str", "required": true}, "attachments": {"description": "A list of URIs pointing to the files to be attached to the message.\nDefault is None (meaning no attachments).", "type": "List[str]", "required": false, "default": null}}}]}
{"query": "Notify 6007008009 regarding the software upgrade. Use 'Software Upgrade Notice' as the subject and include 'Please note the software upgrade will occur at midnight tonight.' in the message body.", "answers": [{"id": 0, "name": "send_message", "arguments": {"phone_number": "6007008009", "subject": "Software Upgrade Notice", "body": "Please note the software upgrade will occur at midnight tonight."}}], "tools": [{"name": "send_message", "description": "Send a message with attachments.\n\nThis function helps user to compose and send a message with optional attachments to a phone number.", "arguments": {"phone_number": {"description": "The phone number to send the message to.", "type": "str", "required": true}, "subject": {"description": "The subject of the message.", "type": "str", "required": true}, "body": {"description": "The body text of the message.", "type": "str", "required": true}, "attachments": {"description": "A list of URIs pointing to the files to be attached to the message.\nDefault is None (meaning no attachments).", "type": "List[str]", "required": false, "default": null}}}]}
{"query": "Send the RSVP confirmation to 2123134151, subject should be 'RSVP Confirmation', and the body must state 'Your RSVP has been confirmed for the event on Friday.'", "answers": [{"id": 0, "name": "send_message", "arguments": {"phone_number": "2123134151", "subject": "RSVP Confirmation", "body": "Your RSVP has been confirmed for the event on Friday."}}], "tools": [{"name": "send_message", "description": "Send a message with attachments.\n\nThis function helps user to compose and send a message with optional attachments to a phone number.", "arguments": {"phone_number": {"description": "The phone number to send the message to.", "type": "str", "required": true}, "subject": {"description": "The subject of the message.", "type": "str", "required": true}, "body": {"description": "The body text of the message.", "type": "str", "required": true}, "attachments": {"description": "A list of URIs pointing to the files to be attached to the message.\nDefault is None (meaning no attachments).", "type": "List[str]", "required": false, "default": null}}}]}
{"query": "Please contact 9090807060 with the subject 'Workshop Registration' and the message 'You are successfully registered for the workshop next thursday.'", "answers": [{"id": 0, "name": "send_message", "arguments": {"phone_number": "9090807060", "subject": "Workshop Registration", "body": "You are successfully registered for the workshop next thursday."}}], "tools": [{"name": "send_message", "description": "Send a message with attachments.\n\nThis function helps user to compose and send a message with optional attachments to a phone number.", "arguments": {"phone_number": {"description": "The phone number to send the message to.", "type": "str", "required": true}, "subject": {"description": "The subject of the message.", "type": "str", "required": true}, "body": {"description": "The body text of the message.", "type": "str", "required": true}, "attachments": {"description": "A list of URIs pointing to the files to be attached to the message.\nDefault is None (meaning no attachments).", "type": "List[str]", "required": false, "default": null}}}]}
{"query": "Let 2033044055 know that their application has been processed. Use 'Application Processed' as subject and 'Your application has been processed. We will contact you shortly.' as the message content.", "answers": [{"id": 0, "name": "send_message", "arguments": {"phone_number": "2033044055", "subject": "Application Processed", "body": "Your application has been processed. We will contact you shortly."}}], "tools": [{"name": "send_message", "description": "Send a message with attachments.\n\nThis function helps user to compose and send a message with optional attachments to a phone number.", "arguments": {"phone_number": {"description": "The phone number to send the message to.", "type": "str", "required": true}, "subject": {"description": "The subject of the message.", "type": "str", "required": true}, "body": {"description": "The body text of the message.", "type": "str", "required": true}, "attachments": {"description": "A list of URIs pointing to the files to be attached to the message.\nDefault is None (meaning no attachments).", "type": "List[str]", "required": false, "default": null}}}]}
{"query": "Could you perform sending an urgent message to 7080901020? The subject has to be 'Account Security Alert' and the content should be 'Suspicious activity detected in your account. Please verify your transactions.'", "answers": [{"id": 0, "name": "send_message", "arguments": {"phone_number": "7080901020", "subject": "Account Security Alert", "body": "Suspicious activity detected in your account. Please verify your transactions."}}], "tools": [{"name": "send_message", "description": "Send a message with attachments.\n\nThis function helps user to compose and send a message with optional attachments to a phone number.", "arguments": {"phone_number": {"description": "The phone number to send the message to.", "type": "str", "required": true}, "subject": {"description": "The subject of the message.", "type": "str", "required": true}, "body": {"description": "The body text of the message.", "type": "str", "required": true}, "attachments": {"description": "A list of URIs pointing to the files to be attached to the message.\nDefault is None (meaning no attachments).", "type": "List[str]", "required": false, "default": null}}}]}
